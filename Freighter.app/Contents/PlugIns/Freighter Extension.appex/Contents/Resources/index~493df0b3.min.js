!(function (e) {
  function t(t) {
    for (
      var n, c, l = t[0], o = t[1], i = t[2], d = 0, m = [];
      d < l.length;
      d++
    )
      (c = l[d]),
        Object.prototype.hasOwnProperty.call(r, c) && r[c] && m.push(r[c][0]),
        (r[c] = 0);
    for (n in o) Object.prototype.hasOwnProperty.call(o, n) && (e[n] = o[n]);
    for (u && u(t); m.length; ) m.shift()();
    return s.push.apply(s, i || []), a();
  }
  function a() {
    for (var e, t = 0; t < s.length; t++) {
      for (var a = s[t], n = !0, l = 1; l < a.length; l++) {
        var o = a[l];
        0 !== r[o] && (n = !1);
      }
      n && (s.splice(t--, 1), (e = c((c.s = a[0]))));
    }
    return e;
  }
  var n = {},
    r = { 2: 0 },
    s = [];
  function c(t) {
    if (n[t]) return n[t].exports;
    var a = (n[t] = { i: t, l: !1, exports: {} });
    return e[t].call(a.exports, a, a.exports, c), (a.l = !0), a.exports;
  }
  (c.e = function (e) {
    var t = [],
      a = r[e];
    if (0 !== a)
      if (a) t.push(a[2]);
      else {
        var n = new Promise(function (t, n) {
          a = r[e] = [t, n];
        });
        t.push((a[2] = n));
        var s,
          l = document.createElement("script");
        (l.charset = "utf-8"),
          (l.timeout = 120),
          c.nc && l.setAttribute("nonce", c.nc),
          (l.src = (function (e) {
            return c.p + "" + e + ".js";
          })(e));
        var o = new Error();
        s = function (t) {
          (l.onerror = l.onload = null), clearTimeout(i);
          var a = r[e];
          if (0 !== a) {
            if (a) {
              var n = t && ("load" === t.type ? "missing" : t.type),
                s = t && t.target && t.target.src;
              (o.message =
                "Loading chunk " + e + " failed.\n(" + n + ": " + s + ")"),
                (o.name = "ChunkLoadError"),
                (o.type = n),
                (o.request = s),
                a[1](o);
            }
            r[e] = void 0;
          }
        };
        var i = setTimeout(function () {
          s({ type: "timeout", target: l });
        }, 12e4);
        (l.onerror = l.onload = s), document.head.appendChild(l);
      }
    return Promise.all(t);
  }),
    (c.m = e),
    (c.c = n),
    (c.d = function (e, t, a) {
      c.o(e, t) || Object.defineProperty(e, t, { enumerable: !0, get: a });
    }),
    (c.r = function (e) {
      "undefined" != typeof Symbol &&
        Symbol.toStringTag &&
        Object.defineProperty(e, Symbol.toStringTag, { value: "Module" }),
        Object.defineProperty(e, "__esModule", { value: !0 });
    }),
    (c.t = function (e, t) {
      if ((1 & t && (e = c(e)), 8 & t)) return e;
      if (4 & t && "object" == typeof e && e && e.__esModule) return e;
      var a = Object.create(null);
      if (
        (c.r(a),
        Object.defineProperty(a, "default", { enumerable: !0, value: e }),
        2 & t && "string" != typeof e)
      )
        for (var n in e)
          c.d(
            a,
            n,
            function (t) {
              return e[t];
            }.bind(null, n)
          );
      return a;
    }),
    (c.n = function (e) {
      var t =
        e && e.__esModule
          ? function () {
              return e.default;
            }
          : function () {
              return e;
            };
      return c.d(t, "a", t), t;
    }),
    (c.o = function (e, t) {
      return Object.prototype.hasOwnProperty.call(e, t);
    }),
    (c.p = ""),
    (c.oe = function (e) {
      throw (console.error(e), e);
    });
  var l = (window.webpackJsonp = window.webpackJsonp || []),
    o = l.push.bind(l);
  (l.push = t), (l = l.slice());
  for (var i = 0; i < l.length; i++) t(l[i]);
  var u = o;
  s.push([1262, 6, 5, 7, 4, 3]), a();
})({
  10: function (e, t, a) {
    "use strict";
    a.d(t, "b", function () {
      return n;
    }),
      a.d(t, "n", function () {
        return r;
      }),
      a.d(t, "o", function () {
        return s;
      }),
      a.d(t, "c", function () {
        return c;
      }),
      a.d(t, "h", function () {
        return l;
      }),
      a.d(t, "m", function () {
        return o;
      }),
      a.d(t, "a", function () {
        return i;
      }),
      a.d(t, "f", function () {
        return u;
      }),
      a.d(t, "g", function () {
        return d;
      }),
      a.d(t, "e", function () {
        return m;
      }),
      a.d(t, "d", function () {
        return E;
      }),
      a.d(t, "j", function () {
        return p;
      }),
      a.d(t, "k", function () {
        return b;
      }),
      a.d(t, "l", function () {
        return _;
      }),
      a.d(t, "i", function () {
        return h;
      }),
      a.d(t, "s", function () {
        return w;
      }),
      a.d(t, "r", function () {
        return f;
      }),
      a.d(t, "q", function () {
        return g;
      }),
      a.d(t, "p", function () {
        return v;
      }),
      a.d(t, "t", function () {
        return y;
      });
    const n = "allowlist",
      r = "keyId",
      s = "keyIdList",
      c = "applicationState",
      l = "dataSharingStatus",
      o = "keyDerivationNumber",
      i = "accountNameList",
      u = "cachedBlockedAccountsId",
      d = "cachedBlockedDomainsId",
      m = "cachedAssetIconsId",
      E = "cachedAssetDomainsId",
      p = "isValidatingMemo",
      b = "isValidatingSafety",
      _ = "isValidatingSafeAssets",
      h = "isExperimentalMode",
      w = "recentAddresses",
      f = "network",
      g = "networksList",
      v = "metricsData",
      y = "tokenIdList";
  },
  102: function (e, t, a) {
    "use strict";
    a.d(t, "a", function () {
      return c;
    });
    var n = a(6),
      r = a.n(n);
    const s = (e) => !e.includes("https"),
      c = (e) => new r.a.Server(e, { allowHttp: s(e) });
  },
  11: function (e, t, a) {
    "use strict";
    var n, r;
    a.d(t, "e", function () {
      return n;
    }),
      a.d(t, "d", function () {
        return r;
      }),
      a.d(t, "b", function () {
        return s;
      }),
      a.d(t, "c", function () {
        return c;
      }),
      a.d(t, "a", function () {
        return l;
      }),
      (function (e) {
        (e.CREATE_ACCOUNT = "CREATE_ACCOUNT"),
          (e.FUND_ACCOUNT = "FUND_ACCOUNT"),
          (e.ADD_ACCOUNT = "ADD_ACCOUNT"),
          (e.IMPORT_ACCOUNT = "IMPORT_ACCOUNT"),
          (e.IMPORT_HARDWARE_WALLET = "IMPORT_HARDWARE_WALLET"),
          (e.LOAD_ACCOUNT = "LOAD_ACCOUNT"),
          (e.MAKE_ACCOUNT_ACTIVE = "MAKE_ACCOUNT_ACTIVE"),
          (e.UPDATE_ACCOUNT_NAME = "UPDATE_ACCOUNT_NAME"),
          (e.GET_MNEMONIC_PHRASE = "GET_MNEMONIC_PHRASE"),
          (e.CONFIRM_MNEMONIC_PHRASE = "CONFIRM_MNEMONIC_PHRASE"),
          (e.RECOVER_ACCOUNT = "RECOVER_ACCOUNT"),
          (e.CONFIRM_PASSWORD = "CONFIRM_PASSWORD"),
          (e.REJECT_ACCESS = "REJECT_ACCESS"),
          (e.GRANT_ACCESS = "GRANT_ACCESS"),
          (e.SIGN_TRANSACTION = "SIGN_TRANSACTION"),
          (e.HANDLE_SIGNED_HW_TRANSACTION = "HANDLE_SIGNED_HW_TRANSACTION"),
          (e.REJECT_TRANSACTION = "REJECT_TRANSACTION"),
          (e.SIGN_FREIGHTER_TRANSACTION = "SIGN_FREIGHTER_TRANSACTION"),
          (e.SIGN_FREIGHTER_SOROBAN_TRANSACTION =
            "SIGN_FREIGHTER_SOROBAN_TRANSACTION"),
          (e.ADD_RECENT_ADDRESS = "ADD_RECENT_ADDRESS"),
          (e.LOAD_RECENT_ADDRESSES = "LOAD_RECENT_ADDRESSES"),
          (e.SIGN_OUT = "SIGN_OUT"),
          (e.SHOW_BACKUP_PHRASE = "SHOW_BACKUP_PHRASE"),
          (e.SAVE_SETTINGS = "SAVE_SETTINGS"),
          (e.LOAD_SETTINGS = "LOAD_SETTINGS"),
          (e.GET_CACHED_ASSET_ICON = "GET_CACHED_ASSET_ICON"),
          (e.CACHE_ASSET_ICON = "CACHE_ASSET_ICON"),
          (e.GET_CACHED_ASSET_DOMAIN = "GET_CACHED_ASSET_DOMAIN"),
          (e.CACHE_ASSET_DOMAIN = "CACHE_ASSET_DOMAIN"),
          (e.GET_BLOCKED_ACCOUNTS = "GET_BLOCKED_ACCOUNTS"),
          (e.GET_BLOCKED_DOMAINS = "GET_BLOCKED_DOMAINS"),
          (e.ADD_CUSTOM_NETWORK = "ADD_CUSTOM_NETWORK"),
          (e.CHANGE_NETWORK = "CHANGE_NETWORK"),
          (e.REMOVE_CUSTOM_NETWORK = "REMOVE_CUSTOM_NETWORK"),
          (e.EDIT_CUSTOM_NETWORK = "EDIT_CUSTOM_NETWORK"),
          (e.RESET_EXP_DATA = "RESET_EXP_DATA"),
          (e.ADD_TOKEN_ID = "ADD_TOKEN_ID"),
          (e.GET_TOKEN_IDS = "GET_TOKEN_IDS");
      })(n || (n = {})),
      (function (e) {
        (e.REQUEST_ACCESS = "REQUEST_ACCESS"),
          (e.SUBMIT_TRANSACTION = "SUBMIT_TRANSACTION"),
          (e.REQUEST_NETWORK = "REQUEST_NETWORK"),
          (e.REQUEST_NETWORK_DETAILS = "REQUEST_NETWORK_DETAILS"),
          (e.REQUEST_CONNECTION_STATUS = "REQUEST_CONNECTION_STATUS"),
          (e.REQUEST_ALLOWED_STATUS = "REQUEST_ALLOWED_STATUS"),
          (e.SET_ALLOWED_STATUS = "SET_ALLOWED_STATUS"),
          (e.REQUEST_USER_INFO = "REQUEST_USER_INFO");
      })(r || (r = {}));
    const s = "FREIGHTER_EXTERNAL_MSG_REQUEST",
      c = "FREIGHTER_EXTERNAL_MSG_RESPONSE",
      l = !1;
  },
  113: function (e, t, a) {
    "use strict";
    var n;
    a.d(t, "a", function () {
      return n;
    }),
      (function (e) {
        (e.LEDGER = "Ledger"), (e.NONE = "");
      })(n || (n = {}));
  },
  114: function (e, t, a) {
    "use strict";
    a.d(t, "a", function () {
      return r;
    }),
      a.d(t, "f", function () {
        return s;
      }),
      a.d(t, "d", function () {
        return c;
      }),
      a.d(t, "b", function () {
        return l;
      }),
      a.d(t, "c", function () {
        return o;
      }),
      a.d(t, "e", function () {
        return i;
      });
    var n = a(27);
    const r = (e) => new n.Address(e).toScVal(),
      s = (e) => Object(n.scValToBigInt)(e).toString(),
      c = (e) => {
        const t = n.xdr.ScVal.fromXDR(e, "base64");
        try {
          return s(t);
        } catch (e) {
          return console.error(e), 0;
        }
      },
      l = (e) => n.xdr.ScVal.fromXDR(e, "base64").str().toString(),
      o = (e) => n.xdr.ScVal.fromXDR(e, "base64").u32(),
      i = (e) => new n.ScInt(e).toI128();
  },
  1162: function (e, t) {
    e.exports =
      "data:image/svg+xml,%3Csvg width='16' height='16' viewBox='0 0 16 16' fill='none' xmlns='http://www.w3.org/2000/svg'%3E %3Cpath d='M14.9195 0L16 1.08189L14.6837 2.39806C15.1294 2.66543 15.4314 3.14928 15.4314 3.70528V12.8737C15.4314 13.7164 14.746 14.4018 13.9032 14.4018H2.67885L1.0805 16L0 14.9196L0.798433 14.1198H0.799926L2.04459 12.8737L14.9195 0ZM10.5811 2.17721L9.05289 3.70528H1.67746L1.67895 11.0785L0.14924 12.6081V3.70528C0.14924 2.86255 0.834644 2.17721 1.67746 2.17721H10.5811ZM13.9032 3.70528H13.3764L7.59481 9.48629L8.55443 10.5816L10.4647 8.67152L12.5451 11.3456H5.73529L4.20707 12.8737H13.9032V3.70528ZM3.96978 5.23335C4.17243 5.23335 4.36679 5.31385 4.51009 5.45713C4.65338 5.60042 4.73389 5.79475 4.73389 5.99739C4.73389 6.20002 4.65338 6.39436 4.51009 6.53764C4.36679 6.68093 4.17243 6.76143 3.96978 6.76143C3.76713 6.76143 3.57277 6.68093 3.42947 6.53764C3.28617 6.39436 3.20567 6.20002 3.20567 5.99739C3.20567 5.79475 3.28617 5.60042 3.42947 5.45713C3.57277 5.31385 3.76713 5.23335 3.96978 5.23335Z' fill='white' fill-opacity='0.4'/%3E %3C/svg%3E";
  },
  1220: function (e, t, a) {
    "use strict";
    (function (e) {
      a.d(t, "a", function () {
        return o;
      });
      var n = a(5),
        r = a(1258),
        s = a(1253),
        c = a(17),
        l = a(578);
      const o = () => {
        const t = Object(n.c)(c.i);
        return (
          e.env.SENTRY_KEY &&
            t &&
            r.b({
              dsn: e.env.SENTRY_KEY,
              release: "freighter@" + l.a,
              integrations: [new s.a.BrowserTracing()],
              tracesSampleRate: 1,
            }),
          t || r.a(500),
          null
        );
      };
    }.call(this, a(35)));
  },
  1229: function (e, t) {
    e.exports =
      "data:image/svg+xml,%3Csvg width='16' height='18' viewBox='0 0 16 18' fill='none' xmlns='http://www.w3.org/2000/svg'%3E %3Cpath d='M15 12.1551V5.77982C14.9997 5.50033 14.9277 5.22582 14.7912 4.98384C14.6547 4.74186 14.4585 4.54092 14.2222 4.40117L8.77778 1.21353C8.5413 1.07364 8.27306 1 8 1C7.72694 1 7.4587 1.07364 7.22222 1.21353L1.77778 4.40117C1.54154 4.54092 1.34532 4.74186 1.2088 4.98384C1.07229 5.22582 1.00028 5.50033 1 5.77982V12.1551C1.00028 12.4346 1.07229 12.7091 1.2088 12.9511C1.34532 13.1931 1.54154 13.394 1.77778 13.5338L7.22222 16.7214C7.4587 16.8613 7.72694 16.9349 8 16.9349C8.27306 16.9349 8.5413 16.8613 8.77778 16.7214L14.2222 13.5338C14.4585 13.394 14.6547 13.1931 14.7912 12.9511C14.9277 12.7091 14.9997 12.4346 15 12.1551Z' stroke='white' stroke-opacity='0.6' stroke-width='1.5' stroke-linecap='round' stroke-linejoin='round'/%3E %3Cpath d='M1.20996 4.95312L7.99996 8.97752L14.79 4.95312' stroke='white' stroke-opacity='0.6' stroke-width='1.5' stroke-linecap='round' stroke-linejoin='round'/%3E %3Cpath d='M8 16.9996V8.9668' stroke='white' stroke-opacity='0.6' stroke-width='1.5' stroke-linecap='round' stroke-linejoin='round'/%3E %3C/svg%3E";
  },
  1234: function (e, t) {
    e.exports =
      "data:image/svg+xml,%3Csvg width='24' height='24' viewBox='0 0 24 24' fill='none' xmlns='http://www.w3.org/2000/svg'%3E %3Cpath d='M12 0C5.3724 0 0 5.3724 0 12C0 18.6276 5.3724 24 12 24C18.6276 24 24 18.6276 24 12C24 5.3724 18.6276 0 12 0ZM15.9516 17.6484L10.8 12.4968V4.8H13.2V11.5032L17.6484 15.9516L15.9516 17.6484Z' fill='white'/%3E %3C/svg%3E";
  },
  1235: function (e, t) {
    e.exports =
      "data:image/svg+xml,%3Csvg width='24' height='24' viewBox='0 0 24 24' fill='none' xmlns='http://www.w3.org/2000/svg'%3E %3Cpath d='M3.27271 0.000109098C1.47821 0.000109098 0 1.47832 0 3.27282V20.7273C0 22.5349 1.46508 24 3.27271 24H21.8181C23.0235 24 23.9999 23.0236 23.9999 21.8182V6.54553C23.9999 5.34008 23.0235 4.36373 21.8181 4.36373H13.0908H3.27271C2.65632 4.36373 2.18181 3.88922 2.18181 3.27282C2.18181 2.65643 2.65632 2.18192 3.27271 2.18192H19.6363C19.7808 2.18396 19.9244 2.15725 20.0585 2.10335C20.1926 2.04944 20.3147 1.96941 20.4177 1.86791C20.5206 1.76641 20.6024 1.64546 20.6582 1.51209C20.714 1.37872 20.7427 1.23559 20.7427 1.09101C20.7427 0.946441 20.714 0.803311 20.6582 0.66994C20.6024 0.536569 20.5206 0.415617 20.4177 0.314115C20.3147 0.212612 20.1926 0.132583 20.0585 0.0786771C19.9244 0.0247714 19.7808 -0.00193531 19.6363 0.000109098H3.27271ZM19.6363 12.0001C20.8417 12.0001 21.8181 12.9764 21.8181 14.1819C21.8181 15.3873 20.8417 16.3637 19.6363 16.3637C18.4308 16.3637 17.4545 15.3873 17.4545 14.1819C17.4545 12.9764 18.4308 12.0001 19.6363 12.0001Z' fill='white'/%3E %3C/svg%3E";
  },
  1236: function (e, t) {
    e.exports =
      "data:image/svg+xml,%3Csvg width='24' height='24' viewBox='0 0 24 24' fill='none' xmlns='http://www.w3.org/2000/svg'%3E %3Cpath d='M12 0C11.4905 0 11.0769 0.413538 11.0769 0.923077V1.08173C11.0769 1.52296 10.7662 1.91662 10.3305 1.98678C10.1191 2.02093 9.90989 2.0605 9.70313 2.10757C9.27482 2.20542 8.84168 1.96292 8.67368 1.55769L8.61238 1.41346C8.41761 0.942692 7.87794 0.71837 7.40625 0.914063C6.93548 1.10883 6.71116 1.6485 6.90685 2.12019L6.96815 2.26803C7.138 2.67418 7.00217 3.155 6.6274 3.38762C6.44648 3.50024 6.26997 3.61822 6.09736 3.74099C5.7392 3.99668 5.24377 3.93848 4.93269 3.6274L4.82091 3.51563C4.45999 3.1547 3.87562 3.1547 3.51563 3.51563C3.15563 3.87655 3.15563 4.46091 3.51563 4.82091L3.6274 4.93269C3.93848 5.24377 3.99668 5.73828 3.74099 6.09736C3.61822 6.26997 3.50024 6.44648 3.38762 6.6274C3.155 7.00217 2.6733 7.13888 2.26623 6.96995L2.12019 6.90865C1.64942 6.71388 1.10795 6.93728 0.91226 7.40805C0.71749 7.87882 0.940889 8.41849 1.41166 8.61418L1.55589 8.67368C1.96112 8.84168 2.20542 9.27482 2.10757 9.70313C2.0605 9.90989 2.01913 10.1191 1.98498 10.3305C1.91575 10.7653 1.52296 11.0769 1.08173 11.0769H0.923077C0.413538 11.0769 0 11.4905 0 12C0 12.5095 0.413538 12.9231 0.923077 12.9231H1.08173C1.52296 12.9231 1.91662 13.2338 1.98678 13.6695C2.02093 13.8809 2.0605 14.0901 2.10757 14.2969C2.20542 14.7252 1.96292 15.1583 1.55769 15.3263L1.41346 15.3876C0.942692 15.5824 0.71837 16.1221 0.914063 16.5938C1.10883 17.0645 1.6485 17.2888 2.12019 17.0931L2.26803 17.0319C2.67511 16.8629 3.15588 16.9988 3.38942 17.3726C3.50204 17.5535 3.6191 17.7309 3.74279 17.9044C3.99848 18.2626 3.94028 18.758 3.62921 19.0691L3.51563 19.1809C3.1547 19.5418 3.1547 20.1262 3.51563 20.4862C3.87655 20.8462 4.46091 20.8471 4.82091 20.4862L4.9345 20.3744C5.24557 20.0633 5.7392 20.0033 6.09736 20.259C6.27089 20.3827 6.44828 20.5016 6.62921 20.6142C7.00305 20.8468 7.14068 21.3285 6.97175 21.7356L6.91046 21.8816C6.71569 22.3524 6.93909 22.8939 7.40986 23.0895C7.88063 23.2843 8.42029 23.0609 8.61599 22.5901L8.67548 22.4459C8.84348 22.0407 9.27662 21.7964 9.70493 21.8942C9.9117 21.9413 10.1209 21.9827 10.3323 22.0168C10.7653 22.0842 11.0769 22.477 11.0769 22.9183V23.0769C11.0769 23.5865 11.4905 24 12 24C12.5095 24 12.9231 23.5865 12.9231 23.0769V22.9183C12.9231 22.477 13.2338 22.0834 13.6695 22.0132C13.8809 21.9791 14.0901 21.9395 14.2969 21.8924C14.7252 21.7946 15.1583 22.0371 15.3263 22.4423L15.3876 22.5865C15.5824 23.0573 16.1221 23.2816 16.5938 23.0859C17.0645 22.8912 17.2888 22.3515 17.0931 21.8798L17.0319 21.732C16.8629 21.3249 16.9988 20.8441 17.3726 20.6106C17.5535 20.498 17.7309 20.3809 17.9044 20.2572C18.2626 20.0015 18.758 20.0597 19.0691 20.3708L19.1809 20.4844C19.5418 20.8453 20.1262 20.8453 20.4862 20.4844C20.8462 20.1235 20.8471 19.5391 20.4862 19.1791L20.3744 19.0655C20.0633 18.7544 20.0033 18.2608 20.259 17.9026C20.3827 17.7291 20.5016 17.5517 20.6142 17.3708C20.8468 16.9969 21.3285 16.8593 21.7356 17.0282L21.8816 17.0895C22.3524 17.2843 22.8939 17.0609 23.0895 16.5901C23.2843 16.1194 23.0609 15.5797 22.5901 15.384L22.4459 15.3245C22.0407 15.1565 21.7964 14.7234 21.8942 14.2951C21.9413 14.0883 21.9827 13.8791 22.0168 13.6677C22.0842 13.2347 22.477 12.9231 22.9183 12.9231H23.0769C23.5865 12.9231 24 12.5095 24 12C24 11.4905 23.5865 11.0769 23.0769 11.0769H22.9183C22.477 11.0769 22.0834 10.7662 22.0132 10.3305C21.9791 10.1191 21.9395 9.90989 21.8924 9.70313C21.7946 9.27482 22.0371 8.84168 22.4423 8.67368L22.5865 8.61238C23.0573 8.41761 23.2816 7.87794 23.0859 7.40625C22.8912 6.93548 22.3515 6.71116 21.8798 6.90685L21.732 6.96815C21.3249 7.13707 20.8441 7.00125 20.6106 6.6274C20.498 6.44648 20.3809 6.26909 20.2572 6.09555C20.0015 5.7374 20.0597 5.24197 20.3708 4.93089L20.4844 4.81911C20.8453 4.45819 20.8453 3.87382 20.4844 3.51382C20.1235 3.1529 19.5391 3.1529 19.1791 3.51382L19.0673 3.6274C18.7562 3.93848 18.2608 3.99848 17.9026 3.74279C17.7291 3.6191 17.5517 3.50024 17.3708 3.38762C16.9969 3.155 16.8611 2.6733 17.03 2.26623L17.0913 2.12019C17.2861 1.64942 17.0627 1.10795 16.5919 0.91226C16.1212 0.71749 15.5815 0.940889 15.3858 1.41166L15.3245 1.55589C15.1565 1.96112 14.7234 2.20542 14.2951 2.10757C14.0883 2.0605 13.8791 2.01913 13.6677 1.98498C13.2338 1.91575 12.9231 1.52296 12.9231 1.08173V0.923077C12.9231 0.413538 12.5095 0 12 0ZM12 4.61538C15.7649 4.61538 18.8664 7.43527 19.3215 11.0769H13.5956C13.4338 10.7968 13.2013 10.564 12.9212 10.402C12.6412 10.24 12.3235 10.1544 12 10.1538C11.9994 10.1538 11.9988 10.1538 11.9982 10.1538L9.13522 5.19231C10.0163 4.82098 10.9839 4.61538 12 4.61538ZM7.54147 6.1226L10.4026 11.0769C10.2401 11.3574 10.1543 11.6758 10.1538 12C10.1549 12.323 10.2407 12.64 10.4026 12.9195L7.53966 17.8756C5.76593 16.5268 4.61538 14.4001 4.61538 12C4.61538 9.59903 5.76659 7.47135 7.54147 6.1226ZM13.5974 12.9231H19.3215C18.8664 16.5647 15.7649 19.3846 12 19.3846C10.9839 19.3846 10.0163 19.179 9.13522 18.8077L11.9982 13.8462C11.9988 13.8462 11.9994 13.8462 12 13.8462C12.3238 13.8459 12.6419 13.7605 12.9222 13.5985C13.2026 13.4364 13.4354 13.2035 13.5974 12.9231V12.9231Z' fill='white'/%3E %3C/svg%3E";
  },
  1237: function (e, t) {
    e.exports =
      "data:image/svg+xml,%3Csvg width='24' height='24' viewBox='0 0 24 24' fill='none' xmlns='http://www.w3.org/2000/svg'%3E %3Cpath d='M12 0C5.373 0 0 5.373 0 12C0 18.627 5.373 24 12 24C18.627 24 24 18.627 24 12C24 5.373 18.627 0 12 0ZM12.006 19.001C10.199 19.001 8.405 18.304 7.051 16.95C5.719 15.619 5.009 13.839 5.011 12H3L6 9L9 12H7.008C7.007 13.314 7.515 14.585 8.465 15.536C10.166 17.238 12.836 17.487 14.819 16.132L15.948 17.782C14.751 18.601 13.375 19.001 12.006 19.001ZM18 15L15 12H16.992C16.993 10.686 16.485 9.415 15.535 8.464C13.833 6.762 11.164 6.514 9.181 7.868L8.052 6.218C10.827 4.319 14.568 4.67 16.948 7.05C18.28 8.381 18.99 10.161 18.988 12H21L18 15Z' fill='white'/%3E %3C/svg%3E";
  },
  1241: function (e, t) {
    e.exports =
      "data:image/svg+xml,%3Csvg width='14' height='14' viewBox='0 0 14 14' fill='none' xmlns='http://www.w3.org/2000/svg'%3E %3Cpath d='M11.1945 8.09091C11.3042 7.73756 11.3612 7.36997 11.3636 7V3.18182L7 1.54545L5.27636 2.18909M3.03455 3.03455L2.63636 3.18182V7C2.63636 10.2727 7 12.4545 7 12.4545C8.15474 11.8452 9.19256 11.0364 10.0655 10.0655M1 1L13 13' stroke='%23FFB017' stroke-width='1.5' stroke-linecap='round' stroke-linejoin='round'/%3E %3C/svg%3E";
  },
  1242: function (e, t) {
    e.exports =
      "data:image/svg+xml,%3Csvg width='14' height='14' viewBox='0 0 14 14' fill='none' xmlns='http://www.w3.org/2000/svg'%3E %3Cpath d='M8.8 5.2L5.2 8.8M5.2 5.2L8.8 8.8M4.516 1H9.484L13 4.516V9.484L9.484 13H4.516L1 9.484V4.516L4.516 1Z' stroke='white' stroke-width='1.5' stroke-linecap='round' stroke-linejoin='round'/%3E %3C/svg%3E";
  },
  1243: function (e, t) {
    e.exports =
      "data:image/svg+xml,%3Csvg width='14' height='12' viewBox='0 0 14 12' fill='none' xmlns='http://www.w3.org/2000/svg'%3E %3Cpath d='M6.99994 4.37116V6.58077M6.99994 8.79038H7.00568M6.018 1.53182L1.15392 9.34279C1.05363 9.50985 1.00057 9.69926 1 9.89217C0.999443 10.0851 1.0514 10.2748 1.15071 10.4424C1.25003 10.61 1.39323 10.7496 1.56607 10.8475C1.73892 10.9453 1.93538 10.9979 2.13592 11H11.8641C12.0646 10.9979 12.2611 10.9453 12.4339 10.8475C12.6068 10.7496 12.75 10.61 12.8493 10.4424C12.9486 10.2748 13.0006 10.0851 13 9.89217C12.9994 9.69926 12.9464 9.50985 12.8461 9.34279L7.982 1.53182C7.87963 1.36947 7.73548 1.23525 7.56347 1.14209C7.39146 1.04894 7.1974 1 7 1C6.8026 1 6.60854 1.04894 6.43653 1.14209C6.26452 1.23525 6.12037 1.36947 6.018 1.53182Z' stroke='white' stroke-width='1.5' stroke-linecap='round' stroke-linejoin='round'/%3E %3C/svg%3E";
  },
  1245: function (e, t) {
    e.exports =
      "data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 123.58 174.4'%3E%3Cdefs%3E%3Cstyle%3E.cls-1%7Bfill:%232273fa;%7D.cls-2%7Bfill:%23ffc900;%7D.cls-3%7Bfill:%2339b44a;%7D.cls-4%7Bfill:%23ffd2cf;%7D.cls-5%7Bfill:%23fff;%7D.cls-6%7Bfill:%23f97467;%7D.cls-7%7Bfill:%2364c3ff;%7D%3C/style%3E%3C/defs%3E%3Cg id='Layer_2' data-name='Layer 2'%3E%3Cg id='Layer_1-2' data-name='Layer 1'%3E%3Cpath class='cls-1' d='M103,75a16.65,16.65,0,0,0-4.83-6.14A27.76,27.76,0,0,1,95,65.58a7.8,7.8,0,0,1,.32-1.64c1-3.19,4.15-5.63,6.36-8.41,1.62-2.05,2.65-4.72,2-7a11.68,11.68,0,0,0-.65-2.91,16.65,16.65,0,0,0-4.83-6.14c-1.87-1.71-3.82-3.5-4.89-6.08s-1.12-5.76-2-8.51a13,13,0,0,0-12.8-8.85c-2.49.05-5,.62-7.44-.14-3.19-1-5.63-4.15-8.42-6.36a11.05,11.05,0,0,0-3.12-1.75c-1.66-.78-4.94-.5-6.83.24-2.62,1-4.44,3-6.15,4.83S43,16.73,40.42,17.8s-5.75,1.12-8.5,2a13,13,0,0,0-8.85,12.81c0,2.49.62,5-.14,7.44-1,3.19-4.15,5.63-6.36,8.41a11.42,11.42,0,0,0-1.68,2.9,4.66,4.66,0,0,0-.39,1.42,5.51,5.51,0,0,0-.08,1.76,11.87,11.87,0,0,0,.7,3.69c1,2.62,3,4.44,4.83,6.15a27,27,0,0,1,3.29,3.38,8.66,8.66,0,0,1-.31,1.58c-1,3.19-4.15,5.63-6.36,8.42a11.19,11.19,0,0,0-1.68,2.89,4.66,4.66,0,0,0-.39,1.42,5.51,5.51,0,0,0-.08,1.76,11.87,11.87,0,0,0,.7,3.69,15.56,15.56,0,0,0,4.32,5.68v23.37H35.6a13.73,13.73,0,0,0,4,.53c2.49,0,5-.62,7.44.14,3.19,1,5.63,4.15,8.42,6.36a11.08,11.08,0,0,0,3,1.71c1.56.94,5.09.67,7.08-.11,2.62-1,4.44-3,6.14-4.83s3.5-3.82,6.08-4.89,5.76-1.12,8.51-2a13,13,0,0,0,8.85-12.81c0-2.49-.62-5,.14-7.44,1-3.19,4.15-5.63,6.36-8.41,1.62-2,2.65-4.72,2-6.95A11.78,11.78,0,0,0,103,75Z'/%3E%3Crect class='cls-2' x='35.58' y='70.04' width='18.08' height='5.88' transform='translate(-26.18 24.97) rotate(-24.42)'/%3E%3Cpolyline class='cls-3' points='111.72 62.96 96.48 77.8 90.89 58.64'/%3E%3Ccircle class='cls-4' cx='67.89' cy='38.99' r='13.88'/%3E%3Cpath class='cls-5' d='M36.3,53.14l-.85-3.42c.22,0,5.48-1.42,4.74-5-.29-1.4-1.15-1.82-2.9-2.56-1.93-.81-4.58-1.92-5.34-5.6-.85-4,1.42-6,2.92-7.3s1.8-1.64,1.55-2.88c-.31-1.48-1.12-1.85-2.92-2.53s-4.5-1.72-5.32-5.28A6.15,6.15,0,0,1,29,13.85c2-3.08,6.27-4.08,6.76-4.18l.73,3.44-.37-1.72.38,1.72c-.93.2-3.54,1.07-4.53,2.64a2.59,2.59,0,0,0-.31,2.07c.38,1.66,1.29,2.07,3.14,2.78s4.4,1.68,5.11,5.1-1.26,5-2.69,6.26-2.2,1.91-1.78,3.92c.37,1.79,1.38,2.28,3.26,3.08s4.3,1.81,5,5.08C44.78,49.52,39.33,52.39,36.3,53.14Z'/%3E%3Cpath class='cls-6' d='M85.58,47.09a16.52,16.52,0,0,1-14-25.1L80.14,7.9A16.5,16.5,0,1,1,108.3,25.1L99.69,39.2A16.5,16.5,0,0,1,85.58,47.09ZM94.24,5.4a11.11,11.11,0,0,0-9.49,5.31l-8.61,14.1A11.1,11.1,0,1,0,95.08,36.38l8.61-14.1A11.09,11.09,0,0,0,94.24,5.4Z'/%3E%3Crect class='cls-4' x='22.14' y='92.68' width='17.06' height='17.06' transform='translate(109.97 31.25) rotate(65.44)'/%3E%3Cpath class='cls-2' d='M93.82,17.7a17.82,17.82,0,0,1,23.87,26.47'/%3E%3Cellipse class='cls-6' cx='62.53' cy='99.53' rx='7.85' ry='16.68' transform='translate(-38.62 39.66) rotate(-27.24)'/%3E%3Cpath class='cls-7' d='M22.9,103.69v-22a24.61,24.61,0,0,1,49.22,0H84.83a37.32,37.32,0,0,0-74.64,0v22H0V174.4H95.53V103.69Z'/%3E%3Crect x='87.69' y='109.67' width='2.19' height='25.52'/%3E%3Crect x='7.88' y='165.57' width='13.08' height='2.19'/%3E%3Ccircle class='cls-5' cx='78.47' cy='81.68' r='6.36'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E";
  },
  1246: function (e, t, a) {
    "use strict";
    (function (e) {
      a.d(t, "a", function () {
        return A;
      });
      var n = a(0),
        r = a.n(n),
        s = a(4),
        c = a(605),
        l = a(9),
        o = a.n(l),
        i = a(94),
        u = a(8),
        d = a(56),
        m = a(81),
        E = a(264),
        p = a(203);
      a(1377);
      const b = ({ operationKey: e, operationValue: t }) =>
          r.a.createElement(
            "div",
            { className: "Operations__pair" },
            r.a.createElement("div", null, e, e ? ":" : null),
            r.a.createElement("div", null, t)
          ),
        _ = ({ operationKey: e, operationValue: t }) =>
          r.a.createElement(b, {
            operationKey: e,
            operationValue: r.a.createElement(E.a, {
              publicKey: t,
              isSmall: !0,
            }),
          }),
        h = ({ operationKey: e, operationValue: t }) =>
          r.a.createElement(
            "div",
            { className: "Operations__pair--smart-contract" },
            r.a.createElement("div", null, e, e ? ":" : null),
            r.a.createElement(
              m.a,
              { className: "Operations__scValue" },
              r.a.createElement(
                "div",
                null,
                r.a.createElement("pre", null, JSON.stringify(t, null, 2))
              )
            )
          ),
        w = ({ paths: e }) => {
          const { t: t } = Object(c.a)();
          return r.a.createElement(
            r.a.Fragment,
            null,
            r.a.createElement("div", null, t("Paths"), ": "),
            e.map(({ code: e, issuer: t }, a) =>
              r.a.createElement(
                "div",
                { className: "Operations--list--item", key: `${e} ${a + 1}` },
                r.a.createElement("div", null, "#", a + 1),
                r.a.createElement(b, {
                  operationKey: "Asset Code",
                  operationValue: e,
                }),
                t
                  ? r.a.createElement(b, {
                      operationKey: "Issuer",
                      operationValue: r.a.createElement(E.a, {
                        publicKey: t,
                        isSmall: !0,
                      }),
                    })
                  : null
              )
            )
          );
        },
        f = ({ flags: e }) =>
          r.a.createElement(
            r.a.Fragment,
            null,
            Object.entries(e).map(([e, t]) =>
              r.a.createElement(b, {
                key: e,
                operationKey: i.a[e],
                operationValue: void 0 === t ? "undefined" : t.toString(),
              })
            )
          ),
        g = ({ isDestUnsafe: e, isDestMalicious: t }) => {
          const { t: a } = Object(c.a)();
          return e || t
            ? r.a.createElement(b, {
                operationKey: "",
                operationValue: r.a.createElement(s.IconButton, {
                  label: `${a(t ? "Malicious" : "Unsafe")} ${a("account")}`,
                  altText: "Error",
                  icon: r.a.createElement(s.Icon.Info, null),
                  variant: s.IconButton.variant.error,
                }),
              })
            : null;
        },
        v = ({ isDestMemoRequired: e }) => {
          const { t: t } = Object(c.a)();
          return e
            ? r.a.createElement(b, {
                operationKey: "",
                operationValue: r.a.createElement(s.IconButton, {
                  label: t("Memo required"),
                  altText: "Error",
                  icon: r.a.createElement(s.Icon.Info, null),
                  variant: s.IconButton.variant.error,
                }),
              })
            : null;
        },
        y = ({ destination: e, flaggedKeys: t, isMemoRequired: a }) => {
          var n;
          const s =
              (null === (n = t[e]) || void 0 === n ? void 0 : n.tags) || [],
            c = s.includes(i.c.malicious),
            l = s.includes(i.c.unsafe),
            o = s.includes(i.c.memoRequired);
          return r.a.createElement(
            r.a.Fragment,
            null,
            r.a.createElement(g, { isDestMalicious: c, isDestUnsafe: l }),
            a ? r.a.createElement(v, { isDestMemoRequired: o }) : null
          );
        },
        O = (t) => Object(u.s)(e.from(t).toString("hex").toUpperCase()),
        A = ({ flaggedKeys: e, isMemoRequired: t, operations: a = [] }) => {
          const { t: s } = Object(c.a)(),
            l = Object(n.useContext)(p.a);
          let m;
          !(function (e) {
            (e[(e["Authorization Required"] = 1)] = "Authorization Required"),
              (e[(e["Authorization Revocable"] = 2)] =
                "Authorization Revocable"),
              (e[(e["Authorization Required; Authorization Required"] = 3)] =
                "Authorization Required; Authorization Required"),
              (e[(e["Authorization Immutable"] = 4)] =
                "Authorization Immutable"),
              (e[(e["Authorization Required; Authorization Immutable"] = 5)] =
                "Authorization Required; Authorization Immutable"),
              (e[(e["Authorization Revocable; Authorization Immutable"] = 6)] =
                "Authorization Revocable; Authorization Immutable"),
              (e[
                (e[
                  "Authorization Required; Authorization Required; Authorization Immutable"
                ] = 7)
              ] =
                "Authorization Required; Authorization Required; Authorization Immutable");
          })(m || (m = {}));
          const [E, g] = Object(n.useState)(""),
            [v, A] = Object(n.useState)(0);
          return (
            Object(n.useEffect)(() => {
              if (!E) return;
              (async () => {
                const e = await Object(d.g)(l, E);
                A(e);
              })();
            }, [l, E]),
            r.a.createElement(
              "div",
              { className: "Operations" },
              a.map(
                (
                  {
                    account: n,
                    amount: c,
                    asset: l,
                    auth: p,
                    balanceId: A,
                    bumpTo: S,
                    buyAmount: N,
                    buying: C,
                    claimants: T,
                    clearFlags: k,
                    destination: j,
                    destAsset: I,
                    flags: D,
                    footprint: R,
                    func: P,
                    from: M,
                    highThreshold: L,
                    inflationDest: x,
                    limit: K,
                    line: B,
                    liquidityPoolId: V,
                    lowThreshold: F,
                    masterWeight: U,
                    maxAmountA: H,
                    maxAmountB: W,
                    maxPrice: G,
                    minAmountA: $,
                    minAmountB: X,
                    minPrice: q,
                    medThreshold: z,
                    name: Z,
                    offerId: Y,
                    parameters: Q,
                    path: J,
                    price: ee,
                    seller: te,
                    selling: ae,
                    sendAsset: ne,
                    setFlags: re,
                    signer: se,
                    source: ce,
                    sponsoredId: le,
                    trustor: oe,
                    type: ie,
                    value: ue,
                    ...de
                  },
                  me
                ) => {
                  var Ee;
                  const pe = me + 1;
                  let be,
                    _e = c,
                    he = j,
                    we = ce;
                  const fe = Object(d.f)(a[me]);
                  return (
                    fe &&
                      ((_e = null == fe ? void 0 : fe.amount.toString()),
                      (he = (null == fe ? void 0 : fe.to) || ""),
                      (we = (null == fe ? void 0 : fe.from) || ""),
                      (be = null == fe ? void 0 : fe.fnName),
                      !E &&
                        fe.contractId &&
                        g(null == fe ? void 0 : fe.contractId)),
                    r.a.createElement(
                      "div",
                      { className: "Operations--wrapper", key: pe },
                      r.a.createElement(
                        "div",
                        { className: "Operations--header" },
                        r.a.createElement(
                          "strong",
                          null,
                          pe,
                          ". ",
                          i.b[ie] || ie
                        )
                      ),
                      r.a.createElement(
                        "div",
                        { className: "Operations--item" },
                        n
                          ? r.a.createElement(_, {
                              operationKey: s("Account"),
                              operationValue: n,
                            })
                          : null,
                        _e
                          ? r.a.createElement(b, {
                              operationKey: s("Amount"),
                              operationValue: "" + Object(d.c)(o()(_e), v),
                            })
                          : null,
                        l
                          ? r.a.createElement(b, {
                              operationKey: s("Asset Code"),
                              operationValue: "" + l.code,
                            })
                          : null,
                        (null == l ? void 0 : l.issuer)
                          ? r.a.createElement(_, {
                              operationKey: s("Asset Issuer"),
                              operationValue: "" + l.issuer,
                            })
                          : null,
                        A
                          ? r.a.createElement(b, {
                              operationKey: s("Balance Id"),
                              operationValue: A,
                            })
                          : null,
                        S
                          ? r.a.createElement(b, {
                              operationKey: s("Bump To"),
                              operationValue: S,
                            })
                          : null,
                        N
                          ? r.a.createElement(b, {
                              operationKey: s("Amount"),
                              operationValue: N,
                            })
                          : null,
                        C
                          ? r.a.createElement(b, {
                              operationKey: s("Buying"),
                              operationValue: C.code,
                            })
                          : null,
                        T && T.length
                          ? T.map(({ _destination: e }, t) =>
                              r.a.createElement(
                                "div",
                                {
                                  className: "Operations--list--item",
                                  key: `${e}${t}`,
                                },
                                r.a.createElement(
                                  "div",
                                  null,
                                  s("Claimant"),
                                  " ",
                                  t + 1
                                ),
                                r.a.createElement(_, {
                                  operationKey: s("Destination"),
                                  operationValue: e,
                                })
                              )
                            )
                          : null,
                        k
                          ? r.a.createElement(b, {
                              operationKey: s("Clear Flags"),
                              operationValue: m[k],
                            })
                          : null,
                        E
                          ? r.a.createElement(b, {
                              operationKey: s("Contract ID"),
                              operationValue: Object(u.p)(E),
                            })
                          : null,
                        I
                          ? r.a.createElement(b, {
                              operationKey: s("Destination Asset"),
                              operationValue: "" + I.code,
                            })
                          : null,
                        he
                          ? r.a.createElement(
                              r.a.Fragment,
                              null,
                              r.a.createElement(_, {
                                operationKey: s("Destination"),
                                operationValue: he,
                              }),
                              r.a.createElement(y, {
                                destination: he,
                                flaggedKeys: e,
                                isMemoRequired: t,
                              })
                            )
                          : null,
                        D && Object.keys(D).length
                          ? r.a.createElement(f, { flags: D })
                          : null,
                        R
                          ? r.a.createElement(h, {
                              operationKey: s("Footprint"),
                              operationValue: R,
                            })
                          : null,
                        be
                          ? r.a.createElement(b, {
                              operationKey: s("Function Name"),
                              operationValue: be,
                            })
                          : null,
                        M
                          ? r.a.createElement(_, {
                              operationKey: s("From"),
                              operationValue: M,
                            })
                          : null,
                        L
                          ? r.a.createElement(b, {
                              operationKey: s("High Threshold"),
                              operationValue: L,
                            })
                          : null,
                        x
                          ? r.a.createElement(_, {
                              operationKey: s("Inflation Destination"),
                              operationValue: x,
                            })
                          : null,
                        F
                          ? r.a.createElement(b, {
                              operationKey: s("Low Threshold"),
                              operationValue: F,
                            })
                          : null,
                        U
                          ? r.a.createElement(b, {
                              operationKey: s("Master Weight"),
                              operationValue: U,
                            })
                          : null,
                        K
                          ? r.a.createElement(b, {
                              operationKey: s("Limit"),
                              operationValue: K,
                            })
                          : null,
                        B
                          ? r.a.createElement(
                              r.a.Fragment,
                              null,
                              r.a.createElement(b, {
                                operationKey: s("Code"),
                                operationValue: B.code,
                              }),
                              r.a.createElement(_, {
                                operationKey: s("Issuer"),
                                operationValue: B.issuer,
                              })
                            )
                          : null,
                        V
                          ? r.a.createElement(b, {
                              operationKey: s("Liquidity Pool ID"),
                              operationValue: Object(u.r)(V),
                            })
                          : null,
                        H
                          ? r.a.createElement(b, {
                              operationKey: s("Max Amount A"),
                              operationValue: H,
                            })
                          : null,
                        W
                          ? r.a.createElement(b, {
                              operationKey: s("Max Amount B"),
                              operationValue: W,
                            })
                          : null,
                        G
                          ? r.a.createElement(b, {
                              operationKey: s("Max Price"),
                              operationValue: G,
                            })
                          : null,
                        $
                          ? r.a.createElement(b, {
                              operationKey: s("Min Amount A"),
                              operationValue: $,
                            })
                          : null,
                        X
                          ? r.a.createElement(b, {
                              operationKey: s("Min Amount B"),
                              operationValue: X,
                            })
                          : null,
                        q
                          ? r.a.createElement(b, {
                              operationKey: s("Min Price"),
                              operationValue: q,
                            })
                          : null,
                        z
                          ? r.a.createElement(b, {
                              operationKey: s("Medium Threshold"),
                              operationValue: z,
                            })
                          : null,
                        Z
                          ? r.a.createElement(b, {
                              operationKey: s("Name"),
                              operationValue: Z,
                            })
                          : null,
                        Y
                          ? r.a.createElement(b, {
                              operationKey: s("Offer Id"),
                              operationValue: Y,
                            })
                          : null,
                        Q
                          ? r.a.createElement(h, {
                              operationKey: s("Parameters"),
                              operationValue: Q,
                            })
                          : null,
                        (null == J ? void 0 : J.length)
                          ? r.a.createElement(w, { paths: J })
                          : null,
                        ee
                          ? r.a.createElement(b, {
                              operationKey: s("Price"),
                              operationValue: ee,
                            })
                          : null,
                        ne
                          ? r.a.createElement(b, {
                              operationKey: s("Sending Asset"),
                              operationValue: "" + ne.code,
                            })
                          : null,
                        te
                          ? r.a.createElement(_, {
                              operationKey: s("Seller"),
                              operationValue: te,
                            })
                          : null,
                        ae
                          ? r.a.createElement(b, {
                              operationKey: s("Selling"),
                              operationValue: ae.code,
                            })
                          : null,
                        re
                          ? r.a.createElement(b, {
                              operationKey: s("Set Flags"),
                              operationValue: m[re],
                            })
                          : null,
                        (null == se ? void 0 : se.ed25519PublicKey)
                          ? r.a.createElement(_, {
                              operationKey: s("Signer"),
                              operationValue: se.ed25519PublicKey,
                            })
                          : null,
                        (null == se ? void 0 : se.sha256Hash)
                          ? r.a.createElement(b, {
                              operationKey: s("Signer"),
                              operationValue: O(
                                null ===
                                  (Ee = null == se ? void 0 : se.sha256Hash) ||
                                  void 0 === Ee
                                  ? void 0
                                  : Ee.data
                              ),
                            })
                          : null,
                        (null == se ? void 0 : se.preAuthTx)
                          ? r.a.createElement(b, {
                              operationKey: s("Signer"),
                              operationValue: O(se.preAuthTx.data),
                            })
                          : null,
                        (null == se ? void 0 : se.weight)
                          ? r.a.createElement(b, {
                              operationKey: s("Weight"),
                              operationValue: se.weight,
                            })
                          : null,
                        we
                          ? r.a.createElement(_, {
                              operationKey: s("Source"),
                              operationValue: we,
                            })
                          : null,
                        le
                          ? r.a.createElement(_, {
                              operationKey: s("Sponsored Id"),
                              operationValue: le,
                            })
                          : null,
                        oe
                          ? r.a.createElement(_, {
                              operationKey: s("Trustor"),
                              operationValue: oe,
                            })
                          : null,
                        (null == ue ? void 0 : ue.type)
                          ? r.a.createElement(b, {
                              operationKey: s("Value Type"),
                              operationValue: ue.type,
                            })
                          : null,
                        (null == ue ? void 0 : ue.data)
                          ? r.a.createElement(b, {
                              operationKey: s("Value Data"),
                              operationValue: O(ue.data),
                            })
                          : null,
                        Object.entries(de).map(([e, t]) =>
                          r.a.createElement(b, {
                            key: e,
                            operationKey: e,
                            operationValue:
                              "string" == typeof t ? t : JSON.stringify(t),
                          })
                        ),
                        P
                          ? r.a.createElement(h, {
                              operationKey: s("Func"),
                              operationValue: P,
                            })
                          : null,
                        p
                          ? r.a.createElement(h, {
                              operationKey: s("Auth"),
                              operationValue: p,
                            })
                          : null
                      )
                    )
                  );
                }
              )
            )
          );
        };
    }.call(this, a(7).Buffer));
  },
  1250: function (e, t) {
    e.exports =
      "data:image/svg+xml,%3Csvg width='40' height='40' viewBox='0 0 40 40' fill='none' xmlns='http://www.w3.org/2000/svg'%3E %3Ccircle cx='20' cy='20' r='19.5' fill='%231F212A' stroke='%23EE5A74'/%3E %3Cpath d='M26 14L14 26M14 14C19.6236 19.6236 20.3765 20.3765 26 26' stroke='white' stroke-width='1.5' stroke-linecap='round' stroke-linejoin='round'/%3E %3C/svg%3E";
  },
  1262: function (e, t, a) {
    a(926), (e.exports = a(1388));
  },
  13: function (e, t, a) {
    "use strict";
    var n = a(6),
      r = a.n(n),
      s = a(27),
      c = a(251),
      l = a(25),
      o = a(18),
      i = a(11),
      u = a(45),
      d = a(34),
      m = a(344);
    const E = async ({ key: e, code: t, networkDetails: a }) => {
      let n,
        s = "";
      try {
        if (
          (({ assetDomain: s } = await Object(d.a)({
            assetCanonical: `${t}:${e}`,
            type: i.e.GET_CACHED_ASSET_DOMAIN,
          })),
          s)
        )
          return s;
      } catch (e) {
        console.error(e);
      }
      try {
        const { networkUrl: t } = a,
          s = new r.a.Server(t);
        n = await s.loadAccount(e);
      } catch (e) {
        return s;
      }
      return (
        (s = n.home_domain),
        await Object(d.a)({
          assetCanonical: `${t}:${e}`,
          assetDomain: s,
          type: i.e.CACHE_ASSET_DOMAIN,
        }),
        s
      );
    };
    var p = a(102),
      b = a(114);
    a.d(t, "h", function () {
      return _;
    }),
      a.d(t, "j", function () {
        return h;
      }),
      a.d(t, "a", function () {
        return w;
      }),
      a.d(t, "v", function () {
        return f;
      }),
      a.d(t, "w", function () {
        return g;
      }),
      a.d(t, "A", function () {
        return v;
      }),
      a.d(t, "N", function () {
        return y;
      }),
      a.d(t, "x", function () {
        return O;
      }),
      a.d(t, "q", function () {
        return A;
      }),
      a.d(t, "f", function () {
        return S;
      }),
      a.d(t, "B", function () {
        return N;
      }),
      a.d(t, "g", function () {
        return C;
      }),
      a.d(t, "k", function () {
        return T;
      }),
      a.d(t, "l", function () {
        return k;
      }),
      a.d(t, "n", function () {
        return j;
      }),
      a.d(t, "E", function () {
        return I;
      }),
      a.d(t, "m", function () {
        return D;
      }),
      a.d(t, "C", function () {
        return R;
      }),
      a.d(t, "t", function () {
        return P;
      }),
      a.d(t, "u", function () {
        return M;
      }),
      a.d(t, "K", function () {
        return L;
      }),
      a.d(t, "I", function () {
        return x;
      }),
      a.d(t, "H", function () {
        return K;
      }),
      a.d(t, "M", function () {
        return B;
      }),
      a.d(t, "L", function () {
        return V;
      }),
      a.d(t, "c", function () {
        return F;
      }),
      a.d(t, "y", function () {
        return U;
      }),
      a.d(t, "J", function () {
        return H;
      }),
      a.d(t, "G", function () {
        return W;
      }),
      a.d(t, "F", function () {
        return G;
      }),
      a.d(t, "e", function () {
        return $;
      }),
      a.d(t, "b", function () {
        return X;
      }),
      a.d(t, "D", function () {
        return q;
      }),
      a.d(t, "i", function () {
        return z;
      }),
      a.d(t, "z", function () {
        return Z;
      }),
      a.d(t, "p", function () {
        return Y;
      }),
      a.d(t, "o", function () {
        return Q;
      }),
      a.d(t, "r", function () {
        return J;
      }),
      a.d(t, "d", function () {
        return ee;
      }),
      a.d(t, "s", function () {
        return te;
      });
    const _ = async (e) => {
        let t = "",
          a = [];
        try {
          ({ allAccounts: a, publicKey: t } = await Object(d.a)({
            password: e,
            type: i.e.CREATE_ACCOUNT,
          }));
        } catch (e) {
          console.error(e);
        }
        return { allAccounts: a, publicKey: t };
      },
      h = async (e) => {
        try {
          await Object(d.a)({ publicKey: e, type: i.e.FUND_ACCOUNT });
        } catch (e) {
          console.error(e);
        }
      },
      w = async (e) => {
        let t = "",
          a = "",
          n = [],
          r = !1;
        try {
          ({
            allAccounts: n,
            error: t,
            publicKey: a,
            hasPrivateKey: r,
          } = await Object(d.a)({ password: e, type: i.e.ADD_ACCOUNT }));
        } catch (e) {
          console.error(e);
        }
        if (t) throw new Error(t);
        return { allAccounts: n, publicKey: a, hasPrivateKey: r };
      },
      f = async (e, t) => {
        let a = "",
          n = "",
          r = [],
          s = !1;
        try {
          ({
            allAccounts: r,
            publicKey: n,
            error: a,
            hasPrivateKey: s,
          } = await Object(d.a)({
            password: e,
            privateKey: t,
            type: i.e.IMPORT_ACCOUNT,
          }));
        } catch (e) {
          console.error(e);
        }
        if (a) throw new Error(a);
        return { allAccounts: r, publicKey: n, hasPrivateKey: s };
      },
      g = async (e, t, a) => {
        let n = "",
          r = [],
          s = !1,
          c = "";
        try {
          ({
            publicKey: n,
            allAccounts: r,
            hasPrivateKey: s,
            bipPath: c,
          } = await Object(d.a)({
            publicKey: e,
            hardwareWalletType: t,
            bipPath: a,
            type: i.e.IMPORT_HARDWARE_WALLET,
          }));
        } catch (e) {
          console.log({ e: e });
        }
        return { allAccounts: r, publicKey: n, hasPrivateKey: s, bipPath: c };
      },
      v = (e) => Object(d.a)({ publicKey: e, type: i.e.MAKE_ACCOUNT_ACTIVE }),
      y = (e) => Object(d.a)({ accountName: e, type: i.e.UPDATE_ACCOUNT_NAME }),
      O = () => Object(d.a)({ type: i.e.LOAD_ACCOUNT }),
      A = async () => {
        let e = { mnemonicPhrase: "" };
        try {
          e = await Object(d.a)({ type: i.e.GET_MNEMONIC_PHRASE });
        } catch (e) {
          console.error(e);
        }
        return e;
      },
      S = async (e) => {
        let t = { isCorrectPhrase: !1, applicationState: u.a.PASSWORD_CREATED };
        try {
          t = await Object(d.a)({
            mnemonicPhraseToConfirm: e,
            type: i.e.CONFIRM_MNEMONIC_PHRASE,
          });
        } catch (e) {
          console.error(e);
        }
        return t;
      },
      N = async (e, t) => {
        let a = "",
          n = [],
          r = !1,
          s = "";
        try {
          ({
            allAccounts: n,
            publicKey: a,
            hasPrivateKey: r,
            error: s,
          } = await Object(d.a)({
            password: e,
            recoverMnemonic: t,
            type: i.e.RECOVER_ACCOUNT,
          }));
        } catch (e) {
          console.error(e);
        }
        return { allAccounts: n, publicKey: a, hasPrivateKey: r, error: s };
      },
      C = async (e) => {
        let t = {
          publicKey: "",
          hasPrivateKey: !1,
          applicationState: u.a.MNEMONIC_PHRASE_CONFIRMED,
          allAccounts: [],
          bipPath: "",
        };
        try {
          t = await Object(d.a)({ password: e, type: i.e.CONFIRM_PASSWORD });
        } catch (e) {
          console.error(e);
        }
        return t;
      },
      T = async ({ publicKey: e, networkDetails: t }) => {
        const { networkUrl: a, networkPassphrase: n } = t,
          r = new c.a({
            serverUrl: a,
            accountOrKey: e,
            networkPassphrase: n,
            metadata: { allowHttp: a.startsWith("http://") },
          });
        let s = null,
          l = null,
          o = 0;
        try {
          const e = await r.fetchAccountDetails();
          (s = e.balances), (o = e.subentryCount);
          for (let t = 0; t < Object.keys(e.balances).length; t++) {
            const n = Object.keys(e.balances)[t],
              r = e.balances[n];
            if (r.liquidity_pool_id) {
              const e = Object(p.a)(a),
                t = await e
                  .liquidityPools()
                  .liquidityPoolId(r.liquidity_pool_id)
                  .call();
              (s[n] = {
                ...s[n],
                liquidityPoolId: r.liquidity_pool_id,
                reserves: t.reserves,
              }),
                delete s[n].liquidity_pool_id;
            }
          }
          l = !0;
        } catch (e) {
          return (
            console.error(e), { balances: s, isFunded: !1, subentryCount: o }
          );
        }
        return { balances: s, isFunded: l, subentryCount: o };
      },
      k = async ({ publicKey: e, networkDetails: t }) => {
        const { networkUrl: a } = t;
        let n = [];
        try {
          const t = Object(p.a)(a);
          n =
            (
              await t
                .operations()
                .forAccount(e)
                .order("desc")
                .join("transactions")
                .limit(100)
                .call()
            ).records || [];
        } catch (e) {
          console.error(e);
        }
        return { operations: n };
      },
      j = async ({ balances: e, networkDetails: t }) => {
        const a = {};
        if (e) {
          let n = "";
          const r = Object.values(e);
          for (let e = 0; e < r.length; e++) {
            const { token: s } = r[e];
            if (s && "issuer" in s) {
              const {
                issuer: { key: e },
                code: r,
              } = s;
              (n = await Object(m.a)({ key: e, code: r, networkDetails: t })),
                (a[`${r}:${e}`] = n);
            }
          }
        }
        return a;
      },
      I = async ({ key: e, code: t, assetIcons: a, networkDetails: n }) => {
        const r = { ...a };
        try {
          await Object(d.a)({
            assetCanonical: `${t}:${e}`,
            iconUrl: null,
            type: i.e.CACHE_ASSET_ICON,
          });
        } catch (e) {
          return a;
        }
        const s = await Object(m.a)({ key: e, code: t, networkDetails: n });
        return (r[`${t}:${e}`] = s), r;
      },
      D = async ({ balances: e, networkDetails: t }) => {
        const a = {};
        if (e) {
          const n = Object.values(e);
          for (let e = 0; e < n.length; e++) {
            const { token: r } = n[e];
            if (r && "issuer" in r) {
              const {
                  issuer: { key: e },
                  code: n,
                } = r,
                s = await E({ key: e, code: n, networkDetails: t });
              a[`${n}:${e}`] = s;
            }
          }
        }
        return a;
      },
      R = async () => {
        try {
          await Object(d.a)({ type: i.e.REJECT_ACCESS });
        } catch (e) {
          console.error(e);
        }
      },
      P = async (e) => {
        try {
          await Object(d.a)({ url: e, type: i.e.GRANT_ACCESS });
        } catch (e) {
          console.error(e);
        }
      },
      M = async ({ signedTransaction: e }) => {
        try {
          await Object(d.a)({
            signedTransaction: e,
            type: i.e.HANDLE_SIGNED_HW_TRANSACTION,
          });
        } catch (e) {
          console.error(e);
        }
      },
      L = async () => {
        try {
          await Object(d.a)({ type: i.e.SIGN_TRANSACTION });
        } catch (e) {
          console.error(e);
        }
      },
      x = async ({ transactionXDR: e, network: t }) => {
        const { signedTransaction: a, error: n } = await Object(d.a)({
          transactionXDR: e,
          network: t,
          type: i.e.SIGN_FREIGHTER_TRANSACTION,
        });
        if (n || !a) throw new Error(n);
        return { signedTransaction: a };
      },
      K = async ({ transactionXDR: e, network: t }) => {
        const { signedTransaction: a, error: n } = await Object(d.a)({
          transactionXDR: e,
          network: t,
          type: i.e.SIGN_FREIGHTER_SOROBAN_TRANSACTION,
        });
        if (n || !a) throw new Error(n);
        return { signedTransaction: a };
      },
      B = ({ signedXDR: e, networkDetails: t }) => {
        const a = r.a.TransactionBuilder.fromXDR(e, t.networkPassphrase),
          n = Object(p.a)(t.networkUrl),
          s = async () => {
            let e;
            try {
              e = await n.submitTransaction(a);
            } catch (e) {
              if (504 === e.response.status) return s();
              throw e;
            }
            return e;
          };
        return s();
      },
      V = async ({ signedXDR: e, networkDetails: t }) => {
        let a = {};
        try {
          a = s.TransactionBuilder.fromXDR(e, t.networkPassphrase);
        } catch (e) {
          console.error(e);
        }
        const n = new s.Server(o.g.FUTURENET, { allowHttp: !0 });
        let r = await n.sendTransaction(a);
        try {
          for (; r.status === l.c.PENDING; )
            (r = await n.getTransaction(r.id)),
              await new Promise((e) => setTimeout(e, 1e3));
        } catch (e) {
          throw new Error(e);
        }
        return r;
      },
      F = async ({ publicKey: e }) =>
        await Object(d.a)({ publicKey: e, type: i.e.ADD_RECENT_ADDRESS }),
      U = async () => await Object(d.a)({ type: i.e.LOAD_RECENT_ADDRESSES }),
      H = async () => {
        let e = {
          publicKey: "",
          applicationState: u.a.MNEMONIC_PHRASE_CONFIRMED,
        };
        try {
          e = await Object(d.a)({ type: i.e.SIGN_OUT });
        } catch (e) {
          console.error(e);
        }
        return e;
      },
      W = async (e) => {
        let t = { error: "" };
        try {
          t = await Object(d.a)({ password: e, type: i.e.SHOW_BACKUP_PHRASE });
        } catch (e) {
          console.error(e);
        }
        return t;
      },
      G = async ({
        isDataSharingAllowed: e,
        isMemoValidationEnabled: t,
        isSafetyValidationEnabled: a,
        isValidatingSafeAssetsEnabled: n,
        isExperimentalModeEnabled: r,
      }) => {
        let s = {
          isDataSharingAllowed: !1,
          networkDetails: o.c,
          networksList: o.a,
          isMemoValidationEnabled: !0,
          isSafetyValidationEnabled: !0,
          isValidatingSafeAssetsEnabled: !0,
          isExperimentalModeEnabled: !1,
          error: "",
        };
        try {
          s = await Object(d.a)({
            isDataSharingAllowed: e,
            isMemoValidationEnabled: t,
            isSafetyValidationEnabled: a,
            isValidatingSafeAssetsEnabled: n,
            isExperimentalModeEnabled: r,
            type: i.e.SAVE_SETTINGS,
          });
        } catch (e) {
          console.error(e);
        }
        return s;
      },
      $ = async (e) => {
        let t = o.c;
        try {
          ({ networkDetails: t } = await Object(d.a)({
            networkName: e,
            type: i.e.CHANGE_NETWORK,
          }));
        } catch (e) {
          console.error(e);
        }
        return t;
      },
      X = async (e) => {
        let t = { error: "", networksList: [] };
        try {
          t = await Object(d.a)({
            networkDetails: e,
            type: i.e.ADD_CUSTOM_NETWORK,
          });
        } catch (e) {
          console.error(e);
        }
        if (t.error) throw new Error(t.error);
        return t;
      },
      q = async (e) => {
        let t = { networkDetails: o.c, networksList: [] };
        try {
          t = await Object(d.a)({
            networkName: e,
            type: i.e.REMOVE_CUSTOM_NETWORK,
          });
        } catch (e) {
          console.error(e);
        }
        return t;
      },
      z = async ({ networkDetails: e, networkIndex: t }) => {
        let a = { networkDetails: o.c, networksList: [] };
        try {
          a = await Object(d.a)({
            networkDetails: e,
            networkIndex: t,
            type: i.e.EDIT_CUSTOM_NETWORK,
          });
        } catch (e) {
          console.error(e);
        }
        return a;
      },
      Z = () => Object(d.a)({ type: i.e.LOAD_SETTINGS }),
      Y = async () => await Object(d.a)({ type: i.e.GET_BLOCKED_DOMAINS }),
      Q = async () => await Object(d.a)({ type: i.e.GET_BLOCKED_ACCOUNTS }),
      J = (e, t, a, n) => {
        const r = new s.Contract(t),
          c = a.balance
            .addOperation(r.call("balance", ...n))
            .setTimeout(s.TimeoutInfinite)
            .build(),
          l = a.name
            .addOperation(r.call("name"))
            .setTimeout(s.TimeoutInfinite)
            .build(),
          o = a.symbol
            .addOperation(r.call("symbol"))
            .setTimeout(s.TimeoutInfinite)
            .build(),
          i = a.decimals
            .addOperation(r.call("decimals"))
            .setTimeout(s.TimeoutInfinite)
            .build(),
          u = {
            balance: { tx: c, decoder: b.d },
            name: { tx: l, decoder: b.b },
            symbol: { tx: o, decoder: b.b },
            decimals: { tx: i, decoder: b.c },
          };
        return Object.keys(u).reduce(async (t, a) => {
          const n = await t,
            { tx: r, decoder: s } = u[a],
            { results: c } = await e.simulateTransaction(r);
          if (!c || 1 !== c.length)
            throw new Error("Invalid response from simulateTransaction");
          const l = c[0];
          return (n[a] = s(l.xdr)), n;
        }, Promise.resolve({}));
      },
      ee = async (e) => {
        let t = "",
          a = [];
        try {
          ({ tokenIdList: a, error: t } = await Object(d.a)({
            tokenId: e,
            type: i.e.ADD_TOKEN_ID,
          }));
        } catch (e) {
          console.error(e);
        }
        if (t) throw new Error(t);
        return { tokenIdList: a };
      },
      te = async () =>
        (await Object(d.a)({ type: i.e.GET_TOKEN_IDS })).tokenIdList;
  },
  1377: function (e, t, a) {},
  1384: function (e, t, a) {
    var n = {
      "./en/translation.json": [1391, 8],
      "./pt/translation.json": [1392, 9],
    };
    function r(e) {
      if (!a.o(n, e))
        return Promise.resolve().then(function () {
          var t = new Error("Cannot find module '" + e + "'");
          throw ((t.code = "MODULE_NOT_FOUND"), t);
        });
      var t = n[e],
        r = t[0];
      return a.e(t[1]).then(function () {
        return a.t(r, 3);
      });
    }
    (r.keys = function () {
      return Object.keys(n);
    }),
      (r.id = 1384),
      (e.exports = r);
  },
  1388: function (e, t, a) {
    "use strict";
    a.r(t);
    var n = a(0),
      r = a.n(n),
      s = a(336),
      c = a.n(s),
      l = a(594),
      o = a(1169),
      i = a(1251),
      u = a.n(i),
      d = a(1255),
      m = a(253);
    o.a
      .use(
        u()((e, t, n) => {
          a(1384)(`./${e}/${t}.json`)
            .then((e) => {
              n(null, e);
            })
            .catch((e) => {
              n(e, null);
            });
        })
      )
      .use(d.a)
      .use(m.e)
      .init({ fallbackLng: "en" });
    o.a, a(1385);
    c.a.render(r.a.createElement(l.a, null), document.getElementById("root"));
  },
  14: function (e, t, a) {
    "use strict";
    (function (e) {
      a.d(t, "b", function () {
        return u;
      }),
        a.d(t, "c", function () {
          return d;
        }),
        a.d(t, "a", function () {
          return b;
        });
      var n = a(1216),
        r = a.n(n),
        s = a(20),
        c = a(594),
        l = a(10),
        o = a(17);
      const i = {};
      function u() {
        return ({ getState: e }) => (t) => (a) => {
          const n = e();
          return (i[a.type] || []).forEach((e) => e(n, a)), t(a);
        };
      }
      Object(s.c)("dummy", () => {}), Object(s.b)("also dummy");
      function d(e, t) {
        const a = "string" == typeof e ? e : e.type;
        i[a] ? i[a].push(t) : (i[a] = [t]);
      }
      let m = [];
      const E = r()(() => {
          const t = m;
          (m = []),
            e.env.AMPLITUDE_KEY
              ? fetch("https://api.amplitude.com/2/httpapi", {
                  method: "POST",
                  headers: { "Content-Type": "application/json" },
                  body: JSON.stringify({
                    api_key: e.env.AMPLITUDE_KEY,
                    events: t,
                  }),
                })
              : console.log("Not uploading metrics", t);
        }, 500),
        p = () => {
          const e = localStorage.getItem("metrics_user_id");
          if (!e) {
            const e = Math.random().toString().split(".")[1];
            return localStorage.setItem("metrics_user_id", e), e;
          }
          return e;
        },
        b = (e, t) => {
          if (!Object(o.i)(c.b.getState())) return;
          const a = JSON.parse(localStorage.getItem(l.p) || "{}");
          m.push({
            event_type: e,
            event_properties: t,
            user_id: p(),
            device_id: window.navigator.userAgent,
            freighter_account_funded: a.freighterFunded,
            hw_connected: a.hwExists,
            secret_key_account: a.importedExists,
            secret_key_account_funded: a.importedFunded,
          }),
            E();
        };
    }.call(this, a(35)));
  },
  17: function (e, t, a) {
    "use strict";
    a.d(t, "e", function () {
      return o;
    }),
      a.d(t, "h", function () {
        return i;
      }),
      a.d(t, "b", function () {
        return u;
      }),
      a.d(t, "a", function () {
        return d;
      }),
      a.d(t, "g", function () {
        return m;
      }),
      a.d(t, "d", function () {
        return E;
      }),
      a.d(t, "f", function () {
        return b;
      }),
      a.d(t, "c", function () {
        return _;
      }),
      a.d(t, "n", function () {
        return h;
      }),
      a.d(t, "i", function () {
        return w;
      }),
      a.d(t, "k", function () {
        return f;
      }),
      a.d(t, "l", function () {
        return g;
      }),
      a.d(t, "m", function () {
        return v;
      }),
      a.d(t, "j", function () {
        return y;
      });
    var n = a(20),
      r = a(146),
      s = a(13),
      c = a(18);
    const l = {
        isDataSharingAllowed: !1,
        networkDetails: {
          network: "",
          networkName: "",
          networkUrl: "",
          networkPassphrase: "",
        },
        networksList: c.a,
        isMemoValidationEnabled: !0,
        isSafetyValidationEnabled: !0,
        isValidatingSafeAssetsEnabled: !0,
        isExperimentalModeEnabled: !1,
        error: "",
      },
      o = Object(n.c)("settings/loadSettings", () => Object(s.z)()),
      i = Object(n.c)(
        "settings/saveSettings",
        async (
          {
            isDataSharingAllowed: e,
            isMemoValidationEnabled: t,
            isSafetyValidationEnabled: a,
            isValidatingSafeAssetsEnabled: n,
            isExperimentalModeEnabled: r,
          },
          c
        ) => {
          let o = { ...l };
          try {
            o = await Object(s.F)({
              isDataSharingAllowed: e,
              isMemoValidationEnabled: t,
              isSafetyValidationEnabled: a,
              isValidatingSafeAssetsEnabled: n,
              isExperimentalModeEnabled: r,
            });
          } catch (e) {
            return (
              console.error(e), c.rejectWithValue({ errorMessage: e.message })
            );
          }
          return o;
        }
      ),
      u = Object(n.c)("settings/changeNetwork", ({ networkName: e }) =>
        Object(s.e)(e)
      ),
      d = Object(n.c)(
        "settings/addCustomNetwork",
        async ({ networkDetails: e }, t) => {
          let a;
          try {
            a = await Object(s.b)(e);
          } catch (e) {
            return (
              console.error(e), t.rejectWithValue({ errorMessage: e.message })
            );
          }
          return a;
        }
      ),
      m = Object(n.c)("settings/removeCustomNetwork", ({ networkName: e }) =>
        Object(s.D)(e)
      ),
      E = Object(n.c)(
        "settings/editCustomNetwork",
        ({ networkDetails: e, networkIndex: t }) =>
          Object(s.i)({ networkDetails: e, networkIndex: t })
      ),
      p = Object(n.d)({
        name: "settings",
        initialState: l,
        reducers: {
          clearSettingsError(e) {
            e.error = "";
          },
        },
        extraReducers: (e) => {
          e.addCase(i.fulfilled, (e, t) => {
            const {
              isDataSharingAllowed: a,
              networkDetails: n,
              isMemoValidationEnabled: r,
              isSafetyValidationEnabled: s,
              networksList: c,
              isValidatingSafeAssetsEnabled: o,
              isExperimentalModeEnabled: i,
            } = (null == t ? void 0 : t.payload) || { ...l };
            return {
              ...e,
              isDataSharingAllowed: a,
              isMemoValidationEnabled: r,
              isSafetyValidationEnabled: s,
              isValidatingSafeAssetsEnabled: o,
              isExperimentalModeEnabled: i,
              networkDetails: n,
              networksList: c,
            };
          }),
            e.addCase(o.fulfilled, (e, t) => {
              const {
                isDataSharingAllowed: a,
                networkDetails: n,
                networksList: r,
                isMemoValidationEnabled: s,
                isSafetyValidationEnabled: c,
                isValidatingSafeAssetsEnabled: o,
                isExperimentalModeEnabled: i,
              } = (null == t ? void 0 : t.payload) || { ...l };
              return {
                ...e,
                isDataSharingAllowed: a,
                networkDetails: n,
                networksList: r,
                isMemoValidationEnabled: s,
                isSafetyValidationEnabled: c,
                isValidatingSafeAssetsEnabled: o,
                isExperimentalModeEnabled: i,
              };
            }),
            e.addCase(u.fulfilled, (e, t) => ({
              ...e,
              networkDetails: (null == t ? void 0 : t.payload) || c.c,
            })),
            e.addCase(d.fulfilled, (e, t) => {
              const { networksList: a } = (null == t ? void 0 : t.payload) || {
                networksList: c.a,
              };
              return { ...e, networksList: a };
            }),
            e.addCase(d.rejected, (e, t) => {
              const { errorMessage: a } = t.payload || { errorMessage: "" };
              return { ...e, error: a };
            }),
            e.addCase(m.fulfilled, (e, t) => {
              const { networksList: a } = (null == t ? void 0 : t.payload) || {
                networksList: c.a,
              };
              return { ...e, networksList: a };
            }),
            e.addCase(E.fulfilled, (e, t) => {
              const { networkDetails: a, networksList: n } = (null == t
                ? void 0
                : t.payload) || { networkDetails: c.c, networksList: c.a };
              return { ...e, networkDetails: a, networksList: n };
            });
        },
      }),
      { reducer: b } = p,
      { clearSettingsError: _ } = p.actions,
      h = (e) => e.settings,
      w = Object(r.a)(h, (e) => e.isDataSharingAllowed),
      f = Object(r.a)(h, (e) => e.isExperimentalModeEnabled),
      g = Object(r.a)(h, (e) => e.networkDetails),
      v = Object(r.a)(h, (e) => e.networksList),
      y =
        (Object(r.a)(
          h,
          ({
            isDataSharingAllowed: e,
            isMemoValidationEnabled: t,
            isSafetyValidationEnabled: a,
            isExperimentalModeEnabled: n,
          }) => ({
            isDataSharingAllowed: e,
            isMemoValidationEnabled: t,
            isSafetyValidationEnabled: a,
            isExperimentalModeEnabled: n,
          })
        ),
        Object(r.a)(h, (e) => e.error));
  },
  18: function (e, t, a) {
    "use strict";
    a.d(t, "e", function () {
      return n;
    }),
      a.d(t, "d", function () {
        return r;
      }),
      a.d(t, "f", function () {
        return s;
      }),
      a.d(t, "g", function () {
        return i;
      }),
      a.d(t, "c", function () {
        return u;
      }),
      a.d(t, "h", function () {
        return d;
      }),
      a.d(t, "b", function () {
        return m;
      }),
      a.d(t, "a", function () {
        return E;
      });
    var n,
      r,
      s,
      c,
      l = a(6),
      o = a.n(l);
    !(function (e) {
      (e.TESTNET = "Test Net"),
        (e.PUBNET = "Main Net"),
        (e.FUTURENET = "Future Net");
    })(n || (n = {})),
      (function (e) {
        (e.PUBLIC = "PUBLIC"),
          (e.TESTNET = "TESTNET"),
          (e.FUTURENET = "FUTURENET");
      })(r || (r = {})),
      (function (e) {
        (e.PUBLIC = "https://horizon.stellar.org"),
          (e.TESTNET = "https://horizon-testnet.stellar.org"),
          (e.FUTURENET = "https://horizon-futurenet.stellar.org");
      })(s || (s = {})),
      (function (e) {
        (e.TESTNET = "https://friendbot.stellar.org"),
          (e.FUTURENET = "https://friendbot-futurenet.stellar.org");
      })(c || (c = {}));
    const i = { FUTURENET: "https://rpc-futurenet.stellar.org/" },
      u = {
        network: r.PUBLIC,
        networkName: n.PUBNET,
        networkUrl: s.PUBLIC,
        networkPassphrase: o.a.Networks.PUBLIC,
      },
      d = {
        network: r.TESTNET,
        networkName: n.TESTNET,
        networkUrl: s.TESTNET,
        networkPassphrase: o.a.Networks.TESTNET,
        friendbotUrl: c.TESTNET,
      },
      m = {
        network: r.FUTURENET,
        networkName: n.FUTURENET,
        networkUrl: s.FUTURENET,
        networkPassphrase: "Test SDF Future Network ; October 2022",
        friendbotUrl: c.FUTURENET,
      },
      E = [u, d];
  },
  202: function (e, t, a) {
    "use strict";
    a.d(t, "b", function () {
      return n;
    }),
      a.d(t, "a", function () {
        return r;
      });
    const n = 360,
      r = 600;
  },
  203: function (e, t, a) {
    "use strict";
    a.d(t, "a", function () {
      return i;
    }),
      a.d(t, "b", function () {
        return u;
      });
    var n = a(0),
      r = a.n(n),
      s = a(5),
      c = a(27),
      l = a(18),
      o = a(17);
    const i = r.a.createContext({}),
      u = ({ children: e, pubKey: t }) => {
        const a = Object(s.c)(o.l),
          n = new c.Account(t, "0"),
          u =
            "Test SDF Future Network ; October 2022" === a.networkPassphrase &&
            a.networkUrl === l.b.networkUrl
              ? l.g.FUTURENET
              : a.networkUrl,
          d = new c.Server(u, {
            allowHttp: a.networkUrl.startsWith("http://"),
          });
        return r.a.createElement(
          i.Provider,
          {
            value: {
              server: d,
              newTxBuilder: () =>
                new c.TransactionBuilder(n, {
                  fee: "100",
                  networkPassphrase: a.networkPassphrase,
                }),
            },
          },
          e
        );
      };
  },
  249: function (e, t, a) {
    "use strict";
    var n = a(0),
      r = a.n(n),
      s = a(1228),
      c = a.n(s);
    a.d(t, "a", function () {
      return l;
    });
    const l = ({ publicKey: e }) =>
      r.a.createElement("img", {
        className: "IdenticonImg",
        alt: "account identicon",
        src: c()(e).toDataURL(),
      });
  },
  25: function (e, t, a) {
    "use strict";
    var n, r, s;
    a.d(t, "b", function () {
      return n;
    }),
      a.d(t, "c", function () {
        return r;
      }),
      a.d(t, "a", function () {
        return s;
      }),
      (function (e) {
        (e.IDLE = "IDLE"),
          (e.PENDING = "PENDING"),
          (e.SUCCESS = "SUCCESS"),
          (e.ERROR = "ERROR");
      })(n || (n = {})),
      (function (e) {
        (e.PENDING = "pending"), (e.SUCCESS = "success");
      })(r || (r = {})),
      (function (e) {
        (e.HW = "HW"), (e.IMPORTED = "IMPORTED"), (e.FREIGHTER = "FREIGHTER");
      })(s || (s = {}));
  },
  26: function (e, t, a) {
    "use strict";
    a.d(t, "k", function () {
      return i;
    }),
      a.d(t, "c", function () {
        return u;
      }),
      a.d(t, "b", function () {
        return d;
      }),
      a.d(t, "g", function () {
        return m;
      }),
      a.d(t, "h", function () {
        return E;
      }),
      a.d(t, "i", function () {
        return p;
      }),
      a.d(t, "j", function () {
        return b;
      }),
      a.d(t, "e", function () {
        return _;
      }),
      a.d(t, "a", function () {
        return h;
      }),
      a.d(t, "f", function () {
        return w;
      }),
      a.d(t, "d", function () {
        return f;
      }),
      a.d(t, "n", function () {
        return g;
      }),
      a.d(t, "l", function () {
        return v;
      }),
      a.d(t, "m", function () {
        return y;
      });
    var n = a(10),
      r = a(18),
      s = a(39),
      c = a(8),
      l = a(71);
    const o = Object(l.d)(l.b),
      i = async () => (await o.getItem(n.o)) || [],
      u = async () => {
        const e = (await o.getItem(n.a)) || Object(s.b)({});
        return JSON.parse(Object(s.a)(e));
      },
      d = async ({ keyId: e, accountName: t }) => {
        const a = await u();
        a[e] = t;
        const r = Object(s.b)(a);
        await o.setItem(n.a, r);
      },
      m = async () => {
        const e = await v();
        return Object(c.k)(e);
      },
      E = async () => {
        var e;
        return null === (e = await o.getItem(n.j)) || void 0 === e || e;
      },
      p = async () => {
        var e;
        return null === (e = await o.getItem(n.k)) || void 0 === e || e;
      },
      b = async () => {
        var e;
        return null === (e = await o.getItem(n.l)) || void 0 === e || e;
      },
      _ = async () => {
        var e;
        return null !== (e = await o.getItem(n.i)) && void 0 !== e && e;
      },
      h = "hw:",
      w = async () => ((await o.getItem(n.n)) || "").indexOf(h) > -1,
      f = async () => {
        const e = (await o.getItem(n.n)) || "";
        return ((await o.getItem(e)) || {}).bipPath || "";
      },
      g = async () => (await o.getItem(n.q)) || r.a,
      v = async () => {
        (await o.getItem(n.r)) || (await o.setItem(n.r, r.a[0]));
        return (await o.getItem(n.r)) || r.a[0];
      },
      y = async () => {
        (await o.getItem(n.q)) || (await o.setItem(n.q, r.a));
        return (await o.getItem(n.q)) || r.a;
      };
  },
  264: function (e, t, a) {
    "use strict";
    var n = a(0),
      r = a.n(n),
      s = a(8),
      c = a(249);
    a.d(t, "a", function () {
      return l;
    });
    const l = ({ publicKey: e = "", isSmall: t = !1, customSize: a, ...n }) => {
      const l = Object(s.s)(e),
        o = {
          ...(t
            ? { "--Icon-padding": "0.2rem", "--Icon-dimension": "1.5rem" }
            : {}),
          ...(a
            ? { "--Icon-padding": a.padding, "--Icon-dimension": a.dimension }
            : {}),
        };
      return r.a.createElement(
        "div",
        { className: "KeyIdenticon" },
        r.a.createElement(
          "div",
          { className: "KeyIdenticon--icon", style: o },
          r.a.createElement(c.a, { publicKey: e })
        ),
        r.a.createElement("span", Object.assign({}, n), l)
      );
    };
  },
  3: function (e, t, a) {
    "use strict";
    var n;
    a.d(t, "a", function () {
      return n;
    }),
      (function (e) {
        (e.debug = "/debug"),
          (e.integrationTest = "/integration-test"),
          (e.welcome = "/"),
          (e.account = "/account"),
          (e.viewPublicKey = "/account/view-public-key"),
          (e.importAccount = "/account/import"),
          (e.connectWallet = "/account/connect"),
          (e.connectWalletPlugin = "/account/connect/plugin"),
          (e.connectLedger = "/account/connect/ledger"),
          (e.accountHistory = "/account-history"),
          (e.sendPayment = "/account/sendPayment"),
          (e.sendPaymentTo = "/account/sendPayment/to"),
          (e.sendPaymentAmount = "/account/sendPayment/amount"),
          (e.sendPaymentType = "/account/sendPayment/amount/type"),
          (e.sendPaymentSettings = "/account/sendPayment/settings"),
          (e.sendPaymentSettingsFee = "/account/sendPayment/settings/fee"),
          (e.sendPaymentSettingsSlippage =
            "/account/sendPayment/settings/slippage"),
          (e.sendPaymentConfirm = "/account/sendPayment/confirm"),
          (e.swap = "/swap"),
          (e.swapAmount = "/swap/amount"),
          (e.swapSettings = "/swap/settings"),
          (e.swapSettingsFee = "/swap/settings/fee"),
          (e.swapSettingsSlippage = "/swap/settings/slippage"),
          (e.swapConfirm = "/swap/confirm"),
          (e.addAccount = "/add-account"),
          (e.signTransaction = "/sign-transaction"),
          (e.grantAccess = "/grant-access"),
          (e.mnemonicPhrase = "/mnemonic-phrase"),
          (e.mnemonicPhraseConfirm = "/mnemonic-phrase/confirm"),
          (e.mnemonicPhraseConfirmed = "/mnemonic-phrase-confirmed"),
          (e.pinExtension = "/pin-extension"),
          (e.unlockAccount = "/unlock-account"),
          (e.verifyAccount = "/verify-account"),
          (e.accountCreator = "/account-creator"),
          (e.recoverAccount = "/recover-account"),
          (e.recoverAccountSuccess = "/recover-account-success"),
          (e.settings = "/settings"),
          (e.displayBackupPhrase = "/settings/display-backup-phrase"),
          (e.about = "/settings/about"),
          (e.preferences = "/settings/preferences"),
          (e.security = "/settings/security"),
          (e.manageAssets = "/manage-assets"),
          (e.addAsset = "/manage-assets/add-asset"),
          (e.searchAsset = "/manage-assets/search-asset"),
          (e.trustlineError = "/manage-assets/trustline-error"),
          (e.addToken = "/manage-assets/add-token"),
          (e.manageNetwork = "/manage-network"),
          (e.addNetwork = "/manage-network/add-network"),
          (e.editNetwork = "/manage-network/edit-network"),
          (e.networkSettings = "/manage-network/network-settings");
      })(n || (n = {}));
  },
  34: function (e, t, a) {
    "use strict";
    a.d(t, "b", function () {
      return c;
    }),
      a.d(t, "a", function () {
        return l;
      });
    var n = a(42),
      r = a.n(n),
      s = a(11);
    const c = (e) => {
        const t = Date.now() + Math.random();
        return (
          window.postMessage(
            { source: s.b, messageId: t, ...e },
            window.location.origin
          ),
          new Promise((a) => {
            let n = 0;
            e.type === s.d.REQUEST_CONNECTION_STATUS &&
              (n = setTimeout(() => {
                a({ isConnected: !1 }),
                  window.removeEventListener("message", r);
              }, 2e3));
            const r = (e) => {
              var c, l;
              e.source === window &&
                (null === (c = null == e ? void 0 : e.data) || void 0 === c
                  ? void 0
                  : c.source) === s.c &&
                (null === (l = null == e ? void 0 : e.data) || void 0 === l
                  ? void 0
                  : l.messagedId) === t &&
                (a(e.data),
                window.removeEventListener("message", r),
                clearTimeout(n));
            };
            window.addEventListener("message", r, !1);
          })
        );
      },
      l = async (e) => {
        let t;
        return (t = s.a ? await c(e) : await r.a.runtime.sendMessage(e)), t;
      };
  },
  344: function (e, t, a) {
    "use strict";
    a.d(t, "a", function () {
      return l;
    });
    var n = a(6),
      r = a(34),
      s = a(102),
      c = a(11);
    const l = async ({ key: e, code: t, networkDetails: a }) => {
      let l,
        o = "";
      try {
        if (
          (({ iconUrl: o } = await Object(r.a)({
            assetCanonical: `${t}:${e}`,
            type: c.e.GET_CACHED_ASSET_ICON,
          })),
          o)
        )
          return o;
      } catch (e) {
        console.error(e);
      }
      try {
        const { networkUrl: t } = a,
          n = Object(s.a)(t);
        l = await n.loadAccount(e);
      } catch (e) {
        return o;
      }
      const { home_domain: i } = l;
      let u;
      try {
        u = await n.StellarTomlResolver.resolve(i);
      } catch (e) {
        return console.error(e), o;
      }
      return (
        u.CURRENCIES &&
          u.CURRENCIES.every(
            async ({ code: a, issuer: n, image: s }) =>
              a !== t ||
              n != e ||
              !s ||
              ((o = s),
              await Object(r.a)({
                assetCanonical: `${t}:${e}`,
                iconUrl: o,
                type: c.e.CACHE_ASSET_ICON,
              }),
              !1)
          ),
        o
      );
    };
  },
  39: function (e, t, a) {
    "use strict";
    a.d(t, "b", function () {
      return s;
    }),
      a.d(t, "a", function () {
        return c;
      }),
      a.d(t, "f", function () {
        return l;
      }),
      a.d(t, "g", function () {
        return o;
      }),
      a.d(t, "e", function () {
        return i;
      }),
      a.d(t, "d", function () {
        return u;
      }),
      a.d(t, "c", function () {
        return d;
      });
    var n = a(335),
      r = a.n(n);
    const s = (e) => btoa(unescape(encodeURIComponent(JSON.stringify(e)))),
      c = (e) => decodeURIComponent(escape(atob(e))),
      l = (e = "", t = "") => `index.html#${e}${t ? "?" : ""}${t}`,
      o = (e) => {
        const t = c(e.replace("?", ""));
        return t ? JSON.parse(t) : {};
      },
      i = (e) => {
        try {
          return new URL(e).hostname;
        } catch {
          return "";
        }
      },
      u = (e) => {
        try {
          const t = new URL(e),
            a = t.hostname.split(".");
          return a.length > 2
            ? `${a[a.length - 2]}.${a[a.length - 1]}`
            : t.hostname;
        } catch {
          return "";
        }
      },
      d = (e) => r.a.toASCII(e);
  },
  44: function (e, t, a) {
    "use strict";
    a.d(t, "a", function () {
      return o;
    }),
      a.d(t, "m", function () {
        return i;
      }),
      a.d(t, "e", function () {
        return u;
      }),
      a.d(t, "f", function () {
        return d;
      }),
      a.d(t, "g", function () {
        return m;
      }),
      a.d(t, "n", function () {
        return E;
      }),
      a.d(t, "j", function () {
        return p;
      }),
      a.d(t, "c", function () {
        return b;
      }),
      a.d(t, "d", function () {
        return _;
      }),
      a.d(t, "i", function () {
        return h;
      }),
      a.d(t, "h", function () {
        return w;
      }),
      a.d(t, "k", function () {
        return f;
      }),
      a.d(t, "b", function () {
        return g;
      }),
      a.d(t, "l", function () {
        return v;
      });
    var n = a(6),
      r = a.n(n),
      s = a(9),
      c = a(8),
      l = a(56);
    const o = ":lp",
      i = (e, t) => {
        const a = [],
          n = [],
          r = t || [];
        return e
          ? (Object.entries(e).forEach(([e, t]) => {
              "native" === e
                ? a.unshift(t)
                : e.includes(o)
                ? n.push(t)
                : a.push(t);
            }),
            a.concat(r).concat(n))
          : a;
      },
      u = (e) =>
        [
          n.Horizon.OperationResponseType.payment,
          n.Horizon.OperationResponseType.pathPayment,
          n.Horizon.OperationResponseType.pathPaymentStrictSend,
        ].includes(e),
      d = (e, t) => {
        const a = Object(l.e)(e, t);
        return !!a && Object.values(l.b).includes(a.fnName);
      },
      m = (e) => 13 === e.type_i && e.source_account === e.to,
      E = ({ balances: e, operations: t, networkDetails: a, publicKey: n }) => {
        const r = {};
        return (
          e.forEach((e) => {
            if ("token" in e) {
              const t = "issuer" in e.token ? e.token.issuer.key : "";
              r[Object(c.d)(e.token.code, t)] = [];
            }
            if ("contractId" in e) {
              const t = e;
              r[Object(c.d)(t.symbol, t.contractId)] = [];
            }
          }),
          t.forEach((e) => {
            u(e.type) &&
              Object.keys(r).forEach((t) => {
                const a = Object(c.c)(t),
                  n = "XLM" === a.code ? "native" : a.code,
                  s = a.issuer;
                ((e.asset_code === n && e.asset_issuer === s) ||
                  e.asset_type === n ||
                  (("source_asset_type" in e || "source_asset_code" in e) &&
                    (e.source_asset_type === n ||
                      (e.source_asset_code === n &&
                        e.source_asset_issuer === s)))) &&
                  r[t].push(e);
              }),
              d(e, a) &&
                Object.keys(r).forEach((t) => {
                  const s = Object(c.c)(t),
                    o = Object(l.e)(e, a);
                  o &&
                    e.source_account === n &&
                    s.issuer === o.contractId &&
                    r[t].push(e);
                });
          }),
          r
        );
      },
      p = (e) =>
        "https://stellar.expert/explorer/" +
        (Object(c.n)(e) ? "testnet" : "public"),
      b = (e) =>
        "https://api.stellar.expert/explorer/" +
        (Object(c.n)(e) ? "testnet" : "public"),
      _ = ({
        accountBalances: e,
        selectedAsset: t,
        recommendedFee: a,
        subentryCount: n,
      }) => {
        let r = "0";
        if (e.length) {
          const c = h(e, t);
          if (!c) return r;
          if ("native" === t) {
            const e = 0.5 * (2 + n);
            let t = new s.BigNumber(c.total.toFixed()).minus(
              new s.BigNumber(e)
            );
            a && (t = t.minus(new s.BigNumber(Number(a)))), (r = t.toFixed());
          } else r = c.total.toFixed();
        }
        return r;
      },
      h = (e, t) =>
        e.find((e) => {
          if ("token" in e) {
            if ("native" === e.token.type) return t === e.token.type;
            if ("issuer" in e.token)
              return t === `${e.token.code}:${e.token.issuer.key}`;
            throw new Error("Asset type not supported");
          }
          if ("contractId" in e) return t === `${e.symbol}:${e.contractId}`;
          throw new Error("Asset type not supported");
        }),
      w = (e) =>
        "token" in e && "issuer" in (null == e ? void 0 : e.token)
          ? e.token.issuer.key.toString()
          : e && "contractId" in e
          ? e.contractId
          : "",
      f = (e, t) => {
        let a = !0;
        try {
          new r.a.Server(e, { allowHttp: t });
        } catch (e) {
          console.error(e), (a = !1);
        }
        return a;
      },
      g = (e, t, a = "...") => {
        if (e.length <= t) return e;
        const n = t - a.length,
          r = Math.ceil(n / 2),
          s = Math.floor(n / 2);
        return e.substring(0, r) + a + e.substring(e.length - s);
      },
      v = (e) => !e.startsWith("G");
  },
  45: function (e, t, a) {
    "use strict";
    var n;
    a.d(t, "a", function () {
      return n;
    }),
      (function (e) {
        (e.APPLICATION_LOADING = "APPLICATION_LOADING"),
          (e.APPLICATION_ERROR = "APPLICATION_ERROR"),
          (e.APPLICATION_STARTED = "APPLICATION_STARTED"),
          (e.PASSWORD_CREATED = "PASSWORD_CREATED"),
          (e.MNEMONIC_PHRASE_CONFIRMED = "MNEMONIC_PHRASE_CONFIRMED"),
          (e.MNEMONIC_PHRASE_FAILED = "MNEMONIC_PHRASE_FAILED");
      })(n || (n = {}));
  },
  546: function (e, t, a) {
    var n;
    (n = function () {
      return (function (e) {
        var t = {};
        function a(n) {
          if (t[n]) return t[n].exports;
          var r = (t[n] = { i: n, l: !1, exports: {} });
          return e[n].call(r.exports, r, r.exports, a), (r.l = !0), r.exports;
        }
        return (
          (a.m = e),
          (a.c = t),
          (a.d = function (e, t, n) {
            a.o(e, t) ||
              Object.defineProperty(e, t, { enumerable: !0, get: n });
          }),
          (a.r = function (e) {
            "undefined" != typeof Symbol &&
              Symbol.toStringTag &&
              Object.defineProperty(e, Symbol.toStringTag, { value: "Module" }),
              Object.defineProperty(e, "__esModule", { value: !0 });
          }),
          (a.t = function (e, t) {
            if ((1 & t && (e = a(e)), 8 & t)) return e;
            if (4 & t && "object" == typeof e && e && e.__esModule) return e;
            var n = Object.create(null);
            if (
              (a.r(n),
              Object.defineProperty(n, "default", { enumerable: !0, value: e }),
              2 & t && "string" != typeof e)
            )
              for (var r in e)
                a.d(
                  n,
                  r,
                  function (t) {
                    return e[t];
                  }.bind(null, r)
                );
            return n;
          }),
          (a.n = function (e) {
            var t =
              e && e.__esModule
                ? function () {
                    return e.default;
                  }
                : function () {
                    return e;
                  };
            return a.d(t, "a", t), t;
          }),
          (a.o = function (e, t) {
            return Object.prototype.hasOwnProperty.call(e, t);
          }),
          (a.p = ""),
          a((a.s = "./src/index.ts"))
        );
      })({
        "../../@shared/api/external.ts":
          /*!***************************************************************************!*\
  !*** /Users/aristidesstaffieri/stellar/freighter/@shared/api/external.ts ***!
  \***************************************************************************/
          /*! exports provided: requestPublicKey, submitTransaction, submitBlob, requestNetwork, requestNetworkDetails, requestConnectionStatus, requestAllowedStatus, setAllowedStatus, requestUserInfo */ function (
            e,
            t,
            a
          ) {
            "use strict";
            a.r(t),
              a.d(t, "requestPublicKey", function () {
                return s;
              }),
              a.d(t, "submitTransaction", function () {
                return c;
              }),
              a.d(t, "submitBlob", function () {
                return l;
              }),
              a.d(t, "requestNetwork", function () {
                return o;
              }),
              a.d(t, "requestNetworkDetails", function () {
                return i;
              }),
              a.d(t, "requestConnectionStatus", function () {
                return u;
              }),
              a.d(t, "requestAllowedStatus", function () {
                return d;
              }),
              a.d(t, "setAllowedStatus", function () {
                return m;
              }),
              a.d(t, "requestUserInfo", function () {
                return E;
              });
            var n = a(
                /*! ../constants/services */ "../../@shared/constants/services.ts"
              ),
              r = a(
                /*! ./helpers/extensionMessaging */ "../../@shared/api/helpers/extensionMessaging.ts"
              );
            const s = async () => {
                let e = { publicKey: "", error: "" };
                try {
                  e = await Object(r.sendMessageToContentScript)({
                    type: n.EXTERNAL_SERVICE_TYPES.REQUEST_ACCESS,
                  });
                } catch (e) {
                  console.error(e);
                }
                const { publicKey: t, error: a } = e;
                if (a) throw a;
                return t;
              },
              c = async (e, t, a) => {
                let s = "",
                  c = "",
                  l = "";
                "object" == typeof t
                  ? ((s = t.network || ""),
                    (c = t.accountToSign || ""),
                    (l = t.networkPassphrase || ""))
                  : ((s = t || ""), (c = a || ""));
                let o = { signedTransaction: "", error: "" };
                try {
                  o = await Object(r.sendMessageToContentScript)({
                    transactionXdr: e,
                    network: s,
                    networkPassphrase: l,
                    accountToSign: c,
                    type: n.EXTERNAL_SERVICE_TYPES.SUBMIT_TRANSACTION,
                  });
                } catch (e) {
                  console.error(e);
                }
                const { signedTransaction: i, error: u } = o;
                if (u) throw u;
                return i;
              },
              l = async (e, t) => {
                let a = { signedBlob: "", error: "" };
                const s = (t || {}).accountToSign || "";
                try {
                  a = await Object(r.sendMessageToContentScript)({
                    blob: e,
                    accountToSign: s,
                    type: n.EXTERNAL_SERVICE_TYPES.SUBMIT_BLOB,
                  });
                } catch (e) {
                  console.error(e);
                }
                const { signedBlob: c, error: l } = a;
                if (l) throw l;
                return c;
              },
              o = async () => {
                let e = { network: "", error: "" };
                try {
                  e = await Object(r.sendMessageToContentScript)({
                    type: n.EXTERNAL_SERVICE_TYPES.REQUEST_NETWORK,
                  });
                } catch (e) {
                  console.error(e);
                }
                const { network: t, error: a } = e;
                if (a) throw a;
                return t;
              },
              i = async () => {
                let e = {
                  networkDetails: {
                    network: "",
                    networkName: "",
                    networkUrl: "",
                    networkPassphrase: "",
                  },
                  error: "",
                };
                try {
                  e = await Object(r.sendMessageToContentScript)({
                    type: n.EXTERNAL_SERVICE_TYPES.REQUEST_NETWORK_DETAILS,
                  });
                } catch (e) {
                  console.error(e);
                }
                const { networkDetails: t, error: a } = e,
                  { network: s, networkUrl: c, networkPassphrase: l } = t;
                if (a) throw a;
                return { network: s, networkUrl: c, networkPassphrase: l };
              },
              u = async () => {
                let e = { isConnected: !1 };
                try {
                  e = await Object(r.sendMessageToContentScript)({
                    type: n.EXTERNAL_SERVICE_TYPES.REQUEST_CONNECTION_STATUS,
                  });
                } catch (e) {
                  console.error(e);
                }
                return e.isConnected;
              },
              d = async () => {
                let e = { isAllowed: !1 };
                try {
                  e = await Object(r.sendMessageToContentScript)({
                    type: n.EXTERNAL_SERVICE_TYPES.REQUEST_ALLOWED_STATUS,
                  });
                } catch (e) {
                  console.error(e);
                }
                return e.isAllowed;
              },
              m = async () => {
                let e = { isAllowed: !1, error: "" };
                try {
                  e = await Object(r.sendMessageToContentScript)({
                    type: n.EXTERNAL_SERVICE_TYPES.SET_ALLOWED_STATUS,
                  });
                } catch (e) {
                  console.error(e);
                }
                const { isAllowed: t, error: a } = e;
                if (a) throw a;
                return t;
              },
              E = async () => {
                let e = { userInfo: { publicKey: "" }, error: "" };
                try {
                  e = await Object(r.sendMessageToContentScript)({
                    type: n.EXTERNAL_SERVICE_TYPES.REQUEST_USER_INFO,
                  });
                } catch (e) {
                  console.error(e);
                }
                const { userInfo: t, error: a } = e;
                if (a) throw a;
                return t;
              };
          },
        "../../@shared/api/helpers/extensionMessaging.ts":
          /*!*********************************************************************************************!*\
  !*** /Users/aristidesstaffieri/stellar/freighter/@shared/api/helpers/extensionMessaging.ts ***!
  \*********************************************************************************************/
          /*! exports provided: sendMessageToContentScript, sendMessageToBackground */ function (
            e,
            t,
            a
          ) {
            "use strict";
            a.r(t),
              a.d(t, "sendMessageToContentScript", function () {
                return s;
              }),
              a.d(t, "sendMessageToBackground", function () {
                return c;
              });
            var n = a(
                /*! webextension-polyfill */ "../../config/shims/webextension-polyfill.ts"
              ),
              r = a(
                /*! ../../constants/services */ "../../@shared/constants/services.ts"
              );
            const s = (e) => {
                const t = Date.now() + Math.random();
                return (
                  window.postMessage(
                    { source: r.EXTERNAL_MSG_REQUEST, messageId: t, ...e },
                    window.location.origin
                  ),
                  new Promise((a) => {
                    let n = 0;
                    e.type ===
                      r.EXTERNAL_SERVICE_TYPES.REQUEST_CONNECTION_STATUS &&
                      (n = setTimeout(() => {
                        a({ isConnected: !1 }),
                          window.removeEventListener("message", s);
                      }, 2e3));
                    const s = (e) => {
                      var c, l;
                      e.source === window &&
                        (null === (c = null == e ? void 0 : e.data) ||
                        void 0 === c
                          ? void 0
                          : c.source) === r.EXTERNAL_MSG_RESPONSE &&
                        (null === (l = null == e ? void 0 : e.data) ||
                        void 0 === l
                          ? void 0
                          : l.messagedId) === t &&
                        (a(e.data),
                        window.removeEventListener("message", s),
                        clearTimeout(n));
                    };
                    window.addEventListener("message", s, !1);
                  })
                );
              },
              c = async (e) => {
                let t;
                return (
                  (t = r.DEV_SERVER
                    ? await s(e)
                    : await n.default.runtime.sendMessage(e)),
                  t
                );
              };
          },
        "../../@shared/constants/services.ts":
          /*!*********************************************************************************!*\
  !*** /Users/aristidesstaffieri/stellar/freighter/@shared/constants/services.ts ***!
  \*********************************************************************************/
          /*! exports provided: SERVICE_TYPES, EXTERNAL_SERVICE_TYPES, EXTERNAL_MSG_REQUEST, EXTERNAL_MSG_RESPONSE, DEV_SERVER */ function (
            e,
            t,
            a
          ) {
            "use strict";
            var n, r;
            a.r(t),
              a.d(t, "SERVICE_TYPES", function () {
                return n;
              }),
              a.d(t, "EXTERNAL_SERVICE_TYPES", function () {
                return r;
              }),
              a.d(t, "EXTERNAL_MSG_REQUEST", function () {
                return s;
              }),
              a.d(t, "EXTERNAL_MSG_RESPONSE", function () {
                return c;
              }),
              a.d(t, "DEV_SERVER", function () {
                return l;
              }),
              (function (e) {
                (e.CREATE_ACCOUNT = "CREATE_ACCOUNT"),
                  (e.FUND_ACCOUNT = "FUND_ACCOUNT"),
                  (e.ADD_ACCOUNT = "ADD_ACCOUNT"),
                  (e.IMPORT_ACCOUNT = "IMPORT_ACCOUNT"),
                  (e.IMPORT_HARDWARE_WALLET = "IMPORT_HARDWARE_WALLET"),
                  (e.LOAD_ACCOUNT = "LOAD_ACCOUNT"),
                  (e.MAKE_ACCOUNT_ACTIVE = "MAKE_ACCOUNT_ACTIVE"),
                  (e.UPDATE_ACCOUNT_NAME = "UPDATE_ACCOUNT_NAME"),
                  (e.GET_MNEMONIC_PHRASE = "GET_MNEMONIC_PHRASE"),
                  (e.CONFIRM_MNEMONIC_PHRASE = "CONFIRM_MNEMONIC_PHRASE"),
                  (e.RECOVER_ACCOUNT = "RECOVER_ACCOUNT"),
                  (e.CONFIRM_PASSWORD = "CONFIRM_PASSWORD"),
                  (e.REJECT_ACCESS = "REJECT_ACCESS"),
                  (e.GRANT_ACCESS = "GRANT_ACCESS"),
                  (e.SIGN_TRANSACTION = "SIGN_TRANSACTION"),
                  (e.SIGN_BLOB = "SIGN_BLOB"),
                  (e.HANDLE_SIGNED_HW_TRANSACTION =
                    "HANDLE_SIGNED_HW_TRANSACTION"),
                  (e.REJECT_TRANSACTION = "REJECT_TRANSACTION"),
                  (e.SIGN_FREIGHTER_TRANSACTION = "SIGN_FREIGHTER_TRANSACTION"),
                  (e.SIGN_FREIGHTER_SOROBAN_TRANSACTION =
                    "SIGN_FREIGHTER_SOROBAN_TRANSACTION"),
                  (e.ADD_RECENT_ADDRESS = "ADD_RECENT_ADDRESS"),
                  (e.LOAD_RECENT_ADDRESSES = "LOAD_RECENT_ADDRESSES"),
                  (e.SIGN_OUT = "SIGN_OUT"),
                  (e.SHOW_BACKUP_PHRASE = "SHOW_BACKUP_PHRASE"),
                  (e.SAVE_ALLOWLIST = "SAVE_ALLOWLIST"),
                  (e.SAVE_SETTINGS = "SAVE_SETTINGS"),
                  (e.LOAD_SETTINGS = "LOAD_SETTINGS"),
                  (e.GET_CACHED_ASSET_ICON = "GET_CACHED_ASSET_ICON"),
                  (e.CACHE_ASSET_ICON = "CACHE_ASSET_ICON"),
                  (e.GET_CACHED_ASSET_DOMAIN = "GET_CACHED_ASSET_DOMAIN"),
                  (e.CACHE_ASSET_DOMAIN = "CACHE_ASSET_DOMAIN"),
                  (e.GET_BLOCKED_ACCOUNTS = "GET_BLOCKED_ACCOUNTS"),
                  (e.GET_BLOCKED_DOMAINS = "GET_BLOCKED_DOMAINS"),
                  (e.ADD_CUSTOM_NETWORK = "ADD_CUSTOM_NETWORK"),
                  (e.CHANGE_NETWORK = "CHANGE_NETWORK"),
                  (e.REMOVE_CUSTOM_NETWORK = "REMOVE_CUSTOM_NETWORK"),
                  (e.EDIT_CUSTOM_NETWORK = "EDIT_CUSTOM_NETWORK"),
                  (e.RESET_EXP_DATA = "RESET_EXP_DATA"),
                  (e.ADD_TOKEN_ID = "ADD_TOKEN_ID"),
                  (e.GET_TOKEN_IDS = "GET_TOKEN_IDS");
              })(n || (n = {})),
              (function (e) {
                (e.REQUEST_ACCESS = "REQUEST_ACCESS"),
                  (e.SUBMIT_TRANSACTION = "SUBMIT_TRANSACTION"),
                  (e.SUBMIT_BLOB = "SUBMIT_BLOB"),
                  (e.REQUEST_NETWORK = "REQUEST_NETWORK"),
                  (e.REQUEST_NETWORK_DETAILS = "REQUEST_NETWORK_DETAILS"),
                  (e.REQUEST_CONNECTION_STATUS = "REQUEST_CONNECTION_STATUS"),
                  (e.REQUEST_ALLOWED_STATUS = "REQUEST_ALLOWED_STATUS"),
                  (e.SET_ALLOWED_STATUS = "SET_ALLOWED_STATUS"),
                  (e.REQUEST_USER_INFO = "REQUEST_USER_INFO");
              })(r || (r = {}));
            const s = "FREIGHTER_EXTERNAL_MSG_REQUEST",
              c = "FREIGHTER_EXTERNAL_MSG_RESPONSE",
              l = !1;
          },
        "../../config/shims/webextension-polyfill.ts":
          /*!*****************************************************************************************!*\
  !*** /Users/aristidesstaffieri/stellar/freighter/config/shims/webextension-polyfill.ts ***!
  \*****************************************************************************************/
          /*! exports provided: default */ function (e, t, a) {
            "use strict";
            a.r(t),
              (t.default = {
                tabs: { create: ({ url: e }) => window.open(e) },
              });
          },
        "./src/getNetwork.ts":
          /*!***************************!*\
  !*** ./src/getNetwork.ts ***!
  \***************************/
          /*! exports provided: getNetwork */ function (e, t, a) {
            "use strict";
            a.r(t),
              a.d(t, "getNetwork", function () {
                return s;
              });
            var n = a(
                /*! @shared/api/external */ "../../@shared/api/external.ts"
              ),
              r = a(/*! . */ "./src/index.ts");
            const s = () =>
              r.isBrowser ? Object(n.requestNetwork)() : Promise.resolve("");
          },
        "./src/getNetworkDetails.ts":
          /*!**********************************!*\
  !*** ./src/getNetworkDetails.ts ***!
  \**********************************/
          /*! exports provided: getNetworkDetails */ function (e, t, a) {
            "use strict";
            a.r(t),
              a.d(t, "getNetworkDetails", function () {
                return s;
              });
            var n = a(
                /*! @shared/api/external */ "../../@shared/api/external.ts"
              ),
              r = a(/*! . */ "./src/index.ts");
            const s = () =>
              r.isBrowser
                ? Object(n.requestNetworkDetails)()
                : Promise.resolve({
                    network: "",
                    networkUrl: "",
                    networkPassphrase: "",
                  });
          },
        "./src/getPublicKey.ts":
          /*!*****************************!*\
  !*** ./src/getPublicKey.ts ***!
  \*****************************/
          /*! exports provided: getPublicKey */ function (e, t, a) {
            "use strict";
            a.r(t),
              a.d(t, "getPublicKey", function () {
                return s;
              });
            var n = a(
                /*! @shared/api/external */ "../../@shared/api/external.ts"
              ),
              r = a(/*! . */ "./src/index.ts");
            const s = () =>
              r.isBrowser ? Object(n.requestPublicKey)() : Promise.resolve("");
          },
        "./src/getUserInfo.ts":
          /*!****************************!*\
  !*** ./src/getUserInfo.ts ***!
  \****************************/
          /*! exports provided: getUserInfo */ function (e, t, a) {
            "use strict";
            a.r(t),
              a.d(t, "getUserInfo", function () {
                return s;
              });
            var n = a(
                /*! @shared/api/external */ "../../@shared/api/external.ts"
              ),
              r = a(/*! . */ "./src/index.ts");
            const s = () =>
              r.isBrowser
                ? Object(n.requestUserInfo)()
                : Promise.resolve({ publicKey: "" });
          },
        "./src/index.ts":
          /*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
          /*! exports provided: isBrowser, getPublicKey, signTransaction, signBlob, isConnected, getNetwork, getNetworkDetails, isAllowed, setAllowed, getUserInfo, default */ function (
            e,
            t,
            a
          ) {
            "use strict";
            a.r(t),
              a.d(t, "isBrowser", function () {
                return m;
              });
            var n = a(/*! ./getPublicKey */ "./src/getPublicKey.ts");
            a.d(t, "getPublicKey", function () {
              return n.getPublicKey;
            });
            var r = a(/*! ./signTransaction */ "./src/signTransaction.ts");
            a.d(t, "signTransaction", function () {
              return r.signTransaction;
            });
            var s = a(/*! ./signBlob */ "./src/signBlob.ts");
            a.d(t, "signBlob", function () {
              return s.signBlob;
            });
            var c = a(/*! ./isConnected */ "./src/isConnected.ts");
            a.d(t, "isConnected", function () {
              return c.isConnected;
            });
            var l = a(/*! ./getNetwork */ "./src/getNetwork.ts");
            a.d(t, "getNetwork", function () {
              return l.getNetwork;
            });
            var o = a(/*! ./getNetworkDetails */ "./src/getNetworkDetails.ts");
            a.d(t, "getNetworkDetails", function () {
              return o.getNetworkDetails;
            });
            var i = a(/*! ./isAllowed */ "./src/isAllowed.ts");
            a.d(t, "isAllowed", function () {
              return i.isAllowed;
            });
            var u = a(/*! ./setAllowed */ "./src/setAllowed.ts");
            a.d(t, "setAllowed", function () {
              return u.setAllowed;
            });
            var d = a(/*! ./getUserInfo */ "./src/getUserInfo.ts");
            a.d(t, "getUserInfo", function () {
              return d.getUserInfo;
            });
            const m = "undefined" != typeof window;
            t.default = {
              getPublicKey: n.getPublicKey,
              signTransaction: r.signTransaction,
              signBlob: s.signBlob,
              isConnected: c.isConnected,
              getNetwork: l.getNetwork,
              getNetworkDetails: o.getNetworkDetails,
              isAllowed: i.isAllowed,
              setAllowed: u.setAllowed,
              getUserInfo: d.getUserInfo,
            };
          },
        "./src/isAllowed.ts":
          /*!**************************!*\
  !*** ./src/isAllowed.ts ***!
  \**************************/
          /*! exports provided: isAllowed */ function (e, t, a) {
            "use strict";
            a.r(t),
              a.d(t, "isAllowed", function () {
                return s;
              });
            var n = a(
                /*! @shared/api/external */ "../../@shared/api/external.ts"
              ),
              r = a(/*! . */ "./src/index.ts");
            const s = () =>
              r.isBrowser
                ? Object(n.requestAllowedStatus)()
                : Promise.resolve(!1);
          },
        "./src/isConnected.ts":
          /*!****************************!*\
  !*** ./src/isConnected.ts ***!
  \****************************/
          /*! exports provided: isConnected */ function (e, t, a) {
            "use strict";
            a.r(t),
              a.d(t, "isConnected", function () {
                return s;
              });
            var n = a(
                /*! @shared/api/external */ "../../@shared/api/external.ts"
              ),
              r = a(/*! . */ "./src/index.ts");
            const s = () =>
              r.isBrowser
                ? window.freighter
                  ? Promise.resolve(window.freighter)
                  : Object(n.requestConnectionStatus)()
                : Promise.resolve(!1);
          },
        "./src/setAllowed.ts":
          /*!***************************!*\
  !*** ./src/setAllowed.ts ***!
  \***************************/
          /*! exports provided: setAllowed */ function (e, t, a) {
            "use strict";
            a.r(t),
              a.d(t, "setAllowed", function () {
                return s;
              });
            var n = a(
                /*! @shared/api/external */ "../../@shared/api/external.ts"
              ),
              r = a(/*! . */ "./src/index.ts");
            const s = () =>
              r.isBrowser ? Object(n.setAllowedStatus)() : Promise.resolve(!1);
          },
        "./src/signBlob.ts":
          /*!*************************!*\
  !*** ./src/signBlob.ts ***!
  \*************************/
          /*! exports provided: signBlob */ function (e, t, a) {
            "use strict";
            a.r(t),
              a.d(t, "signBlob", function () {
                return s;
              });
            var n = a(
                /*! @shared/api/external */ "../../@shared/api/external.ts"
              ),
              r = a(/*! . */ "./src/index.ts");
            const s = (e, t) =>
              r.isBrowser ? Object(n.submitBlob)(e, t) : Promise.resolve("");
          },
        "./src/signTransaction.ts":
          /*!********************************!*\
  !*** ./src/signTransaction.ts ***!
  \********************************/
          /*! exports provided: signTransaction */ function (e, t, a) {
            "use strict";
            a.r(t),
              a.d(t, "signTransaction", function () {
                return s;
              });
            var n = a(
                /*! @shared/api/external */ "../../@shared/api/external.ts"
              ),
              r = a(/*! . */ "./src/index.ts");
            const s = (e, t) =>
              r.isBrowser
                ? Object(n.submitTransaction)(e, t)
                : Promise.resolve("");
          },
      });
    }),
      (e.exports = n());
  },
  56: function (e, t, a) {
    "use strict";
    a.d(t, "b", function () {
      return n;
    }),
      a.d(t, "a", function () {
        return i;
      }),
      a.d(t, "d", function () {
        return u;
      }),
      a.d(t, "c", function () {
        return d;
      }),
      a.d(t, "i", function () {
        return m;
      }),
      a.d(t, "h", function () {
        return E;
      }),
      a.d(t, "g", function () {
        return p;
      }),
      a.d(t, "f", function () {
        return h;
      }),
      a.d(t, "e", function () {
        return w;
      });
    var n,
      r = a(9),
      s = a.n(r),
      c = a(27),
      l = a(114);
    !(function (e) {
      (e.transfer = "transfer"), (e.mint = "mint");
    })(n || (n = {}));
    const o = ["invoke_host_function", "invokeHostFunction"],
      i = 7,
      u = (e, t, a) => {
        if (a) {
          const a = e.split(":")[1],
            n = t.find(({ contractId: e }) => e === a);
          if (n) return Number(n.decimals);
        }
        return i;
      },
      d = (e, t) => {
        let a = e.toString();
        if (t > 0) {
          for (
            a = e.shiftedBy(-t).toFixed(t).toString();
            "0" === a[a.length - 1];

          )
            a = a.substring(0, a.length - 1);
          a.endsWith(".") && (a = a.substring(0, a.length - 1));
        }
        return a;
      },
      m = (e, t) => {
        const a = e.split(".");
        let n = a[0],
          r = a[1];
        for (n || (n = "0"), r || (r = "0"); "0" === r[r.length - 1]; )
          r = r.substring(0, r.length - 1);
        for ("" === r && (r = "0"); r.length < t; ) r += "0";
        const c = new s.a(n),
          l = new s.a(r);
        return c.shiftedBy(t).plus(l);
      },
      E = (e, t) => {
        const a = e.find(({ contractId: e }) => e === t);
        if (!a) throw new Error("Balance not found");
        return d(new s.a(a.total), Number(a.decimals));
      },
      p = async (e, t) => {
        const a = new c.Contract(t),
          n = e.server,
          r = e
            .newTxBuilder()
            .addOperation(a.call("decimals"))
            .setTimeout(c.TimeoutInfinite)
            .build(),
          { results: s } = await n.simulateTransaction(r);
        if (!s || 1 !== s.length)
          throw new Error("Invalid response from simulateTransaction");
        const o = s[0];
        return Object(l.c)(o.xdr);
      },
      b = (e) => o.includes(e.type),
      _ = (e) => {
        var t;
        if (
          !(null === (t = null == e ? void 0 : e.func) || void 0 === t
            ? void 0
            : t.invokeContract)
        )
          return null;
        let a;
        try {
          a = e.func.invokeContract();
        } catch (e) {
          return null;
        }
        const r = c.StrKey.encodeContract(a[0].address().contractId()),
          s = a[1].sym().toString(),
          o = a.slice(2);
        if (s !== n.transfer && s !== n.mint) return null;
        let i;
        try {
          i = ((e, t) => {
            let a, r, s;
            switch (e) {
              case n.transfer:
                (r = c.StrKey.encodeEd25519PublicKey(
                  t[0].address().accountId().ed25519()
                )),
                  (s = c.StrKey.encodeEd25519PublicKey(
                    t[1].address().accountId().ed25519()
                  )),
                  (a = Object(l.f)(t[2]));
                break;
              case n.mint:
                (s = c.StrKey.encodeEd25519PublicKey(
                  t[0].address().accountId().ed25519()
                )),
                  (a = t[1].i128().lo().low);
                break;
              default:
                a = 0;
            }
            return { from: r, to: s, amount: a };
          })(s, o);
        } catch (e) {
          return null;
        }
        return { fnName: s, contractId: r, ...i };
      },
      h = (e) => (b(e) ? _(e) : null),
      w = (e, t) => {
        if (!b(e)) return null;
        const a = c.TransactionBuilder.fromXDR(
          e.transaction_attr.envelope_xdr,
          t.networkPassphrase
        ).operations[0];
        return _(a);
      };
  },
  578: function (e) {
    e.exports = JSON.parse('{"a":"5.2.4"}');
  },
  579: function (e, t) {
    e.exports =
      "data:image/svg+xml,%3Csvg width='16' height='16' viewBox='0 0 16 16' fill='none' xmlns='http://www.w3.org/2000/svg'%3E %3Cpath d='M7.99994 6.37116V8.58077M7.99994 10.7904H8.00568M7.018 3.53182L2.15392 11.3428C2.05363 11.5099 2.00057 11.6993 2 11.8922C1.99944 12.0851 2.0514 12.2748 2.15071 12.4424C2.25003 12.61 2.39323 12.7496 2.56607 12.8475C2.73892 12.9453 2.93538 12.9979 3.13592 13H12.8641C13.0646 12.9979 13.2611 12.9453 13.4339 12.8475C13.6068 12.7496 13.75 12.61 13.8493 12.4424C13.9486 12.2748 14.0006 12.0851 14 11.8922C13.9994 11.6993 13.9464 11.5099 13.8461 11.3428L8.982 3.53182C8.87963 3.36947 8.73548 3.23525 8.56347 3.14209C8.39146 3.04894 8.1974 3 8 3C7.8026 3 7.60854 3.04894 7.43653 3.14209C7.26452 3.23525 7.12037 3.36947 7.018 3.53182Z' stroke='%23F2555A' stroke-width='1.5' stroke-linecap='round' stroke-linejoin='round'/%3E %3C/svg%3E";
  },
  593: function (e, t) {
    e.exports =
      "data:image/svg+xml,%3Csvg width='163' height='48' viewBox='0 0 163 48' fill='none' xmlns='http://www.w3.org/2000/svg'%3E %3Crect width='48' height='48' rx='13.5' fill='url(%23paint0_linear_137_303)'/%3E %3Cpath fill-rule='evenodd' clip-rule='evenodd' d='M22.4986 16C21.9066 13.6997 19.8185 12 17.3333 12C14.3878 12 12 14.3878 12 17.3333C12 20.2789 14.3878 22.6667 17.3333 22.6667C19.8185 22.6667 21.9066 20.967 22.4986 18.6667H27.1111V23.1111H29.7778V18.6667H31.5556V23.1111H34.2222V18.6667H36V16H22.4986ZM20 17.3333C20 18.8061 18.8061 20 17.3333 20C15.8606 20 14.6667 18.8061 14.6667 17.3333C14.6667 15.8606 15.8606 14.6667 17.3333 14.6667C18.8061 14.6667 20 15.8606 20 17.3333Z' fill='white'/%3E %3Cpath fill-rule='evenodd' clip-rule='evenodd' d='M25.5014 32C26.0934 34.3003 28.1815 36 30.6667 36C33.6122 36 36 33.6122 36 30.6667C36 27.7211 33.6122 25.3333 30.6667 25.3333C28.1815 25.3333 26.0934 27.033 25.5014 29.3333H20.8889V24.8889H18.2222L18.2222 29.3333H16.4444L16.4444 24.8889H13.7778L13.7778 29.3333H12L12 32H25.5014ZM28 30.6667C28 29.1939 29.1939 28 30.6667 28C32.1394 28 33.3333 29.1939 33.3333 30.6667C33.3333 32.1394 32.1394 33.3333 30.6667 33.3333C29.1939 33.3333 28 32.1394 28 30.6667Z' fill='white'/%3E %3Cpath d='M64 31.8182V14.3636H74.5493V17.6606H67.2607V21.4424H73.1108V24.7394H67.2607V31.8182H64Z' fill='white'/%3E %3Cpath d='M75.7546 31.8182V18.7273H78.6317V21.9273L78.32 21.5152C78.4879 21.0626 78.7116 20.6505 78.9913 20.2788C79.2711 19.9071 79.6147 19.6 80.0223 19.3576C80.334 19.1636 80.6736 19.0141 81.0413 18.9091C81.4089 18.796 81.7885 18.7273 82.1801 18.703C82.5717 18.6707 82.9633 18.6788 83.3549 18.7273V21.8061C82.9953 21.6929 82.5757 21.6566 82.0962 21.697C81.6247 21.7293 81.1971 21.8384 80.8135 22.0242C80.4299 22.202 80.1062 22.4404 79.8425 22.7394C79.5787 23.0303 79.3789 23.3778 79.2431 23.7818C79.1072 24.1778 79.0393 24.6263 79.0393 25.1273V31.8182H75.7546Z' fill='white'/%3E %3Cpath d='M90.46 32.1818C89.1333 32.1818 87.9625 31.8949 86.9475 31.3212C85.9405 30.7394 85.1493 29.9434 84.5739 28.9333C84.0065 27.9152 83.7228 26.7515 83.7228 25.4424C83.7228 24.0121 84.0025 22.7677 84.5619 21.7091C85.1214 20.6505 85.8926 19.8303 86.8756 19.2485C87.8586 18.6586 88.9894 18.3636 90.2681 18.3636C91.6268 18.3636 92.7816 18.6869 93.7326 19.3333C94.6837 19.9798 95.3869 20.8889 95.8425 22.0606C96.298 23.2323 96.4579 24.6101 96.322 26.1939H93.0973V24.9818C93.0973 23.6485 92.8855 22.6909 92.4619 22.1091C92.0463 21.5192 91.363 21.2242 90.412 21.2242C89.3011 21.2242 88.482 21.5677 87.9545 22.2545C87.435 22.9333 87.1753 23.9394 87.1753 25.2727C87.1753 26.4929 87.435 27.4384 87.9545 28.1091C88.482 28.7717 89.2532 29.103 90.2681 29.103C90.9075 29.103 91.4549 28.9616 91.9105 28.6788C92.366 28.396 92.7137 27.9879 92.9534 27.4545L96.2141 28.4C95.7266 29.596 94.9554 30.5253 93.9005 31.1879C92.8535 31.8505 91.7067 32.1818 90.46 32.1818ZM86.1683 26.1939V23.7455H94.7516V26.1939H86.1683Z' fill='white'/%3E %3Cpath d='M98.3095 16.9091V14H101.57V16.9091H98.3095ZM98.3095 31.8182V18.7273H101.57V31.8182H98.3095Z' fill='white'/%3E %3Cpath d='M109.743 38C109.008 38 108.309 37.8788 107.646 37.6364C106.982 37.402 106.387 37.0707 105.859 36.6424C105.34 36.2222 104.916 35.7293 104.589 35.1636L107.61 33.6848C107.817 34.0727 108.113 34.3677 108.497 34.5697C108.888 34.7717 109.312 34.8727 109.767 34.8727C110.255 34.8727 110.715 34.7879 111.146 34.6182C111.578 34.4566 111.921 34.2101 112.177 33.8788C112.441 33.5556 112.565 33.1515 112.549 32.6667V28.8606H112.956V18.7273H115.809V32.7152C115.809 33.0384 115.793 33.3414 115.761 33.6242C115.737 33.9152 115.689 34.202 115.618 34.4848C115.41 35.2848 115.022 35.9434 114.455 36.4606C113.895 36.9778 113.208 37.3616 112.393 37.6121C111.578 37.8707 110.695 38 109.743 38ZM109.456 32.1818C108.265 32.1818 107.222 31.8788 106.327 31.2727C105.432 30.6667 104.733 29.8424 104.229 28.8C103.734 27.7576 103.486 26.5818 103.486 25.2727C103.486 23.9394 103.738 22.7556 104.241 21.7212C104.753 20.6788 105.468 19.8586 106.387 19.2606C107.306 18.6626 108.385 18.3636 109.624 18.3636C110.854 18.3636 111.889 18.6667 112.728 19.2727C113.568 19.8788 114.203 20.703 114.635 21.7455C115.066 22.7879 115.282 23.9636 115.282 25.2727C115.282 26.5818 115.062 27.7576 114.623 28.8C114.191 29.8424 113.544 30.6667 112.681 31.2727C111.817 31.8788 110.742 32.1818 109.456 32.1818ZM109.983 29.2485C110.711 29.2485 111.29 29.0828 111.721 28.7515C112.161 28.4202 112.477 27.9556 112.669 27.3576C112.86 26.7596 112.956 26.0646 112.956 25.2727C112.956 24.4808 112.86 23.7859 112.669 23.1879C112.477 22.5899 112.169 22.1253 111.745 21.7939C111.33 21.4626 110.782 21.297 110.103 21.297C109.376 21.297 108.776 21.4788 108.305 21.8424C107.841 22.198 107.498 22.6788 107.274 23.2848C107.05 23.8828 106.938 24.5455 106.938 25.2727C106.938 26.0081 107.046 26.6788 107.262 27.2848C107.478 27.8828 107.809 28.3596 108.257 28.7152C108.705 29.0707 109.28 29.2485 109.983 29.2485Z' fill='white'/%3E %3Cpath d='M127.031 31.8182V25.6364C127.031 25.3374 127.015 24.9576 126.983 24.497C126.951 24.0283 126.851 23.5596 126.683 23.0909C126.515 22.6222 126.239 22.2303 125.856 21.9152C125.48 21.6 124.945 21.4424 124.249 21.4424C123.97 21.4424 123.67 21.4869 123.35 21.5758C123.031 21.6646 122.731 21.8384 122.451 22.097C122.171 22.3475 121.94 22.7192 121.756 23.2121C121.58 23.7051 121.492 24.3596 121.492 25.1758L119.622 24.2788C119.622 23.2444 119.83 22.2747 120.245 21.3697C120.661 20.4646 121.284 19.7333 122.115 19.1758C122.955 18.6182 124.01 18.3394 125.28 18.3394C126.295 18.3394 127.122 18.5131 127.762 18.8606C128.401 19.2081 128.897 19.6485 129.248 20.1818C129.608 20.7152 129.864 21.2727 130.015 21.8545C130.167 22.4283 130.259 22.9535 130.291 23.4303C130.323 23.9071 130.339 24.2545 130.339 24.4727V31.8182H127.031ZM118.183 31.8182V14.3636H121.085V23.3333H121.492V31.8182H118.183Z' fill='white'/%3E %3Cpath d='M140.259 31.8182C139.364 31.9879 138.485 32.0606 137.622 32.0364C136.766 32.0202 135.999 31.8707 135.32 31.5879C134.649 31.297 134.137 30.8323 133.785 30.1939C133.466 29.596 133.298 28.9899 133.282 28.3758C133.266 27.7535 133.258 27.0505 133.258 26.2667V15.0909H136.519V26.0727C136.519 26.5818 136.523 27.0424 136.531 27.4545C136.547 27.8586 136.631 28.1818 136.782 28.4242C137.07 28.8848 137.53 29.1354 138.161 29.1758C138.792 29.2162 139.492 29.1838 140.259 29.0788V31.8182ZM131.052 21.2727V18.7273H140.259V21.2727H131.052Z' fill='white'/%3E %3Cpath d='M147.477 32.1818C146.15 32.1818 144.98 31.8949 143.965 31.3212C142.958 30.7394 142.166 29.9434 141.591 28.9333C141.024 27.9152 140.74 26.7515 140.74 25.4424C140.74 24.0121 141.02 22.7677 141.579 21.7091C142.138 20.6505 142.91 19.8303 143.893 19.2485C144.876 18.6586 146.007 18.3636 147.285 18.3636C148.644 18.3636 149.799 18.6869 150.75 19.3333C151.701 19.9798 152.404 20.8889 152.86 22.0606C153.315 23.2323 153.475 24.6101 153.339 26.1939H150.114V24.9818C150.114 23.6485 149.903 22.6909 149.479 22.1091C149.063 21.5192 148.38 21.2242 147.429 21.2242C146.318 21.2242 145.499 21.5677 144.972 22.2545C144.452 22.9333 144.192 23.9394 144.192 25.2727C144.192 26.4929 144.452 27.4384 144.972 28.1091C145.499 28.7717 146.27 29.103 147.285 29.103C147.925 29.103 148.472 28.9616 148.928 28.6788C149.383 28.396 149.731 27.9879 149.971 27.4545L153.231 28.4C152.744 29.596 151.973 30.5253 150.918 31.1879C149.871 31.8505 148.724 32.1818 147.477 32.1818ZM143.185 26.1939V23.7455H151.769V26.1939H143.185Z' fill='white'/%3E %3Cpath d='M155.087 31.8182V18.7273H157.964V21.9273L157.652 21.5152C157.82 21.0626 158.044 20.6505 158.324 20.2788C158.603 19.9071 158.947 19.6 159.355 19.3576C159.666 19.1636 160.006 19.0141 160.374 18.9091C160.741 18.796 161.121 18.7273 161.512 18.703C161.904 18.6707 162.296 18.6788 162.687 18.7273V21.8061C162.328 21.6929 161.908 21.6566 161.428 21.697C160.957 21.7293 160.529 21.8384 160.146 22.0242C159.762 22.202 159.438 22.4404 159.175 22.7394C158.911 23.0303 158.711 23.3778 158.575 23.7818C158.439 24.1778 158.372 24.6263 158.372 25.1273V31.8182H155.087Z' fill='white'/%3E %3Cdefs%3E %3ClinearGradient id='paint0_linear_137_303' x1='48' y1='0' x2='1.14441e-05' y2='48' gradientUnits='userSpaceOnUse'%3E %3Cstop stop-color='%23CDADFF'/%3E %3Cstop offset='1' stop-color='%236432F1'/%3E %3C/linearGradient%3E %3C/defs%3E %3C/svg%3E";
  },
  594: function (e, t, a) {
    "use strict";
    var n = a(0),
      r = a.n(n),
      s = a(20),
      c = a(82),
      l = a(5),
      o = a(14),
      i = a(8),
      u = a(146),
      d = a(149),
      m = a(45),
      E = a(13),
      p = a(25),
      b = a(113),
      _ = a(10);
    const h = Object(s.c)("auth/createAccount", async (e, t) => {
        let a = { allAccounts: [], publicKey: "" };
        try {
          a = await Object(E.h)(e);
        } catch (e) {
          return (
            console.error("Failed when creating an account: ", e.message),
            t.rejectWithValue({ errorMessage: e.message })
          );
        }
        return a;
      }),
      w = Object(s.c)("auth/fundAccount", async (e) => {
        try {
          await Object(E.j)(e);
        } catch (e) {
          console.error("Failed when funding an account: ", e.message);
        }
      }),
      f = Object(s.c)("auth/addAccount", async (e, t) => {
        let a = { publicKey: "", allAccounts: [], hasPrivateKey: !1 };
        try {
          a = await Object(E.a)(e);
        } catch (e) {
          return (
            console.error("Failed when creating an account: ", e.message),
            t.rejectWithValue({ errorMessage: e.message })
          );
        }
        return a;
      }),
      g = Object(s.c)(
        "auth/importAccount",
        async ({ password: e, privateKey: t }, a) => {
          let n = { publicKey: "", allAccounts: [], hasPrivateKey: !1 };
          try {
            n = await Object(E.v)(e, t);
          } catch (e) {
            return (
              console.error("Failed when importing an account: ", e),
              a.rejectWithValue({ errorMessage: e.message })
            );
          }
          return n;
        }
      ),
      v = Object(s.c)(
        "auth/importHardwareWallet",
        async ({ publicKey: e, hardwareWalletType: t, bipPath: a }, n) => {
          let r = {
            publicKey: "",
            allAccounts: [],
            hasPrivateKey: !1,
            bipPath: "",
          };
          try {
            r = await Object(E.w)(e, t, a);
          } catch (e) {
            return (
              console.error("Failed when importing hardware wallet: ", e),
              n.rejectWithValue({ errorMessage: e.message })
            );
          }
          return r;
        }
      ),
      y = Object(s.c)("auth/makeAccountActive", async (e, t) => {
        try {
          const a = await Object(E.A)(e),
            { allAccounts: n } = P(t.getState());
          return C(e, n), a;
        } catch (e) {
          return t.rejectWithValue({ errorMessage: e });
        }
      }),
      O = Object(s.c)("auth/updateAccountName", (e) => Object(E.N)(e)),
      A = Object(s.c)(
        "auth/recoverAccount",
        async ({ password: e, mnemonicPhrase: t }, a) => {
          let n = {
            allAccounts: [],
            publicKey: "",
            hasPrivateKey: !1,
            error: "",
          };
          try {
            n = await Object(E.B)(e, t);
          } catch (e) {
            return (
              console.error("Failed when recovering an account: ", e.message),
              a.rejectWithValue({ errorMessage: e.message })
            );
          }
          return !n.publicKey || n.error
            ? a.rejectWithValue({
                errorMessage: n.error || "The phrase you entered is incorrect",
              })
            : n;
        }
      ),
      S = Object(s.c)("auth/confirmMnemonicPhrase", async (e, t) => {
        let a = {
          isCorrectPhrase: !1,
          applicationState: m.a.MNEMONIC_PHRASE_FAILED,
        };
        try {
          a = await Object(E.f)(e);
        } catch (e) {
          return (
            console.error(
              "Failed when confirming Mnemonic Phrase: ",
              e.message
            ),
            t.rejectWithValue({
              applicationState: a.applicationState,
              errorMessage: e.message,
            })
          );
        }
        return a.isCorrectPhrase
          ? ((a = {
              isCorrectPhrase: !0,
              applicationState: m.a.MNEMONIC_PHRASE_CONFIRMED,
            }),
            a)
          : t.rejectWithValue({
              applicationState: a.applicationState,
              errorMessage: "The secret phrase you entered is incorrect.",
            });
      }),
      N = Object(s.c)("auth/confirmPassword", async (e, t) => {
        let a = {
          publicKey: "",
          hasPrivateKey: !1,
          applicationState: m.a.MNEMONIC_PHRASE_CONFIRMED,
          allAccounts: [],
          bipPath: "",
        };
        try {
          a = await Object(E.g)(e);
        } catch (e) {
          return (
            console.error("Failed when confirming a password: ", e.message),
            t.rejectWithValue({ errorMessage: e.message })
          );
        }
        return a.publicKey
          ? a
          : t.rejectWithValue({ errorMessage: "Incorrect Password" });
      }),
      C = (e, t) => {
        const a = JSON.parse(localStorage.getItem(_.p) || "{}");
        let n = p.a.FREIGHTER;
        t.forEach((t) => {
          t.hardwareWalletType
            ? (a.hwExists = !0)
            : t.imported && (a.importedExists = !0),
            t.publicKey === e &&
              (n = t.hardwareWalletType
                ? p.a.HW
                : t.imported
                ? p.a.IMPORTED
                : p.a.FREIGHTER);
        }),
          (a.accountType = n),
          localStorage.setItem(_.p, JSON.stringify(a));
      },
      T = Object(s.c)("auth/loadAccount", async (e, t) => {
        let a, n;
        try {
          return (a = await Object(E.x)()), C(a.publicKey, a.allAccounts), a;
        } catch (e) {
          console.error(e), (n = e), d.a("Error loading account: " + n);
        }
        return a || t.rejectWithValue({ errorMessage: n });
      }),
      k = Object(s.c)("auth/signOut", async (e, t) => {
        let a = {
          publicKey: "",
          applicationState: m.a.MNEMONIC_PHRASE_CONFIRMED,
        };
        try {
          a = await Object(E.J)();
        } catch (e) {
          console.error(e);
        }
        return (null == a ? void 0 : a.publicKey)
          ? t.rejectWithValue({ errorMessage: "Unable to sign out" })
          : null == a
          ? void 0
          : a.applicationState;
      }),
      j = Object(s.c)("auth/addToken", async (e, t) => {
        let a = { tokenIdList: [] };
        try {
          a = await Object(E.d)(e);
        } catch (e) {
          return (
            console.error("Failed when adding a token: ", e.message),
            t.rejectWithValue({ errorMessage: e.message })
          );
        }
        return a;
      }),
      I = {
        allAccounts: [],
        applicationState: m.a.APPLICATION_LOADING,
        hasPrivateKey: !1,
        publicKey: "",
        connectingWalletType: b.a.NONE,
        bipPath: "",
        tokenIdList: [],
        error: "",
      },
      D = Object(s.d)({
        name: "auth",
        initialState: I,
        reducers: {
          clearApiError(e) {
            e.error = "";
          },
          setConnectingWalletType(e, t) {
            e.connectingWalletType = t.payload;
          },
        },
        extraReducers: (e) => {
          e.addCase(h.fulfilled, (e, t) => {
            const { allAccounts: a, publicKey: n } = t.payload || {
              publicKey: "",
              allAccounts: [],
            };
            return {
              ...e,
              allAccounts: a,
              applicationState: m.a.PASSWORD_CREATED,
              publicKey: n,
            };
          }),
            e.addCase(h.rejected, (e, t) => {
              const { errorMessage: a } = t.payload || { errorMessage: "" };
              return { ...e, error: a };
            }),
            e.addCase(f.fulfilled, (e, t) => {
              const {
                publicKey: a,
                allAccounts: n,
                hasPrivateKey: r,
              } = t.payload || {
                publicKey: "",
                allAccounts: [],
                hasPrivateKey: !1,
              };
              return {
                ...e,
                error: "",
                bipPath: "",
                publicKey: a,
                allAccounts: n,
                hasPrivateKey: r,
              };
            }),
            e.addCase(f.rejected, (e, t) => {
              const { errorMessage: a } = t.payload || { errorMessage: "" };
              return { ...e, error: a };
            }),
            e.addCase(g.fulfilled, (e, t) => {
              const {
                publicKey: a,
                allAccounts: n,
                hasPrivateKey: r,
              } = t.payload || {
                publicKey: "",
                allAccounts: [],
                hasPrivateKey: !1,
              };
              return {
                ...e,
                error: "",
                bipPath: "",
                publicKey: a,
                allAccounts: n,
                hasPrivateKey: r,
              };
            }),
            e.addCase(g.rejected, (e, t) => {
              const { errorMessage: a } = t.payload || { errorMessage: "" };
              return { ...e, error: a };
            }),
            e.addCase(v.fulfilled, (e, t) => {
              const {
                publicKey: a,
                allAccounts: n,
                hasPrivateKey: r,
                bipPath: s,
              } = t.payload;
              return {
                ...e,
                error: "",
                publicKey: a,
                allAccounts: n,
                hasPrivateKey: r,
                bipPath: s,
              };
            }),
            e.addCase(v.rejected, (e, t) => {
              const { errorMessage: a } = t.payload || { errorMessage: "" };
              return { ...e, error: a };
            }),
            e.addCase(y.fulfilled, (e, t) => {
              const {
                publicKey: a,
                hasPrivateKey: n,
                bipPath: r,
              } = t.payload || {
                publicKey: "",
                hasPrivateKey: !1,
                bipPath: "",
              };
              return { ...e, publicKey: a, hasPrivateKey: n, bipPath: r };
            }),
            e.addCase(y.rejected, (e, t) => {
              const {
                message: a = "Freighter was unable to switch to this account",
              } = t.error;
              return { ...e, error: a };
            }),
            e.addCase(O.fulfilled, (e, t) => {
              const { allAccounts: a } = t.payload || { allAccounts: [] };
              return { ...e, allAccounts: a };
            }),
            e.addCase(O.rejected, (e, t) => {
              const {
                message: a = "Freighter was unable update this account's name",
              } = t.error;
              return { ...e, error: a };
            }),
            e.addCase(A.fulfilled, (e, t) => {
              const {
                publicKey: a,
                allAccounts: n,
                hasPrivateKey: r,
              } = t.payload || {
                publicKey: "",
                allAccounts: [],
                hasPrivateKey: !1,
              };
              return {
                ...e,
                error: "",
                allAccounts: n,
                hasPrivateKey: r,
                applicationState: m.a.MNEMONIC_PHRASE_CONFIRMED,
                publicKey: a,
              };
            }),
            e.addCase(A.rejected, (e, t) => {
              const { errorMessage: a } = t.payload || { errorMessage: "" };
              return { ...e, error: a };
            }),
            e.addCase(S.rejected, (e, t) => {
              const { applicationState: a, errorMessage: n } = t.payload || {
                errorMessage: "",
                applicationState: m.a.MNEMONIC_PHRASE_FAILED,
              };
              return { ...e, applicationState: a, error: n };
            }),
            e.addCase(S.fulfilled, (e, t) => ({
              ...e,
              applicationState: t.payload.applicationState,
            })),
            e.addCase(T.fulfilled, (e, t) => {
              const {
                hasPrivateKey: a,
                publicKey: n,
                applicationState: r,
                allAccounts: s,
                bipPath: c,
                tokenIdList: l,
              } = t.payload || {
                hasPrivateKey: !1,
                publicKey: "",
                applicationState: m.a.APPLICATION_STARTED,
                allAccounts: [],
                bipPath: "",
                tokenIdList: [],
              };
              return {
                ...e,
                hasPrivateKey: a,
                applicationState: r || m.a.APPLICATION_STARTED,
                publicKey: n,
                allAccounts: s,
                bipPath: c,
                tokenIdList: l,
              };
            }),
            e.addCase(T.rejected, (e, t) => {
              const {
                message: a = "An unknown error occurred when loading your account",
              } = t.error;
              return {
                ...e,
                applicationState: m.a.APPLICATION_ERROR,
                error: a,
              };
            }),
            e.addCase(N.rejected, (e, t) => {
              const { errorMessage: a } = t.payload || { errorMessage: "" };
              return { ...e, error: a };
            }),
            e.addCase(N.fulfilled, (e, t) => {
              const {
                publicKey: a,
                applicationState: n,
                hasPrivateKey: r,
                allAccounts: s,
                bipPath: c,
              } = t.payload || {
                publicKey: "",
                hasPrivateKey: !1,
                applicationState: m.a.MNEMONIC_PHRASE_CONFIRMED,
                allAccounts: [""],
                bipPath: "",
              };
              return {
                ...e,
                hasPrivateKey: r,
                applicationState: n || m.a.MNEMONIC_PHRASE_CONFIRMED,
                publicKey: a,
                allAccounts: s,
                bipPath: c,
                error: "",
              };
            }),
            e.addCase(k.fulfilled, (e, t) => {
              const a = t.payload || {
                applicationState: m.a.MNEMONIC_PHRASE_CONFIRMED,
              };
              return {
                ...I,
                applicationState: a || m.a.MNEMONIC_PHRASE_CONFIRMED,
              };
            }),
            e.addCase(j.fulfilled, (e, t) => {
              const { tokenIdList: a } = t.payload || { tokenIdList: [] };
              return { ...e, error: "", tokenIdList: a };
            }),
            e.addCase(j.rejected, (e, t) => {
              const { errorMessage: a } = t.payload || { errorMessage: "" };
              return { ...e, error: a };
            });
        },
      }),
      { reducer: R } = D,
      P = (e) => e.auth,
      M = Object(u.a)(P, (e) => e.hasPrivateKey),
      L = Object(u.a)(P, (e) => e.allAccounts),
      x = Object(u.a)(P, (e) => e.applicationState),
      K = Object(u.a)(P, (e) => e.error),
      B = Object(u.a)(P, (e) => e.publicKey),
      V = Object(u.a)(P, (e) => e.bipPath),
      F = Object(u.a)(B, L, (e, t) => {
        const { name: a } = t.find(({ publicKey: t }) => t === e) || {
          publicKey: "",
          name: "",
        };
        return a;
      }),
      U = Object(u.a)(
        B,
        L,
        (e, t) =>
          (
            t.find(({ publicKey: t }) => t === e) || {
              hardwareWalletType: b.a.NONE,
            }
          ).hardwareWalletType
      ),
      { clearApiError: H, setConnectingWalletType: W } = D.actions;
    var G = a(17),
      $ = a(6),
      X = a.n($),
      q = a(363),
      z = a(364);
    const Z = "loaded screen: debug",
      Y = "loaded screen: integration test",
      Q = "loaded screen: welcome",
      J = "loaded screen: account",
      ee = "loaded screen: account history",
      te = "loaded screen: account creator",
      ae = "loaded screen: add account",
      ne = "loaded screen: import account",
      re = "loaded screen: connect wallet",
      se = "loaded screen: connect wallet plugin",
      ce = "loaded screen: connect ledger",
      le = "loaded screen: grant access",
      oe = "loaded screen: mnemonic phrase",
      ie = "loaded screen: confirm mnemonic phrase",
      ue = "loaded screen: account creator finished",
      de = "loaded screen: pix extension",
      me = "loaded screen: recover account",
      Ee = "loaded screen: recover account: success",
      pe = "loaded screen: sign transaction",
      be = "loaded screen: unlock account",
      _e = "loaded screen: verify account",
      he = "loaded screen: unlock backup phrase",
      we = "loaded screen: display backup phrase",
      fe = "loaded screen: view public key generator",
      ge = "loaded screen: settings",
      ve = "loaded screen: preferences",
      ye = "loaded screen: security",
      Oe = "loaded screen: about",
      Ae = "loaded screen: send payment",
      Se = "loaded screen: send payment to",
      Ne = "loaded screen: send payment amount",
      Ce = "loaded screen: send payment type",
      Te = "loaded screen: send payment settings",
      ke = "loaded screen: send payment settings fee",
      je = "loaded screen: send payment settings slippage",
      Ie = "loaded screen: send payment confirm",
      De = "send payment: recent address",
      Re = "send payment: set max",
      Pe = "send payment: selected type payment",
      Me = "send payment: selected type path payment",
      Le = "send payment: payment success",
      xe = "send payment: path payment success",
      Ke = "send payment: error",
      Be = "loaded screen: swap",
      Ve = "loaded screen: swap amount",
      Fe = "loaded screen: swap settings",
      Ue = "loaded screen: swap settings fee",
      He = "loaded screen: swap settings slippage",
      We = "loaded screen: swap confirm",
      Ge = "loaded screen: manage assets",
      $e = "loaded screen: add asset",
      Xe = "loaded screen: search asset",
      qe = "loaded screen: trustline error",
      ze = "loaded screen: add token",
      Ze = "loaded screen: manage network",
      Ye = "loaded screen: add network",
      Qe = "loaded screen: edit network",
      Je = "loaded screen: network settings",
      et = "manage asset: add asset",
      tt = "manage asset: add token",
      at = "manage asset: add unsafe asset",
      nt = "manage asset: remove asset",
      rt = "manage asset: error",
      st = "account creator: create password: success",
      ct = "account creator: create password: error",
      lt = "account creator: confirm phrase: confirmed phrase",
      ot = "account creator: confirm phrase: error confirming",
      it = "account creator finished: closed account creator flow",
      ut = "account screen: created new account",
      dt = "account screen: imported new account",
      mt = "account screen: imported new account: error",
      Et = "freighter created account funded",
      pt = "re-auth: success",
      bt = "re-auth: error",
      _t = "history: opened item on external website",
      ht = "recover account: success",
      wt = "recover account: error",
      ft = "recover account finished: closed recover account flow",
      gt = "grant access: granted",
      vt = "grant access: rejected",
      yt = "sign transaction: confirmed",
      Ot = "sign transaction: memo required error",
      At = "sign transaction: malicious account warning",
      St = "sign transaction: unsafe account warning",
      Nt = "sign transaction: rejected",
      Ct = "backup phrase: success",
      Tt = "backup phrase: error",
      kt = "viewPublicKey: renamed account",
      jt = "viewPublicKey: clicked StellarExpert";
    var It = a(9),
      Dt = a.n(It),
      Rt = a(114);
    const Pt = Object(s.c)(
        "getTokenBalances",
        async ({ sorobanClient: e }, t) => {
          try {
            const { publicKey: t } = await Object(E.x)(),
              a = await Object(E.s)(),
              n = [Object(Rt.a)(t)],
              r = [];
            for (let t = 0; t < a.length; t += 1) {
              const s = a[t];
              try {
                const { balance: t, ...a } = await Object(E.r)(
                    e.server,
                    s,
                    {
                      balance: e.newTxBuilder(),
                      name: e.newTxBuilder(),
                      decimals: e.newTxBuilder(),
                      symbol: e.newTxBuilder(),
                    },
                    n
                  ),
                  c = new Dt.a(t);
                r.push({ contractId: s, total: c, ...a });
              } catch (e) {
                console.error(`Token "${s}" missing data on RPC server`);
              }
            }
            return r;
          } catch (e) {
            return console.error(e), t.rejectWithValue({ errorMessage: e });
          }
        }
      ),
      Mt = { getTokenBalancesStatus: p.b.IDLE, tokenBalances: [] },
      Lt = Object(s.d)({
        name: "soroban",
        initialState: Mt,
        reducers: {
          resetSorobanTokensStatus: (e) => {
            e.getTokenBalancesStatus = Mt.getTokenBalancesStatus;
          },
        },
        extraReducers: (e) => {
          e.addCase(Pt.pending, (e) => {
            e.getTokenBalancesStatus = p.b.PENDING;
          }),
            e.addCase(Pt.rejected, (e) => {
              e.getTokenBalancesStatus = p.b.ERROR;
            }),
            e.addCase(Pt.fulfilled, (e, t) => {
              (e.tokenBalances = t.payload),
                (e.getTokenBalancesStatus = p.b.SUCCESS);
            });
        },
      }),
      { resetSorobanTokensStatus: xt } = Lt.actions,
      { reducer: Kt } = Lt,
      Bt = (e) => e.soroban,
      Vt = Object(s.c)(
        "signFreighterTransaction",
        async ({ transactionXDR: e, network: t }, a) => {
          try {
            return await Object(E.I)({ transactionXDR: e, network: t });
          } catch (e) {
            return a.rejectWithValue({ errorMessage: e.message || e });
          }
        }
      ),
      Ft = Object(s.c)(
        "signFreighterSorobanTransaction",
        async ({ transactionXDR: e, network: t }, a) => {
          try {
            return await Object(E.H)({ transactionXDR: e, network: t });
          } catch (e) {
            return a.rejectWithValue({ errorMessage: e.message || e });
          }
        }
      ),
      Ut = Object(s.c)(
        "submitFreighterTransaction",
        async (
          {
            publicKey: e,
            signedXDR: t,
            networkDetails: a,
            refreshBalances: n = !1,
          },
          r
        ) => {
          var s;
          try {
            const s = await Object(E.M)({ signedXDR: t, networkDetails: a });
            return n && r.dispatch(Xt({ publicKey: e, networkDetails: a })), s;
          } catch (e) {
            return r.rejectWithValue({
              errorMessage: e.message || e,
              response:
                null === (s = e.response) || void 0 === s ? void 0 : s.data,
            });
          }
        }
      ),
      Ht = Object(s.c)(
        "submitFreighterSorobanTransaction",
        async (
          {
            signedXDR: e,
            networkDetails: t,
            sorobanClient: a,
            refreshBalances: n = !1,
          },
          r
        ) => {
          var s;
          try {
            const s = await Object(E.L)({ signedXDR: e, networkDetails: t });
            return (
              n &&
                (r.dispatch(xt()), await r.dispatch(Pt({ sorobanClient: a }))),
              s
            );
          } catch (e) {
            return r.rejectWithValue({
              errorMessage: e.message || e,
              response:
                null === (s = e.response) || void 0 === s ? void 0 : s.data,
            });
          }
        }
      ),
      Wt = Object(s.c)(
        "signWithLedger",
        async (
          { transactionXDR: e, networkPassphrase: t, publicKey: a, bipPath: n },
          r
        ) => {
          try {
            const r = X.a.TransactionBuilder.fromXDR(e, t),
              s = await q.a.create(),
              c = new z.a(s),
              l = await c.signTransaction(n, r.signatureBase()),
              o = X.a.Keypair.fromPublicKey(a),
              i = new X.a.xdr.DecoratedSignature({
                hint: o.signatureHint(),
                signature: l.signature,
              });
            return r.signatures.push(i), r.toXDR();
          } catch (e) {
            return r.rejectWithValue({ errorMessage: e.message || e });
          }
        }
      ),
      Gt = Object(s.c)("addRecentAddress", async ({ publicKey: e }, t) => {
        try {
          return await Object(E.c)({ publicKey: e });
        } catch (e) {
          return t.rejectWithValue({ errorMessage: e });
        }
      }),
      $t = Object(s.c)("loadRecentAddresses", async (e, t) => {
        try {
          return await Object(E.y)();
        } catch (e) {
          return t.rejectWithValue({ errorMessage: e });
        }
      }),
      Xt = Object(s.c)(
        "getAccountBalances",
        async ({ publicKey: e, networkDetails: t }, a) => {
          try {
            const a = await Object(E.k)({ publicKey: e, networkDetails: t });
            return (
              ((e, t) => {
                const a = JSON.parse(localStorage.getItem(_.p) || "{}"),
                  n = a.accountType;
                if (
                  (t && n === p.a.HW && (a.hwFunded = !0),
                  t && n === p.a.IMPORTED && (a.importedFunded = !0),
                  n === p.a.FREIGHTER)
                ) {
                  const n = a.unfundedFreighterAccounts || [],
                    r = n.indexOf(e);
                  t &&
                    ((a.freighterFunded = !0),
                    -1 !== r &&
                      (Object(o.a)(Et, { publicKey: e }), n.splice(r, 1))),
                    t || -1 !== r || n.push(e),
                    (a.unfundedFreighterAccounts = n);
                }
                localStorage.setItem(_.p, JSON.stringify(a));
              })(e, a.isFunded || !1),
              a
            );
          } catch (e) {
            return a.rejectWithValue({ errorMessage: e });
          }
        }
      ),
      qt = Object(s.c)(
        "getDestinationBalances",
        async ({ publicKey: e, networkDetails: t }, a) => {
          try {
            return await Object(E.k)({ publicKey: e, networkDetails: t });
          } catch (e) {
            return a.rejectWithValue({ errorMessage: e });
          }
        }
      ),
      zt = Object(s.c)(
        "auth/getAssetIcons",
        ({ balances: e, networkDetails: t }) =>
          Object(E.n)({ balances: e, networkDetails: t })
      ),
      Zt = Object(s.c)(
        "auth/getAssetDomains",
        ({ balances: e, networkDetails: t }) =>
          Object(E.m)({ balances: e, networkDetails: t })
      ),
      Yt = Object(s.c)(
        "getBestPath",
        async (
          { amount: e, sourceAsset: t, destAsset: a, networkDetails: n },
          r
        ) => {
          var s;
          try {
            const r = new $.Server(n.networkUrl).strictSendPaths(
              Object(i.c)(t),
              e,
              [Object(i.c)(a)]
            );
            return (await r.call()).records[0];
          } catch (e) {
            return r.rejectWithValue({
              errorMessage: e.message || e,
              response:
                null === (s = e.response) || void 0 === s ? void 0 : s.data,
            });
          }
        }
      ),
      Qt = Object(s.c)("getBlockedDomains", async (e, t) => {
        try {
          return (await Object(E.p)()).blockedDomains || [];
        } catch (e) {
          return t.rejectWithValue({ errorMessage: e });
        }
      }),
      Jt = Object(s.c)("getBlockedAccounts", async (e, t) => {
        try {
          return (await Object(E.o)()).blockedAccounts || [];
        } catch (e) {
          return t.rejectWithValue({ errorMessage: e });
        }
      });
    var ea, ta;
    !(function (e) {
      (e.IDLE = "IDLE"), (e.IN_PROGRESS = "IN_PROGRESS");
    })(ea || (ea = {})),
      (function (e) {
        (e.MANAGE = "MANAGE"),
          (e.REGULAR = "REGULAR"),
          (e.PATH_PAY = "PATH_PAY"),
          (e.SWAP = "SWAP");
      })(ta || (ta = {}));
    const aa = {
        submitStatus: p.b.IDLE,
        accountBalanceStatus: p.b.IDLE,
        response: null,
        error: void 0,
        transactionData: {
          amount: "0",
          asset: "native",
          destination: "",
          federationAddress: "",
          transactionFee: "",
          memo: "",
          destinationAsset: "",
          destinationAmount: "",
          path: [],
          allowedSlippage: "1",
          isToken: !1,
        },
        hardwareWalletData: {
          status: ea.IDLE,
          transactionXDR: "",
          shouldSubmit: !0,
        },
        accountBalances: { balances: null, isFunded: !1, subentryCount: 0 },
        destinationBalances: { balances: null, isFunded: !1, subentryCount: 0 },
        assetIcons: {},
        assetDomains: {},
        assetSelect: { type: ta.MANAGE, isSource: !0 },
        blockedDomains: { domains: {} },
        blockedAccounts: [],
      },
      na = Object(s.d)({
        name: "transactionSubmission",
        initialState: aa,
        reducers: {
          resetSubmission: () => aa,
          resetAccountBalanceStatus: (e) => {
            e.accountBalanceStatus = aa.accountBalanceStatus;
          },
          resetDestinationAmount: (e) => {
            e.transactionData.destinationAmount =
              aa.transactionData.destinationAmount;
          },
          saveDestination: (e, t) => {
            e.transactionData.destination = t.payload;
          },
          saveFederationAddress: (e, t) => {
            e.transactionData.federationAddress = t.payload;
          },
          saveAmount: (e, t) => {
            e.transactionData.amount = t.payload;
          },
          saveAsset: (e, t) => {
            e.transactionData.asset = t.payload;
          },
          saveTransactionFee: (e, t) => {
            e.transactionData.transactionFee = t.payload;
          },
          saveMemo: (e, t) => {
            e.transactionData.memo = t.payload;
          },
          saveDestinationAsset: (e, t) => {
            e.transactionData.destinationAsset = t.payload;
          },
          saveAllowedSlippage: (e, t) => {
            e.transactionData.allowedSlippage = t.payload;
          },
          saveIsToken: (e, t) => {
            e.transactionData.isToken = t.payload;
          },
          startHwConnect: (e) => {
            (e.hardwareWalletData.status = ea.IN_PROGRESS),
              (e.hardwareWalletData.transactionXDR = "");
          },
          startHwSign: (e, t) => {
            (e.hardwareWalletData.status = ea.IN_PROGRESS),
              (e.hardwareWalletData.transactionXDR = t.payload.transactionXDR),
              (e.hardwareWalletData.shouldSubmit = t.payload.shouldSubmit);
          },
          closeHwOverlay: (e) => {
            (e.hardwareWalletData.status = ea.IDLE),
              (e.hardwareWalletData.transactionXDR = ""),
              (e.hardwareWalletData.shouldSubmit = !0);
          },
          saveAssetSelectType: (e, t) => {
            e.assetSelect.type = t.payload;
          },
          saveAssetSelectSource: (e, t) => {
            e.assetSelect.isSource = t.payload;
          },
        },
        extraReducers: (e) => {
          e.addCase(Ut.pending, (e) => {
            e.submitStatus = p.b.PENDING;
          }),
            e.addCase(Ut.rejected, (e, t) => {
              (e.submitStatus = p.b.ERROR), (e.error = t.payload);
            }),
            e.addCase(Ut.fulfilled, (e, t) => {
              (e.submitStatus = p.b.SUCCESS), (e.response = t.payload);
            }),
            e.addCase(Ht.pending, (e) => {
              e.submitStatus = p.b.PENDING;
            }),
            e.addCase(Ht.rejected, (e, t) => {
              (e.submitStatus = p.b.ERROR), (e.error = t.payload);
            }),
            e.addCase(Ht.fulfilled, (e, t) => {
              (e.submitStatus = p.b.SUCCESS), (e.response = t.payload);
            }),
            e.addCase(Vt.pending, (e) => {
              e.submitStatus = p.b.PENDING;
            }),
            e.addCase(Ft.pending, (e) => {
              e.submitStatus = p.b.PENDING;
            }),
            e.addCase(Vt.rejected, (e, t) => {
              (e.submitStatus = p.b.ERROR), (e.error = t.payload);
            }),
            e.addCase(Ft.rejected, (e, t) => {
              (e.submitStatus = p.b.ERROR), (e.error = t.payload);
            }),
            e.addCase(Yt.rejected, (e) => {
              (e.transactionData.path = aa.transactionData.path),
                (e.transactionData.destinationAmount =
                  aa.transactionData.destinationAmount);
            }),
            e.addCase(Xt.pending, (e) => {
              e.accountBalanceStatus = p.b.PENDING;
            }),
            e.addCase(Xt.rejected, (e) => {
              e.accountBalanceStatus = p.b.ERROR;
            }),
            e.addCase(Xt.fulfilled, (e, t) => {
              (e.accountBalances = t.payload),
                (e.accountBalanceStatus = p.b.SUCCESS);
            }),
            e.addCase(qt.fulfilled, (e, t) => {
              e.destinationBalances = t.payload;
            }),
            e.addCase(zt.fulfilled, (e, t) => ({
              ...e,
              assetIcons: t.payload || {},
            })),
            e.addCase(Zt.fulfilled, (e, t) => ({
              ...e,
              assetDomains: t.payload || {},
            })),
            e.addCase(Yt.fulfilled, (e, t) => {
              if (!t.payload)
                return (
                  (e.transactionData.path = []),
                  void (e.transactionData.destinationAmount = "")
                );
              const a = [];
              t.payload.path.forEach((e) => {
                e.asset_code || e.asset_issuer
                  ? a.push(Object(i.d)(e.asset_code, e.asset_issuer))
                  : a.push(e.asset_type);
              }),
                (e.transactionData.path = a),
                (e.transactionData.destinationAmount =
                  t.payload.destination_amount);
            }),
            e.addCase(Qt.fulfilled, (e, t) => {
              e.blockedDomains.domains = t.payload;
            }),
            e.addCase(Jt.fulfilled, (e, t) => {
              e.blockedAccounts = t.payload;
            });
        },
      }),
      {
        resetSubmission: ra,
        resetAccountBalanceStatus: sa,
        resetDestinationAmount: ca,
        saveDestination: la,
        saveFederationAddress: oa,
        saveAmount: ia,
        saveAsset: ua,
        saveTransactionFee: da,
        saveMemo: ma,
        saveDestinationAsset: Ea,
        saveAllowedSlippage: pa,
        saveIsToken: ba,
        startHwConnect: _a,
        startHwSign: ha,
        closeHwOverlay: wa,
        saveAssetSelectType: fa,
        saveAssetSelectSource: ga,
      } = na.actions,
      { reducer: va } = na,
      ya = (e) => e.transactionSubmission,
      Oa = (e) => e.transactionSubmission.transactionData,
      Aa = (e) =>
        "" !== e.transactionSubmission.transactionData.destinationAsset;
    var Sa = a(4);
    const Na = () =>
      r.a.createElement(
        "div",
        { className: "Loading" },
        r.a.createElement(
          "div",
          { className: "Loading__wrapper" },
          r.a.createElement(Sa.Loader, { size: "5rem" })
        )
      );
    var Ca = a(1220),
      Ta = a(101),
      ka = a(52),
      ja = a(202),
      Ia = a(39),
      Da = a(42),
      Ra = a.n(Da),
      Pa = a(125);
    const Ma = Object(Pa.b)(),
      La = (e, t) => {
        const a = t ? `${e}${t}` : e;
        Ma.push({ pathname: a });
      },
      xa = (e) => Ra.a.tabs.create({ url: e });
    var Ka = a(3);
    const Ba = Object(s.b)("navigate", (e) => ({ payload: { location: e } }));
    var Va = a(605);
    const Fa = ({ children: e }) => {
      const { t: t } = Object(Va.a)();
      return r.a.createElement(
        "div",
        { className: "AppError" },
        r.a.createElement(
          "div",
          null,
          r.a.createElement("h1", null, t("An error occurred")),
          r.a.createElement("p", null, e)
        )
      );
    };
    var Ua,
      Ha = a(81);
    !(function (e) {
      (e.primary = "primary"), (e.tertiary = "tertiary");
    })(Ua || (Ua = {}));
    const Wa = ({
      children: e,
      isLoading: t,
      fullWidth: a,
      variant: n = Ua.primary,
      ...s
    }) => {
      var c;
      const l =
          n === Ua.primary
            ? Sa.Button.variant.primary
            : Sa.Button.variant.tertiary,
        o = Object(Sa.Button)({ variant: l, fullWidth: a, children: e });
      return r.a.createElement(
        Sa.Button,
        Object.assign(
          {
            className: `BasicButton BasicButton--${n} ${
              null === (c = null == o ? void 0 : o.props) || void 0 === c
                ? void 0
                : c.className
            }`,
            isLoading: t,
            fullWidth: a,
            variant: l,
          },
          s
        ),
        e
      );
    };
    Wa.variant = Ua;
    var Ga = a(44),
      $a = a(543),
      Xa = a.n($a),
      qa = a(56),
      za = a.p + "6b167d5a7546b8b84fad0d8ee14622f8.png",
      Za = a(579),
      Ya = a.n(Za);
    const Qa = ({ isScamAsset: e }) =>
      e
        ? r.a.createElement(
            "span",
            { className: "ScamAssetIcon" },
            e && r.a.createElement("img", { src: Ya.a, alt: "warning" })
          )
        : null;
    var Ja = a(1162),
      en = a.n(Ja);
    const tn = (e) => e.replace(/[^0-9.]/g, ""),
      an = (e, t, a) => {
        const n = new Intl.NumberFormat("en-US", { style: "decimal" }),
          r = a.includes(",") ? a : n.format(Number(a)).toString(),
          s = (t.match(/,/g) || []).length,
          c = (r.match(/,/g) || []).length;
        return {
          commaDiff: Math.abs(c - s),
          cleanedDiff: e.includes(",")
            ? e.length - r.length
            : e.length - a.length,
        };
      },
      nn = (e, t, a = qa.a, n = 1) => {
        const r = new Intl.NumberFormat("en-US", { style: "decimal" }),
          s = tn(e);
        if (-1 !== s.indexOf(".")) {
          const c = s.split(".");
          (c[0] = r.format(Number(c[0].slice(0, 12))).toString()),
            (c[1] = c[1].slice(0, a));
          const l = e.split("."),
            o = t.split("."),
            { commaDiff: i, cleanedDiff: u } = an(
              l[0],
              o[0],
              c[0].slice(0, 12)
            ),
            d = l[1].length - c[1].length;
          return { amount: `${c[0]}.${c[1]}`, newCursor: n + i - u - d };
        }
        const { commaDiff: c, cleanedDiff: l } = an(e, t, s.slice(0, 12));
        return {
          amount: r.format(Number(s.slice(0, 12))).toString(),
          newCursor: n + c - l,
        };
      },
      rn = (e) => {
        const t = new Intl.NumberFormat("en-US", { style: "decimal" }),
          [a, n] = e.split("."),
          r = t.format(Number(a)).toString();
        return n ? `${r}.${n}` : r;
      },
      sn = (e) => "XLM" === e,
      cn = ({
        assetIcons: e,
        code: t,
        issuerKey: a,
        retryAssetIconFetch: s,
        isLPShare: c = !1,
        isSorobanToken: l = !1,
      }) => {
        const o = sn(t),
          u = Xa()(e) && !o,
          [d, m] = Object(n.useState)(!1),
          [E, p] = Object(n.useState)(!o),
          b = e[Object(i.d)(t, a)],
          _ = d ? en.a : b || "",
          h = l || (a && Object(Ga.l)(a));
        return c
          ? r.a.createElement(
              "div",
              {
                className:
                  "AccountAssets__asset--logo AccountAssets__asset--lp-share",
              },
              "LP"
            )
          : h
          ? r.a.createElement(
              "div",
              {
                className:
                  "AccountAssets__asset--logo AccountAssets__asset--soroban-token",
              },
              "S"
            )
          : u
          ? r.a.createElement("div", {
              className:
                "AccountAssets__asset--logo AccountAssets__asset--loading",
            })
          : b || o
          ? r.a.createElement(
              "div",
              {
                className: `AccountAssets__asset--logo ${
                  d ? "AccountAssets__asset--error" : ""
                } ${E ? "AccountAssets__asset--loading" : ""}`,
              },
              r.a.createElement("img", {
                alt: t + " logo",
                src: o ? za : _,
                onError: () => {
                  s && s({ key: a, code: t }), m(!0);
                },
                onLoad: () => {
                  p(!1);
                },
              })
            )
          : r.a.createElement(
              "div",
              {
                className:
                  "AccountAssets__asset--logo AccountAssets__asset--error",
              },
              r.a.createElement("img", { src: en.a, alt: "Asset icon missing" })
            );
      },
      ln = ({ assetIcons: e, sortedBalances: t, setSelectedAsset: a }) => {
        const [s, c] = Object(n.useState)(e),
          o = Object(l.c)(G.l),
          [u, d] = Object(n.useState)(!1),
          { assetDomains: m, blockedDomains: p } = Object(l.c)(ya);
        Object(n.useEffect)(() => {
          c(e);
        }, [e]);
        const b = async ({ key: e, code: t }) => {
          if (!u)
            try {
              const a = await Object(E.E)({
                key: e,
                code: t,
                assetIcons: s,
                networkDetails: o,
              });
              c(a), d(!0);
            } catch (e) {
              console.error(e);
            }
        };
        return r.a.createElement(
          r.a.Fragment,
          null,
          t.map((e) => {
            let t,
              n,
              c = "";
            e.liquidityPoolId
              ? ((t = "lp"),
                (c = ((e) => {
                  if (!e[0] || !e[1]) return "";
                  let t = e[0].asset.split(":")[0],
                    a = e[1].asset.split(":")[0];
                  return (
                    t === X.a.Asset.native().toString() &&
                      (t = X.a.Asset.native().code),
                    a === X.a.Asset.native().toString() &&
                      (a = X.a.Asset.native().code),
                    `${t} / ${a} `
                  );
                })(e.reserves)),
                (n = "shares"))
              : e.contractId
              ? ((t = { key: e.contractId }), (c = e.symbol), (n = e.symbol))
              : ((t = e.token.issuer), (c = e.token.code), (n = e.token.code));
            const l = "lp" === t,
              o = Object(i.d)(c, null == t ? void 0 : t.key),
              u = m[o],
              d = !!p.domains[u],
              E = new It.BigNumber(e.total),
              _ = e.contractId ? Object(qa.c)(E, e.decimals) : E.toFixed();
            return r.a.createElement(
              "div",
              {
                "data-testid": "account-assets",
                className:
                  "AccountAssets__asset " +
                  (a && !l ? "AccountAssets__asset--has-detail" : ""),
                key: o,
                onClick: l
                  ? () => null
                  : () =>
                      ((e) => {
                        a && a(sn(e) ? "native" : e);
                      })(o),
              },
              r.a.createElement(
                "div",
                { className: "AccountAssets__copy-left" },
                r.a.createElement(cn, {
                  assetIcons: s,
                  code: c,
                  issuerKey: null == t ? void 0 : t.key,
                  retryAssetIconFetch: b,
                  isLPShare: !!e.liquidityPoolId,
                }),
                r.a.createElement("span", { className: "asset-code" }, c),
                r.a.createElement(Qa, { isScamAsset: d })
              ),
              r.a.createElement(
                "div",
                { className: "AccountAssets__copy-right" },
                r.a.createElement(
                  "div",
                  { className: "asset-amount" },
                  rn(_),
                  " ",
                  r.a.createElement("span", null, n)
                )
              )
            );
          })
        );
      },
      on = ({ isActive: e, onClick: t }) =>
        r.a.createElement("div", {
          onClick: t,
          className:
            "LoadingBackground " + (e ? "LoadingBackground--active" : ""),
        });
    var un = a(249);
    const dn = ({
        children: e,
        accountName: t = "",
        active: a = !1,
        publicKey: n = "",
        displayKey: s = !1,
        setIsDropdownOpen: c,
      }) => {
        const o = Object(l.b)(),
          u = Object(i.s)(n);
        return r.a.createElement(
          "div",
          { className: "AccountListIdenticon" },
          r.a.createElement(
            "div",
            {
              className:
                "AccountListIdenticon__active-wrapper " + (a ? "active" : ""),
            },
            r.a.createElement(
              "div",
              { className: "AccountListIdenticon__identicon-wrapper" },
              r.a.createElement(un.a, { publicKey: n })
            )
          ),
          r.a.createElement(
            "button",
            {
              "data-testid": "account-list-identicon-button",
              className: "AccountListIdenticon__identicon-button",
              onClick: () => {
                a || o(y(n)), c && c(!1);
              },
            },
            s &&
              r.a.createElement(
                r.a.Fragment,
                null,
                r.a.createElement(
                  "div",
                  { className: "AccountListIdenticon__account-name" },
                  t
                ),
                r.a.createElement(
                  "div",
                  { className: "AccountListIdenticon__account-num" },
                  u,
                  " ",
                  e
                ),
                " "
              )
          )
        );
      },
      mn = ({ hardwareWalletType: e = b.a.NONE, imported: t }) =>
        e || t
          ? r.a.createElement(
              "span",
              { className: "AccountList__option-tag" },
              "• ",
              e || "Imported"
            )
          : null,
      En = ({
        accountName: e,
        isSelected: t,
        accountPublicKey: a,
        setIsDropdownOpen: n,
        imported: s,
        hardwareWalletType: c = b.a.NONE,
      }) =>
        r.a.createElement(
          "li",
          {
            className: "AccountList__item",
            key: "account-" + e,
            "data-testid": "account-list-item",
          },
          r.a.createElement(
            dn,
            {
              displayKey: !0,
              accountName: e,
              active: t,
              publicKey: a,
              setIsDropdownOpen: n,
            },
            r.a.createElement(mn, { imported: s, hardwareWalletType: c })
          ),
          r.a.createElement(
            "span",
            { className: "AccountList__option-check" },
            t ? r.a.createElement(Sa.Icon.Check, null) : null
          )
        ),
      pn = ({ allAccounts: e, publicKey: t, setIsDropdownOpen: a }) =>
        r.a.createElement(
          r.a.Fragment,
          null,
          e.map(
            ({ publicKey: e, name: n, imported: s, hardwareWalletType: c }) => {
              const l = t === e;
              return r.a.createElement(En, {
                accountName: n,
                isSelected: l,
                accountPublicKey: e,
                setIsDropdownOpen: a,
                imported: s,
                hardwareWalletType: c,
                key: `${e}-${n}`,
              });
            }
          )
        ),
      bn = ({ children: e, isDropdownOpen: t, maxHeight: a }) => {
        const s = Object(n.useRef)(null);
        return (
          Object(n.useEffect)(() => {
            null != s.current &&
              (s.current.style.maxHeight = t ? a + "rem" : "0");
          }, [a, t]),
          r.a.createElement(
            "div",
            { ref: s, className: "AccountHeaderModal" },
            e
          )
        );
      },
      _n = ["#30A46C", "#6E56CF"],
      hn = ["#E93D82", "#C4F042", "#0091FF", "#F76808"],
      wn = (e) =>
        null === e
          ? ""
          : e < _n.length
          ? _n[e]
          : e < hn.length + _n.length
          ? hn[e - _n.length]
          : e > hn.length
          ? wn(e - hn.length)
          : hn[e],
      fn = ({ index: e }) =>
        r.a.createElement("div", {
          className: "NetworkIcon",
          style: { background: wn(e) },
        });
    var gn = a(1229),
      vn = a.n(gn);
    const yn = ({
      accountDropDownRef: e,
      allAccounts: t,
      currentAccountName: a,
      publicKey: s,
    }) => {
      const { t: c } = Object(Va.a)(),
        o = Object(l.b)(),
        u = Object(l.c)(G.l),
        d = Object(l.c)(G.m),
        [m, E] = Object(n.useState)(!1),
        [p, b] = Object(n.useState)(!1),
        _ = Object(n.useRef)(0),
        h = Object(n.useRef)(0),
        w = Object(n.useRef)(null),
        f = (e) => 6 * (e + 2);
      Object(n.useEffect)(() => {
        _.current = f(t.length);
      }, [t]),
        Object(n.useEffect)(() => {
          h.current = f(d.length);
        }, [d]);
      const g = d.findIndex((e) => Object(i.g)(e, u));
      return (
        (w.current = g),
        r.a.createElement(
          "div",
          {
            className: "AccountHeader",
            ref: e,
            "data-testid": "account-header",
          },
          r.a.createElement(
            "div",
            { className: "AccountHeader__icon-btn", onClick: () => E(!m) },
            r.a.createElement(dn, { active: !0, accountName: a, publicKey: s })
          ),
          r.a.createElement(
            "div",
            {
              className: "AccountHeader__network-wrapper",
              onClick: () => b(!p),
            },
            r.a.createElement(fn, { index: w.current }),
            r.a.createElement(
              "div",
              { className: "AccountHeader__network-copy" },
              u.networkName
            )
          ),
          r.a.createElement(
            bn,
            { isDropdownOpen: m, maxHeight: _.current },
            r.a.createElement(
              "ul",
              { className: "AccountHeader__account-dropdown" },
              r.a.createElement(pn, {
                allAccounts: t,
                publicKey: s,
                setIsDropdownOpen: E,
              }),
              r.a.createElement("hr", {
                className: "AccountHeader__list-divider",
              }),
              r.a.createElement(
                "li",
                { className: "AccountHeader__account-list-item" },
                r.a.createElement(
                  ka.b,
                  {
                    className: "AccountHeader__account-list-item__link",
                    to: {
                      pathname: Ka.a.addAccount,
                      state: {
                        header: c("Create a new Stellar address"),
                        cta: c("Add address"),
                      },
                    },
                  },
                  r.a.createElement(
                    "div",
                    { className: "AccountHeader__account-list-item__icon" },
                    r.a.createElement(Sa.Icon.PlusCircle, null)
                  ),
                  r.a.createElement(
                    "span",
                    {
                      className: "AccountHeader__account-list-item__link-copy",
                    },
                    c("Create a new Stellar address")
                  )
                )
              ),
              r.a.createElement(
                "li",
                { className: "AccountHeader__account-list-item" },
                r.a.createElement(
                  ka.b,
                  {
                    className: "AccountHeader__account-list-item__link",
                    to: Ka.a.importAccount,
                  },
                  r.a.createElement(
                    "div",
                    { className: "AccountHeader__account-list-item__icon" },
                    r.a.createElement(Sa.Icon.Download, null)
                  ),
                  r.a.createElement(
                    "span",
                    {
                      className: "AccountHeader__account-list-item__link-copy",
                    },
                    c("Import a Stellar secret key")
                  )
                )
              ),
              r.a.createElement(
                "li",
                { className: "AccountHeader__account-list-item" },
                r.a.createElement(
                  ka.b,
                  {
                    className: "AccountHeader__account-list-item__link",
                    to: Ka.a.connectWallet,
                  },
                  r.a.createElement(
                    "div",
                    { className: "AccountHeader__account-list-item__icon" },
                    r.a.createElement("img", {
                      className: "AccountHeader__img-cube-icon",
                      src: vn.a,
                      alt: "",
                    })
                  ),
                  r.a.createElement(
                    "span",
                    {
                      className: "AccountHeader__account-list-item__link-copy",
                    },
                    "Connect a hardware wallet"
                  )
                )
              )
            )
          ),
          r.a.createElement(
            bn,
            { isDropdownOpen: p, maxHeight: h.current },
            r.a.createElement(
              r.a.Fragment,
              null,
              r.a.createElement(
                "div",
                { className: "AccountHeader__network-selector" },
                d.map((e, t) =>
                  r.a.createElement(
                    "div",
                    {
                      className: "AccountHeader__network-selector__row",
                      key: e.networkName,
                      onClick: () =>
                        o(Object(G.b)({ networkName: e.networkName })),
                    },
                    r.a.createElement(fn, { index: t }),
                    r.a.createElement(
                      "div",
                      { className: "AccountHeader__network-copy" },
                      e.networkName
                    ),
                    Object(i.g)(e, u)
                      ? r.a.createElement(
                          "div",
                          {
                            className: "AccountHeader__network-selector__check",
                          },
                          r.a.createElement(Sa.Icon.Check, null)
                        )
                      : null
                  )
                )
              ),
              r.a.createElement("hr", {
                className: "AccountHeader__list-divider",
              }),
              r.a.createElement(
                "div",
                { className: "AccountHeader__account-list-item" },
                r.a.createElement(
                  ka.b,
                  {
                    className: "AccountHeader__account-list-item__link",
                    to: Ka.a.addNetwork,
                  },
                  r.a.createElement(
                    "div",
                    { className: "AccountHeader__account-list-item__icon" },
                    r.a.createElement(Sa.Icon.PlusCircle, null)
                  ),
                  r.a.createElement(
                    "span",
                    {
                      className: "AccountHeader__account-list-item__link-copy",
                    },
                    c("Add custom network")
                  )
                )
              ),
              r.a.createElement(
                "div",
                { className: "AccountHeader__account-list-item" },
                r.a.createElement(
                  ka.b,
                  {
                    className: "AccountHeader__account-list-item__link",
                    to: Ka.a.networkSettings,
                  },
                  r.a.createElement(
                    "div",
                    { className: "AccountHeader__account-list-item__icon" },
                    r.a.createElement(Sa.Icon.Tool, null)
                  ),
                  r.a.createElement(
                    "span",
                    {
                      className: "AccountHeader__account-list-item__link-copy",
                    },
                    c("Manage network settings")
                  )
                )
              )
            )
          ),
          r.a.createElement(on, {
            onClick: () => {
              E(!1), b(!1);
            },
            isActive: m || p,
          })
        )
      );
    };
    var On = a(102);
    const An = ({ assetIssuer: e }) => {
        const t = Object(l.c)(G.l),
          [a, r] = Object(n.useState)("");
        return (
          Object(n.useEffect)(() => {
            e &&
              !Object(Ga.l)(e) &&
              (async () => {
                const { networkUrl: a } = t,
                  n = Object(On.a)(a);
                let s = "";
                try {
                  ({ home_domain: s } = await n.loadAccount(e));
                } catch (e) {
                  console.error(e);
                }
                r(s || " ");
              })();
          }, [e, t]),
          { assetDomain: a }
        );
      },
      Sn = ({ children: e, disabled: t, isLoading: a, ...n }) =>
        r.a.createElement(
          "div",
          { className: "PillButton" },
          r.a.createElement(
            Sa.Button,
            Object.assign(
              {
                disabled: t,
                isLoading: a,
                variant: Sa.Button.variant.tertiary,
              },
              n
            ),
            e
          )
        );
    var Nn = a(1231),
      Cn = a.n(Nn),
      Tn = a(94);
    const kn = {
        operation: {},
        headerTitle: "",
        isCreateExternalAccount: !1,
        isPayment: !1,
        isRecipient: !1,
        isSwap: !1,
        operationText: "",
        externalUrl: "",
        setIsDetailViewShowing: () => null,
      },
      jn = ({
        operation: e,
        tokenBalances: t,
        publicKey: a,
        url: n,
        networkDetails: s,
        setDetailViewProps: c,
        setIsDetailViewShowing: l,
      }) => {
        const { t: i } = Object(Va.a)(),
          {
            account: u,
            amount: d,
            asset_code: m,
            created_at: E,
            id: p,
            to: b,
            from: _,
            starting_balance: h,
            type: w,
            type_i: f,
            transaction_attr: { operation_count: g },
            isCreateExternalAccount: v = !1,
            isPayment: y = !1,
            isSwap: O = !1,
          } = e;
        let A;
        "source_asset_code" in e && (A = e.source_asset_code);
        const S = Cn()(w),
          N = `${Tn.b[S]}${g > 1 ? ` + ${g - 1} ops` : ""}`,
          C = new Date(Date.parse(E))
            .toDateString()
            .split(" ")
            .slice(1, 3)
            .join(" "),
          T = A || "XLM",
          k = m || "XLM";
        let j = !1,
          I = "",
          D = "",
          R = C,
          P = r.a.createElement(Sa.Icon.Shuffle, {
            className: "HistoryItem__icon--default",
          }),
          M = null;
        const L = 24 === f;
        let x = {
          operation: e,
          isCreateExternalAccount: v,
          isRecipient: j,
          isPayment: y,
          isSwap: O,
          headerTitle: "",
          operationText: "",
          externalUrl: `${n}/op/${p}`,
          setIsDetailViewShowing: l,
        };
        if (O)
          (M = r.a.createElement(
            r.a.Fragment,
            null,
            new It.BigNumber(d).toFixed(2, 1),
            " ",
            k
          )),
            (D = i("{{srcAssetCode}} for {{destAssetCode}}", {
              srcAssetCode: T,
              destAssetCode: k,
            })),
            (R = i("Swap • {{date}}", { date: C })),
            (x = {
              ...x,
              headerTitle: i("Swapped {{srcAssetCode}} for {{destAssetCode}}", {
                srcAssetCode: T,
                destAssetCode: k,
              }),
              operationText: `+${new It.BigNumber(d)} ${k}`,
            });
        else if (y)
          (j = b === a && _ !== a),
            (I = j ? "+" : "-"),
            (M = r.a.createElement(
              r.a.Fragment,
              null,
              I,
              rn(new It.BigNumber(d).toFixed(2, 1)),
              " ",
              k
            )),
            (P = j
              ? r.a.createElement(Sa.Icon.ArrowDown, {
                  className: "HistoryItem__icon--received",
                })
              : r.a.createElement(Sa.Icon.ArrowUp, {
                  className: "HistoryItem__icon--sent",
                })),
            (D = k),
            (R = `${i(j ? "Received" : "Sent")} • ${C}`),
            (x = {
              ...x,
              isRecipient: j,
              headerTitle: `${i(j ? "Received" : "Sent")} ${k}`,
              operationText: `${I}${new It.BigNumber(d)} ${k}`,
            });
        else if (v)
          (M = r.a.createElement(
            r.a.Fragment,
            null,
            "-",
            new It.BigNumber(h).toFixed(2, 1),
            " XLM"
          )),
            (P = r.a.createElement(Sa.Icon.ArrowUp, {
              className: "HistoryItem__icon--sent",
            })),
            (D = "XLM"),
            (R = `${i("Sent")} • ${C}`),
            (x = {
              ...x,
              headerTitle: i("Create Account"),
              isPayment: !0,
              operation: { ...e, asset_type: "native", to: u },
              operationText: `-${new It.BigNumber(h)} XLM`,
            });
        else if (L) {
          const n = Object(qa.e)(e, s),
            c = t.find((e) => n && e.contractId === n.contractId);
          if (c && n)
            if (n.fnName === qa.b.mint) {
              const e = Object(qa.c)(
                new It.BigNumber(n.amount),
                Number(c.decimals)
              );
              (M = r.a.createElement(r.a.Fragment, null, e, " ", c.symbol)),
                (P = r.a.createElement(Sa.Icon.ArrowUp, {
                  className: "HistoryItem__icon--sent",
                })),
                (R = `${i("Mint")} • ${C}`),
                (D = c.symbol),
                (x = {
                  ...x,
                  operation: { ...x.operation, from: n.from, to: n.to },
                  headerTitle: `${i("Mint")} ${c.symbol}`,
                  isPayment: !0,
                  isRecipient: !1,
                  operationText: `${e} ${c.symbol}`,
                });
            } else {
              const e = Object(qa.c)(
                new It.BigNumber(n.amount),
                Number(c.decimals)
              );
              (j = n.from !== a),
                (I = j ? "+" : "-"),
                (M = r.a.createElement(
                  r.a.Fragment,
                  null,
                  I,
                  e,
                  " ",
                  c.symbol
                )),
                (P = j
                  ? r.a.createElement(Sa.Icon.ArrowDown, {
                      className: "HistoryItem__icon--received",
                    })
                  : r.a.createElement(Sa.Icon.ArrowUp, {
                      className: "HistoryItem__icon--sent",
                    })),
                (R = `${i(j ? "Received" : "Sent")} • ${C}`),
                (D = c.symbol),
                (x = {
                  ...x,
                  operation: { ...x.operation, from: n.from, to: n.to },
                  isPayment: !0,
                  isRecipient: j,
                  headerTitle: `${i(j ? "Received" : "Sent")} ${c.symbol}`,
                  operationText: `${I}${e} ${c.symbol}`,
                });
            }
          else
            (D = N),
              (x = { ...x, headerTitle: i("Transaction"), operationText: N });
        } else
          (D = N),
            (x = { ...x, headerTitle: i("Transaction"), operationText: N });
        return r.a.createElement(
          "div",
          {
            className: "HistoryItem",
            onClick: () => {
              Object(o.a)(_t), c(x), l(!0);
            },
          },
          r.a.createElement(
            "div",
            { className: "HistoryItem__row" },
            r.a.createElement("div", { className: "HistoryItem__icon" }, P),
            r.a.createElement(
              "div",
              { className: "HistoryItem__operation" },
              D,
              r.a.createElement("div", { className: "HistoryItem__date" }, R)
            ),
            r.a.createElement("div", { className: "HistoryItem__payment" }, M)
          )
        );
      },
      In = ({ children: e, assetDetail: t }) =>
        r.a.createElement(
          Ha.a,
          { className: "HistoryList " + (t ? "HistoryList--assetDetail" : "") },
          r.a.createElement("div", { className: "HistoryList__items" }, e)
        );
    var Dn = a(344);
    const Rn = ({
      assetIssuer: e,
      assetCode: t,
      assetType: a,
      assetDomain: s,
      contractId: c,
    }) => {
      const o = Object(l.c)(G.l),
        { blockedDomains: i } = Object(l.c)(ya),
        [u, d] = Object(n.useState)(""),
        m = i.domains[s];
      Object(n.useEffect)(() => {
        e &&
          !Object(Ga.l)(e) &&
          (async () => {
            let a = "";
            try {
              a = await Object(Dn.a)({
                key: e || "",
                code: t || "",
                networkDetails: o,
              });
            } catch (e) {
              console.error(e);
            }
            d(a);
          })();
      }, [t, e, o]);
      return r.a.createElement(
        "div",
        { className: "AssetNetworkInfo__network" },
        r.a.createElement(
          r.a.Fragment,
          null,
          m
            ? r.a.createElement(Qa, { isScamAsset: !0 })
            : u || "native" === a
            ? r.a.createElement("img", { src: u || za, alt: "Network icon" })
            : r.a.createElement("div", {
                className: "AssetNetworkInfo__network__icon",
              }),
          c
            ? r.a.createElement("span", null, Object(Ga.b)(c, 32))
            : r.a.createElement("span", null, s || "Stellar Lumens")
        )
      );
    };
    var Pn = a(264);
    const Mn = ({ customBackAction: e, customBackIcon: t, hasBackCopy: a }) => {
        const n = Object(Ta.g)();
        return r.a.createElement(
          "div",
          {
            className: "BackButton " + (a ? "BackButton--has-copy" : ""),
            onClick: () => {
              e ? e() : n.goBack();
            },
          },
          t || r.a.createElement(Sa.Icon.ArrowLeft, null),
          a
            ? r.a.createElement(
                "div",
                { className: "BackButton__copy" },
                "Back"
              )
            : null
        );
      },
      Ln = ({
        customBackAction: e,
        customBackIcon: t,
        title: a,
        hasBackButton: n = !0,
        rightButton: s,
      }) =>
        r.a.createElement(
          "header",
          { className: "SubviewHeader" },
          n
            ? r.a.createElement(Mn, { customBackAction: e, customBackIcon: t })
            : null,
          r.a.createElement("div", { className: "SubviewHeader--title" }, a),
          s || r.a.createElement("div", { className: "SubviewHeader--spacer" })
        ),
      xn = ({
        operation: e,
        headerTitle: t,
        isPayment: a,
        isRecipient: n,
        isSwap: s,
        operationText: c,
        externalUrl: u,
        setIsDetailViewShowing: d,
      }) => {
        const {
            asset_code: m,
            asset_issuer: E,
            asset_type: p,
            from: b,
            to: _,
            created_at: h,
            transaction_attr: { fee_charged: w, memo: f },
          } = e,
          g = new Date(Date.parse(h)),
          v = g.toLocaleString().split(" "),
          y = `${v[1].split(":").slice(0, 2).join(":")} ${v[2]}`,
          O = g.toDateString().split(" ").slice(1).join(" "),
          A = { dimension: "1rem", padding: ".1rem" },
          { t: S } = Object(Va.a)(),
          { assetDomain: N } = An({ assetIssuer: E }),
          C = Object(l.c)(G.l);
        return E && !N
          ? null
          : r.a.createElement(
              "div",
              { className: "TransactionDetail" },
              r.a.createElement(
                "div",
                { className: "TransactionDetail__content" },
                r.a.createElement(Ln, {
                  customBackAction: () => d(!1),
                  title: t,
                }),
                a
                  ? r.a.createElement(
                      "div",
                      { className: "TransactionDetail__header" },
                      c,
                      r.a.createElement(Rn, {
                        assetCode: m || "",
                        assetType: p,
                        assetIssuer: E || "",
                        assetDomain: N,
                      })
                    )
                  : null,
                r.a.createElement(
                  "div",
                  { className: "TransactionDetail__info" },
                  r.a.createElement(
                    "div",
                    { className: "TransactionDetail__info__row" },
                    a && !s
                      ? r.a.createElement(
                          r.a.Fragment,
                          null,
                          n
                            ? r.a.createElement(
                                r.a.Fragment,
                                null,
                                r.a.createElement("div", null, S("From")),
                                r.a.createElement(
                                  "div",
                                  null,
                                  r.a.createElement(Pn.a, {
                                    publicKey: b,
                                    customSize: A,
                                  })
                                )
                              )
                            : r.a.createElement(
                                r.a.Fragment,
                                null,
                                r.a.createElement("div", null, S("To")),
                                r.a.createElement(
                                  "div",
                                  null,
                                  r.a.createElement(Pn.a, {
                                    publicKey: _,
                                    customSize: A,
                                  })
                                )
                              )
                        )
                      : !s &&
                          r.a.createElement(
                            r.a.Fragment,
                            null,
                            r.a.createElement("div", null, S("Action")),
                            r.a.createElement("div", null, c)
                          )
                  ),
                  r.a.createElement(
                    "div",
                    { className: "TransactionDetail__info__row" },
                    r.a.createElement("div", null, S("Date")),
                    r.a.createElement("div", null, y, " • ", O)
                  ),
                  r.a.createElement(
                    "div",
                    { className: "TransactionDetail__info__row" },
                    r.a.createElement("div", null, S("Memo")),
                    r.a.createElement("div", null, f || "None")
                  ),
                  r.a.createElement(
                    "div",
                    { className: "TransactionDetail__info__row" },
                    r.a.createElement("div", null, S("Transaction fee")),
                    r.a.createElement(
                      "div",
                      null,
                      Object(i.o)(w).toString(),
                      " XLM"
                    )
                  )
                )
              ),
              Object(i.h)(C)
                ? null
                : r.a.createElement(
                    Wa,
                    {
                      fullWidth: !0,
                      onClick: () => {
                        Object(o.a)(_t), xa(u);
                      },
                      variant: Wa.variant.tertiary,
                    },
                    S("View on"),
                    " stellar.expert"
                  )
            );
      },
      Kn = ({ children: e, isModalOpen: t, setIsModalOpen: a }) => {
        const s = Object(n.useRef)(null),
          [c, l] = Object(n.useState)(-500);
        return (
          Object(n.useEffect)(() => {
            var e;
            l(
              (null === (e = s.current) || void 0 === e
                ? void 0
                : e.clientHeight) || 0
            );
          }, [s]),
          r.a.createElement(
            r.a.Fragment,
            null,
            r.a.createElement(
              "div",
              {
                className: "SlideupModal",
                ref: s,
                style: { bottom: t ? "0px" : `-${c}px` },
              },
              e
            ),
            r.a.createElement(on, { onClick: () => a(!1), isActive: t })
          )
        );
      },
      Bn = (e, t) => {
        const { assetDomains: a, blockedDomains: n } = Object(l.c)(ya),
          r = a[Object(i.d)(e, t)];
        return !!n.domains[r];
      };
    var Vn;
    !(function (e) {
      (e.info = "info"),
        (e.success = "success"),
        (e.error = "error"),
        (e.warning = "warning");
    })(Vn || (Vn = {}));
    const Fn = ({ children: e }) =>
        r.a.createElement(
          "div",
          { className: "InfoBlock InfoBlock--error" },
          r.a.createElement(
            "div",
            { className: "InfoBlock__icon" },
            r.a.createElement("img", { src: Ya.a, alt: "warning" })
          ),
          e
        ),
      Un = ({ children: e, className: t, variant: a }) =>
        r.a.createElement(
          "div",
          { className: "BasicInfoBlock " + t },
          a === Vn.error
            ? r.a.createElement(Fn, null, e)
            : r.a.createElement(Sa.InfoBlock, { variant: a }, e)
        );
    Un.variant = Vn;
    const Hn = ({
      assetOperations: e,
      accountBalances: t,
      networkDetails: a,
      publicKey: s,
      selectedAsset: c,
      setSelectedAsset: o,
      subentryCount: u,
    }) => {
      const d = Object(l.b)(),
        m = "native" === c,
        E = Object(i.c)(c),
        p = E.issuer && Object(Ga.l)(E.issuer),
        b = Bn(E.code, E.issuer),
        _ = Object(Ga.i)(t, c) || null,
        h = _ ? Object(Ga.h)(_) : "",
        w =
          _ && "contractId" in _
            ? Object(qa.c)(new It.BigNumber(_.total || "0"), Number(_.decimals))
            : (_ &&
                new It.BigNumber(null == _ ? void 0 : _.total).toString()) ||
              "0",
        f = Object(Ga.d)({
          accountBalances: t,
          selectedAsset: c,
          subentryCount: u,
        }),
        g = `${rn(f)} ${E.code}`,
        v = `${rn(w)} ${E.code}`,
        y = Object(Ga.j)(a),
        [O, A] = Object(n.useState)(!1),
        [S, N] = Object(n.useState)(!1),
        { t: C } = Object(Va.a)(),
        T = { ...kn, setIsDetailViewShowing: N },
        [k, j] = Object(n.useState)(T),
        { assetDomain: I } = An({ assetIssuer: h });
      return (e || p) && (!h || I || p)
        ? S
          ? r.a.createElement(xn, Object.assign({}, k))
          : r.a.createElement(
              "div",
              { className: "AssetDetail" },
              r.a.createElement(
                "div",
                { className: "AssetDetail__wrapper" },
                r.a.createElement(Ln, {
                  title: E.code,
                  customBackAction: () => o(""),
                }),
                _ &&
                  "name" in _ &&
                  r.a.createElement(
                    "span",
                    { className: "AssetDetail__token-name" },
                    _.name
                  ),
                m
                  ? r.a.createElement(
                      "div",
                      { className: "AssetDetail__available" },
                      r.a.createElement(
                        "span",
                        { className: "AssetDetail__available__copy" },
                        g,
                        " ",
                        C("available")
                      ),
                      r.a.createElement(
                        "span",
                        {
                          className: "AssetDetail__available__icon",
                          onClick: () => A(!0),
                        },
                        r.a.createElement(Sa.IconButton, {
                          altText: "Available Info",
                          icon: r.a.createElement(Sa.Icon.Info, null),
                        }),
                        " "
                      )
                    )
                  : null,
                r.a.createElement(
                  "div",
                  { className: "AssetDetail__total" },
                  r.a.createElement(
                    "div",
                    {
                      className: "AssetDetail__total__copy",
                      "data-testid": "asset-detail-available-copy",
                    },
                    v
                  ),
                  r.a.createElement(
                    "div",
                    { className: "AssetDetail__total__network" },
                    r.a.createElement(Rn, {
                      assetCode: E.code,
                      assetIssuer: h,
                      assetType:
                        (_ &&
                          "token" in _ &&
                          (null == _ ? void 0 : _.token.type)) ||
                        "",
                      assetDomain: I,
                      contractId:
                        _ && "contractId" in _ ? _.contractId : void 0,
                    })
                  )
                ),
                r.a.createElement(
                  "div",
                  { className: "AssetDetail__actions" },
                  (null == _ ? void 0 : _.total) &&
                    new It.BigNumber(null == _ ? void 0 : _.total).toNumber() >
                      0
                    ? r.a.createElement(
                        r.a.Fragment,
                        null,
                        !p &&
                          r.a.createElement(
                            Sn,
                            {
                              onClick: () => {
                                d(ua(c)), La(Ka.a.sendPayment);
                              },
                            },
                            C("SEND")
                          ),
                        !p &&
                          r.a.createElement(
                            Sn,
                            {
                              onClick: () => {
                                d(ua(c)), La(Ka.a.swap);
                              },
                            },
                            C("SWAP")
                          )
                      )
                    : r.a.createElement(
                        Sn,
                        {
                          onClick: () => {
                            d(Ea(c)), La(Ka.a.swap);
                          },
                        },
                        C("SWAP")
                      )
                ),
                r.a.createElement(
                  Ha.a,
                  null,
                  r.a.createElement(
                    "div",
                    { className: "AssetDetail__scam-warning" },
                    b &&
                      r.a.createElement(
                        Un,
                        { variant: Un.variant.error },
                        r.a.createElement(
                          "div",
                          null,
                          r.a.createElement(
                            "p",
                            null,
                            "This asset was tagged as fraudulent by stellar.expert, a reliable community-maintained directory."
                          ),
                          r.a.createElement(
                            "p",
                            null,
                            "Trading or sending this asset is not recommended. Projects related to this asset may be fraudulent even if the creators say otherwise."
                          )
                        )
                      )
                  ),
                  e.length
                    ? r.a.createElement(
                        In,
                        { assetDetail: !0 },
                        r.a.createElement(
                          r.a.Fragment,
                          null,
                          e.map((e) => {
                            const t = {
                                ...e,
                                isPayment: Object(Ga.e)(e.type),
                                isSwap: Object(Ga.g)(e),
                              },
                              n =
                                _ && "contractId" in _ && Object(Ga.f)(e, a)
                                  ? [_]
                                  : [];
                            return r.a.createElement(jn, {
                              key: e.id,
                              tokenBalances: n,
                              operation: t,
                              publicKey: s,
                              url: y,
                              networkDetails: a,
                              setDetailViewProps: j,
                              setIsDetailViewShowing: N,
                            });
                          })
                        )
                      )
                    : r.a.createElement(
                        "div",
                        { className: "AssetDetail__empty" },
                        C("No transactions to show")
                      )
                )
              ),
              m &&
                r.a.createElement(
                  Kn,
                  { isModalOpen: O, setIsModalOpen: A },
                  r.a.createElement(
                    "div",
                    { className: "AssetDetail__info-modal" },
                    r.a.createElement(
                      "div",
                      { className: "AssetDetail__info-modal__total-box" },
                      r.a.createElement(
                        "div",
                        { className: "AssetDetail__info-modal__asset-code" },
                        r.a.createElement("img", {
                          src: za,
                          alt: "Network icon",
                        }),
                        " ",
                        r.a.createElement("div", null, E.code)
                      ),
                      r.a.createElement("div", null, v)
                    ),
                    r.a.createElement(
                      "div",
                      { className: "AssetDetail__info-modal__available-box" },
                      r.a.createElement(
                        "div",
                        { className: "AssetDetail__info-modal__balance-row" },
                        r.a.createElement("div", null, C("Total Balance")),
                        r.a.createElement("div", null, v)
                      ),
                      r.a.createElement(
                        "div",
                        { className: "AssetDetail__info-modal__balance-row" },
                        r.a.createElement("div", null, C("Reserved Balance*")),
                        _ &&
                          "available" in _ &&
                          (null == _ ? void 0 : _.available) &&
                          (null == _ ? void 0 : _.total)
                          ? r.a.createElement(
                              "div",
                              null,
                              rn(
                                new It.BigNumber(f)
                                  .minus(
                                    new It.BigNumber(
                                      null == _ ? void 0 : _.total
                                    )
                                  )
                                  .toString()
                              ),
                              " ",
                              E.code
                            )
                          : null
                      ),
                      r.a.createElement(
                        "div",
                        {
                          className:
                            "AssetDetail__info-modal__total-available-row",
                        },
                        r.a.createElement("div", null, C("Total Available")),
                        r.a.createElement("div", null, g)
                      )
                    ),
                    r.a.createElement(
                      "div",
                      { className: "AssetDetail__info-modal__footnote" },
                      C(
                        "* All Stellar accounts must maintain a minimum balance of lumens."
                      ),
                      " ",
                      r.a.createElement(
                        "a",
                        {
                          href:
                            "https://developers.stellar.org/docs/glossary/minimum-balance/",
                          target: "_blank",
                          rel: "noreferrer",
                        },
                        C("Learn More")
                      )
                    )
                  )
                )
            )
        : null;
    };
    var Wn = a(12);
    const Gn = ({
      canUseFriendbot: e,
      publicKey: t,
      setIsAccountFriendbotFunded: a,
    }) => {
      const { t: n } = Object(Va.a)(),
        s = Object(l.b)();
      return r.a.createElement(
        r.a.Fragment,
        null,
        r.a.createElement(
          "div",
          { className: "NotFunded" },
          r.a.createElement(
            "div",
            { className: "NotFunded__header" },
            r.a.createElement(Sa.Icon.Info, null),
            n("Stellar address is not funded")
          ),
          r.a.createElement(
            "div",
            { className: "NotFunded__copy" },
            n("To create this account, fund it with a minimum of 1 XLM."),
            e
              ? r.a.createElement(
                  "span",
                  null,
                  n(
                    "You can fund this account using the friendbot tool. The friendbot is a horizon API endpoint that will fund an account with 10,000 lumens."
                  )
                )
              : null,
            " ",
            r.a.createElement(
              "a",
              {
                href:
                  "https://developers.stellar.org/docs/tutorials/create-account/#create-account",
                rel: "noreferrer",
                target: "_blank",
              },
              n("Learn more about account creation")
            )
          )
        ),
        e
          ? r.a.createElement(
              Wn.c,
              {
                initialValues: {},
                onSubmit: async () => {
                  await s(w(t)), a(!0);
                },
              },
              ({ isSubmitting: e }) =>
                r.a.createElement(
                  Wn.b,
                  { className: "NotFunded__form" },
                  r.a.createElement(
                    Wa,
                    { fullWidth: !0, isLoading: e, type: "submit" },
                    n("Fund with Friendbot")
                  )
                )
            )
          : null
      );
    };
    var $n = a(1234),
      Xn = a.n($n),
      qn = a(1235),
      zn = a.n(qn),
      Zn = a(1236),
      Yn = a.n(Zn),
      Qn = a(1237),
      Jn = a.n(Qn);
    const er = ({ children: e, to: t }) =>
        r.a.createElement(
          ka.c,
          {
            to: t,
            activeClassName: "BottomNav--link--active",
            className: "BottomNav--link",
          },
          e
        ),
      tr = () => {
        const { t: e } = Object(Va.a)();
        return r.a.createElement(
          "div",
          { className: "BottomNav" },
          r.a.createElement(
            er,
            { to: Ka.a.account },
            r.a.createElement("img", {
              src: zn.a,
              alt: "wallet icon",
              title: e("Home"),
            })
          ),
          r.a.createElement(
            er,
            { to: Ka.a.accountHistory },
            r.a.createElement("img", {
              src: Xn.a,
              alt: "history icon",
              title: e("History"),
            })
          ),
          r.a.createElement(
            er,
            { to: Ka.a.swap },
            r.a.createElement("img", {
              src: Jn.a,
              alt: "swap icon",
              title: e("Swap"),
            })
          ),
          r.a.createElement(
            er,
            { to: Ka.a.settings },
            r.a.createElement("img", {
              src: Yn.a,
              alt: "settings icon",
              title: e("Settings"),
            })
          )
        );
      };
    var ar = a(203);
    Object(o.c)(h.fulfilled, () => {
      Object(o.a)(st);
    }),
      Object(o.c)(h.rejected, (e, t) => {
        const { errorMessage: a } = t.payload;
        Object(o.a)(ct, { error_type: a });
      }),
      Object(o.c)(N.fulfilled, () => {
        Object(o.a)(pt);
      }),
      Object(o.c)(N.rejected, (e, t) => {
        const { errorMessage: a } = t.payload;
        Object(o.a)(bt, { error_type: a });
      }),
      Object(o.c)(S.fulfilled, () => {
        Object(o.a)(lt);
      }),
      Object(o.c)(S.rejected, (e, t) => {
        const { errorMessage: a } = t.payload;
        Object(o.a)(ot, { error_type: a });
      }),
      Object(o.c)(A.fulfilled, () => {
        Object(o.a)(ht);
      }),
      Object(o.c)(A.rejected, (e, t) => {
        const { errorMessage: a } = t.payload;
        Object(o.a)(wt, { error_type: a });
      });
    const nr = () => {
      const { t: e } = Object(Va.a)(),
        t = Object(l.b)(),
        { accountBalances: a, assetIcons: s, accountBalanceStatus: c } = Object(
          l.c
        )(ya),
        { tokenBalances: o, getTokenBalancesStatus: u } = Object(l.c)(Bt),
        [d, m] = Object(n.useState)(!1),
        { isExperimentalModeEnabled: b } = Object(l.c)(G.n),
        _ = Object(l.c)(B),
        h = Object(l.c)(G.l),
        w = Object(l.c)(F),
        f = Object(l.c)(L),
        [g, v] = Object(n.useState)([]),
        [y, O] = Object(n.useState)({}),
        [A, S] = Object(n.useState)(""),
        N = Object(n.useRef)(null),
        { balances: C, isFunded: T } = a,
        k = Object(n.useContext)(ar.a);
      Object(n.useEffect)(
        () => (
          t(ra()),
          t(Xt({ publicKey: _, networkDetails: h })),
          t(Qt()),
          b && t(Pt({ sorobanClient: k })),
          () => {
            t(sa()), b && t(xt());
          }
        ),
        [k, b, _, h, d, t]
      ),
        Object(n.useEffect)(() => {
          C &&
            (v(Object(Ga.m)(C, o)),
            t(zt({ balances: C, networkDetails: h })),
            t(Zt({ balances: C, networkDetails: h })));
        }, [b, u, o, C, h, t]),
        Object(n.useEffect)(() => {
          (async () => {
            try {
              const e = await Object(E.l)({ publicKey: _, networkDetails: h });
              O(
                Object(Ga.n)({
                  operations: e.operations,
                  balances: g,
                  networkDetails: h,
                  publicKey: _,
                })
              );
            } catch (e) {
              console.error(e);
            }
          })();
        }, [_, h, g]);
      const j =
        c === p.b.PENDING ||
        c === p.b.IDLE ||
        (b && (u === p.b.PENDING || u === p.b.IDLE));
      return A
        ? r.a.createElement(Hn, {
            accountBalances: g,
            assetOperations: y[A],
            networkDetails: h,
            publicKey: _,
            selectedAsset: A,
            setSelectedAsset: S,
            subentryCount: a.subentryCount,
          })
        : r.a.createElement(
            r.a.Fragment,
            null,
            j
              ? null
              : r.a.createElement(
                  "div",
                  { className: "AccountView", "data-testid": "account-view" },
                  r.a.createElement(yn, {
                    accountDropDownRef: N,
                    allAccounts: f,
                    currentAccountName: w,
                    publicKey: _,
                  }),
                  r.a.createElement(
                    "div",
                    { className: "AccountView__account-actions" },
                    r.a.createElement(
                      "div",
                      { className: "AccountView__name-key-display" },
                      r.a.createElement(
                        "div",
                        {
                          className: "AccountView__account-name",
                          "data-testid": "account-view-account-name",
                        },
                        w
                      ),
                      r.a.createElement(
                        Sa.CopyText,
                        {
                          textToCopy: _,
                          showTooltip: !0,
                          tooltipPosition: Sa.CopyText.tooltipPosition.RIGHT,
                        },
                        r.a.createElement(
                          "div",
                          { className: "AccountView__account-num" },
                          Object(i.s)(_),
                          r.a.createElement(Sa.Icon.Copy, null)
                        )
                      )
                    ),
                    r.a.createElement(
                      "div",
                      { className: "AccountView__send-receive-display" },
                      r.a.createElement(
                        "div",
                        { className: "AccountView__send-receive-button" },
                        r.a.createElement(Sa.NavButton, {
                          showBorder: !0,
                          title: e("View public key"),
                          id: "nav-btn-qr",
                          icon: r.a.createElement(Sa.Icon.QrCode, null),
                          onClick: () => La(Ka.a.viewPublicKey),
                        })
                      ),
                      r.a.createElement(
                        "div",
                        { className: "AccountView__send-receive-button" },
                        r.a.createElement(Sa.NavButton, {
                          showBorder: !0,
                          title: e("Send Payment"),
                          id: "nav-btn-send",
                          icon: r.a.createElement(Sa.Icon.Send, null),
                          onClick: () => La(Ka.a.sendPayment),
                        })
                      )
                    )
                  ),
                  T
                    ? r.a.createElement(
                        Ha.a,
                        { className: "AccountView__assets-wrapper" },
                        r.a.createElement(ln, {
                          sortedBalances: g,
                          assetIcons: s,
                          setSelectedAsset: S,
                        })
                      )
                    : r.a.createElement(Gn, {
                        canUseFriendbot: !!h.friendbotUrl,
                        setIsAccountFriendbotFunded: m,
                        publicKey: _,
                      }),
                  T
                    ? r.a.createElement(
                        Wa,
                        {
                          fullWidth: !0,
                          variant: Wa.variant.tertiary,
                          onClick: () => {
                            t(fa(ta.MANAGE)), La(Ka.a.manageAssets);
                          },
                        },
                        e("Manage Assets")
                      )
                    : null
                ),
            r.a.createElement(tr, null)
          );
    };
    var rr;
    !(function (e) {
      (e.ALL = "ALL"), (e.SENT = "SENT"), (e.RECEIVED = "RECEIVED");
    })(rr || (rr = {}));
    const sr = () => {
      const e = Object(n.useContext)(ar.a),
        { t: t } = Object(Va.a)(),
        a = Object(l.b)(),
        s = Object(l.c)(B),
        c = Object(l.c)(G.l),
        { isExperimentalModeEnabled: o } = Object(l.c)(G.n),
        { tokenBalances: i, getTokenBalancesStatus: u } = Object(l.c)(Bt),
        [d, m] = Object(n.useState)(rr.ALL),
        [b, _] = Object(n.useState)(null),
        [h, w] = Object(n.useState)(!1),
        f = { ...kn, setIsDetailViewShowing: w },
        [g, v] = Object(n.useState)(f),
        [y, O] = Object(n.useState)(!1),
        A = Object(Ga.j)(c),
        S = o ? null === b || u === p.b.IDLE || u === p.b.PENDING : null === b;
      return (
        Object(n.useEffect)(() => {
          O(!0);
          const t = (e, t = !1) => {
            const a = t
                ? e.filter((e) => {
                    return 24 !== e.type_i || ((t = e), Object(Ga.f)(t, c));
                    var t;
                  })
                : e.filter((e) => 24 !== e.type_i),
              n = { [rr.ALL]: [], [rr.SENT]: [], [rr.RECEIVED]: [] };
            return (
              a.forEach((e) => {
                var t;
                const a = Object(Ga.e)(e.type),
                  r =
                    (null === (t = Object(qa.e)(e, c)) || void 0 === t
                      ? void 0
                      : t.fnName) === qa.b.transfer,
                  l = Object(Ga.g)(e),
                  o =
                    e.type === $.Horizon.OperationResponseType.createAccount &&
                    e.account !== s,
                  i = {
                    ...e,
                    isPayment: a,
                    isSwap: l,
                    isCreateExternalAccount: o,
                  };
                (!a && !r) ||
                  l ||
                  (e.source_account === s
                    ? n[rr.SENT].push(i)
                    : e.to === s && n[rr.RECEIVED].push(i)),
                  o && n[rr.SENT].push(i),
                  n[rr.ALL].push(i);
              }),
              n
            );
          };
          return (
            (async () => {
              try {
                const n = await Object(E.l)({
                  publicKey: s,
                  networkDetails: c,
                });
                _(t(n.operations, o)), o && a(Pt({ sorobanClient: e }));
              } catch (e) {
                console.error(e);
              }
              O(!1);
            })(),
            () => {
              o && a(xt());
            }
          );
        }, [s, c, o, e, a]),
        h
          ? r.a.createElement(xn, Object.assign({}, g))
          : r.a.createElement(
              "div",
              { className: "AccountHistory" },
              y
                ? r.a.createElement(
                    "div",
                    { className: "AccountHistory__loader" },
                    r.a.createElement(Sa.Loader, { size: "2rem" })
                  )
                : r.a.createElement(
                    "div",
                    { className: "AccountHistory__wrapper" },
                    r.a.createElement(
                      "header",
                      { className: "AccountHistory__header" },
                      t("Transactions")
                    ),
                    r.a.createElement(
                      "div",
                      { className: "AccountHistory__selector" },
                      Object.values(rr).map((e) =>
                        r.a.createElement(
                          "div",
                          {
                            key: e,
                            className:
                              "AccountHistory__selector__item " +
                              (e === d
                                ? "AccountHistory__selector__item--active"
                                : ""),
                            onClick: () => m(e),
                          },
                          t(e)
                        )
                      )
                    ),
                    r.a.createElement(
                      "div",
                      { className: "AccountHistory__list" },
                      (null == b ? void 0 : b[rr[d]].length)
                        ? r.a.createElement(
                            In,
                            null,
                            r.a.createElement(
                              r.a.Fragment,
                              null,
                              b[rr[d]].map((e) =>
                                r.a.createElement(jn, {
                                  key: e.id,
                                  tokenBalances: i,
                                  operation: e,
                                  publicKey: s,
                                  url: A,
                                  networkDetails: c,
                                  setDetailViewProps: v,
                                  setIsDetailViewShowing: w,
                                })
                              )
                            )
                          )
                        : r.a.createElement(
                            "div",
                            null,
                            S ? null : t("No transactions to show")
                          )
                    )
                  ),
              r.a.createElement(tr, null)
            )
      );
    };
    var cr = a(66);
    const lr = Object(cr.e)()
        .min(8, "Password must be at least 8 characters long")
        .required("Password is required")
        .matches(/.*[A-Z]/, "Must contain an uppercase letter"),
      or = Object(cr.e)()
        .oneOf([Object(cr.d)("password")], "Passwords must match")
        .required("Password confirmation is required"),
      ir = Object(cr.a)().oneOf(
        [!0],
        "Agreeing to the Terms of Use and the Privacy Policy is required"
      ),
      ur = ({ children: e }) =>
        r.a.createElement("div", { className: "FormRows" }, e),
      dr = ({ children: e }) =>
        r.a.createElement("div", { className: "SubmitButtonWrapper" }, e),
      mr = ({ children: e }) =>
        r.a.createElement("div", { className: "FormError" }, e),
      Er = () => (
        Object(n.useEffect)(() => {
          const e = document.querySelectorAll("body, html");
          return (
            e && e.forEach((e) => e.classList.add("Fullscreen")),
            () => document.body.classList.remove("Fullscreen")
          );
        }, []),
        null
      ),
      pr = ({ hasGoBackBtn: e, children: t }) => {
        const a = 1 === Object(Ta.g)().length;
        return r.a.createElement(
          "div",
          { className: "Onboarding" },
          e && !a
            ? r.a.createElement(
                "div",
                { className: "Onboarding--back" },
                r.a.createElement(Mn, { hasBackCopy: !0 })
              )
            : null,
          t
        );
      },
      br = ({ className: e, children: t, ...a }) =>
        r.a.createElement(
          "header",
          Object.assign({ className: "OnboardingHeader " + e }, a),
          t
        ),
      _r = ({ className: e, children: t, ...a }) =>
        r.a.createElement(
          "div",
          Object.assign({ className: "OnboardingScreen " + e }, a),
          t
        ),
      hr = ({ className: e, children: t, ...a }) =>
        r.a.createElement(
          "div",
          Object.assign({ className: "OnboardingHalfScreen " + e }, a),
          t
        );
    var wr = a(593),
      fr = a.n(wr);
    const gr = ({ isPopupView: e = !1 }) =>
        r.a.createElement(
          "header",
          { className: "Header " + (e ? "Header__popup" : "") },
          r.a.createElement(
            "div",
            { className: e ? "" : "Header__fullscreen" },
            r.a.createElement("img", { alt: "Freighter logo", src: fr.a })
          )
        ),
      vr = () => {
        const { t: e } = Object(Va.a)();
        return r.a.createElement(
          "div",
          { className: "PasswordRequirements" },
          r.a.createElement(
            "ul",
            { className: "PasswordRequirements__list" },
            r.a.createElement("li", null, e("Min 8 characters")),
            r.a.createElement("li", null, e("At least one uppercase letter"))
          )
        );
      },
      yr = () => {
        const e = Object(l.c)(B),
          t = Object(l.b)(),
          a = Object(l.c)(K),
          { t: s } = Object(Va.a)(),
          c = Object(cr.c)().shape({
            password: lr,
            confirmPassword: or,
            termsOfUse: ir,
          });
        return (
          Object(n.useEffect)(() => {
            e && La(Ka.a.mnemonicPhrase);
          }, [e]),
          r.a.createElement(
            r.a.Fragment,
            null,
            r.a.createElement(Er, null),
            r.a.createElement(gr, null),
            r.a.createElement(
              pr,
              { hasGoBackBtn: !0 },
              r.a.createElement(
                _r,
                { className: "AccountCreator__screen" },
                r.a.createElement(
                  br,
                  { className: "AccountCreator__header" },
                  s("Create a password")
                ),
                r.a.createElement(
                  Wn.c,
                  {
                    initialValues: {
                      password: "",
                      confirmPassword: "",
                      termsOfUse: !1,
                    },
                    onSubmit: async (e) => {
                      await t(h(e.password));
                    },
                    validationSchema: c,
                  },
                  ({
                    isValid: e,
                    dirty: t,
                    isSubmitting: n,
                    errors: c,
                    touched: l,
                  }) =>
                    r.a.createElement(
                      Wn.b,
                      null,
                      r.a.createElement(
                        hr,
                        { className: "AccountCreator__half-screen" },
                        r.a.createElement(
                          ur,
                          null,
                          r.a.createElement(
                            Wn.a,
                            { name: "password" },
                            ({ field: e }) =>
                              r.a.createElement(
                                Sa.Input,
                                Object.assign(
                                  {
                                    autoComplete: "off",
                                    id: "new-password-input",
                                    placeholder: s("New password"),
                                    type: "password",
                                    error:
                                      a ||
                                      (c.password && l.password
                                        ? c.password
                                        : ""),
                                  },
                                  e
                                )
                              )
                          ),
                          r.a.createElement(
                            Wn.a,
                            { name: "confirmPassword" },
                            ({ field: e }) =>
                              r.a.createElement(
                                Sa.Input,
                                Object.assign(
                                  {
                                    autoComplete: "off",
                                    id: "confirm-password-input",
                                    placeholder: s("Confirm password"),
                                    type: "password",
                                    error:
                                      a ||
                                      (c.confirmPassword && l.confirmPassword
                                        ? c.confirmPassword
                                        : null),
                                  },
                                  e
                                )
                              )
                          )
                        ),
                        r.a.createElement(vr, null),
                        r.a.createElement(
                          "div",
                          null,
                          r.a.createElement(
                            Wn.a,
                            { name: "termsOfUse" },
                            ({ field: e }) =>
                              r.a.createElement(
                                Sa.Checkbox,
                                Object.assign(
                                  {
                                    autoComplete: "off",
                                    error: l.termsOfUse ? c.termsOfUse : null,
                                    id: "termsOfUse-input",
                                    label: r.a.createElement(
                                      "span",
                                      null,
                                      s("I have read and agree to"),
                                      " ",
                                      r.a.createElement(
                                        Sa.TextLink,
                                        {
                                          variant:
                                            Sa.TextLink.variant.secondary,
                                          href:
                                            "https://stellar.org/terms-of-service",
                                        },
                                        s("Terms of Use")
                                      )
                                    ),
                                  },
                                  e
                                )
                              )
                          )
                        ),
                        r.a.createElement(
                          dr,
                          null,
                          r.a.createElement(
                            Wa,
                            {
                              fullWidth: !0,
                              type: "submit",
                              isLoading: n,
                              disabled: !(t && e),
                            },
                            s("CONFIRM")
                          )
                        )
                      )
                    )
                )
              )
            )
          )
        );
      },
      Or = ({ children: e }) =>
        r.a.createElement("div", { className: "PopupWrapper" }, e),
      Ar = { password: "" },
      Sr = () => {
        const { t: e } = Object(Va.a)(),
          t = Object(l.b)(),
          a = Object(l.c)(K);
        return (
          Object(n.useEffect)(() => () => t(H()), [t]),
          r.a.createElement(
            r.a.Fragment,
            null,
            r.a.createElement(
              Or,
              null,
              r.a.createElement(Ln, { title: "Add a new Stellar address" }),
              r.a.createElement(
                Wn.c,
                {
                  initialValues: Ar,
                  onSubmit: async (e) => {
                    const { password: a } = e,
                      n = await t(f(a));
                    f.fulfilled.match(n) &&
                      (Object(o.a)(ut, {
                        number_of_accounts: n.payload.allAccounts.length,
                      }),
                      La(Ka.a.account));
                  },
                },
                ({
                  dirty: t,
                  isSubmitting: n,
                  isValid: s,
                  errors: c,
                  touched: l,
                }) =>
                  r.a.createElement(
                    Wn.b,
                    null,
                    r.a.createElement(
                      ur,
                      null,
                      r.a.createElement(
                        Wn.a,
                        { name: "password" },
                        ({ field: t }) =>
                          r.a.createElement(
                            Sa.Input,
                            Object.assign(
                              {
                                autoComplete: "off",
                                id: "password-input",
                                placeholder: e("Enter Password"),
                                type: "password",
                                error:
                                  a ||
                                  (c.password && l.password ? c.password : ""),
                              },
                              t
                            )
                          )
                      ),
                      r.a.createElement(
                        dr,
                        null,
                        r.a.createElement(
                          Wa,
                          {
                            fullWidth: !0,
                            disabled: !(t && s),
                            isLoading: n,
                            type: "submit",
                          },
                          e("Add New Address")
                        )
                      )
                    )
                  )
              )
            )
          )
        );
      },
      Nr = () => {
        const e = Object(cr.c)().shape({
            privateKey: Object(cr.e)().required(),
            password: Object(cr.e)().required(),
            authorization: Object(cr.a)().oneOf([!0], "required"),
          }),
          { t: t } = Object(Va.a)(),
          a = Object(l.b)(),
          n = Object(l.c)(K);
        return r.a.createElement(
          "div",
          { className: "ImportAccount" },
          r.a.createElement(Ln, { title: t("Import Stellar Secret Key") }),
          r.a.createElement(
            "div",
            { className: "ImportAccount__warning-block" },
            r.a.createElement(
              Un,
              { variant: Un.variant.warning },
              r.a.createElement(
                "div",
                null,
                r.a.createElement(
                  "div",
                  { className: "ImportAccount__warning-header" },
                  t("read before importing your key")
                ),
                r.a.createElement(
                  "div",
                  { className: "ImportAccount__warning-copy" },
                  r.a.createElement(
                    "p",
                    null,
                    t(
                      "Freighter can’t recover your imported secret key using your recovery phrase. Storing your secret key is your responsibility. Freighter will never ask for your secret key outside of the extension."
                    )
                  )
                )
              )
            )
          ),
          r.a.createElement(
            Wn.c,
            {
              initialValues: {
                password: "",
                privateKey: "",
                authorization: !1,
              },
              onSubmit: async (e) => {
                var t;
                const { password: n, privateKey: r } = e,
                  s = await a(g({ password: n, privateKey: r }));
                g.fulfilled.match(s)
                  ? (Object(o.a)(dt, {
                      number_of_accounts: s.payload.allAccounts.length,
                    }),
                    La(Ka.a.account))
                  : Object(o.a)(mt, {
                      error_type:
                        (null === (t = s.payload) || void 0 === t
                          ? void 0
                          : t.errorMessage) || "",
                    });
              },
              validationSchema: e,
            },
            ({ dirty: e, isSubmitting: a, isValid: s }) =>
              r.a.createElement(
                Wn.b,
                null,
                r.a.createElement(
                  ur,
                  null,
                  r.a.createElement(
                    Wn.a,
                    { name: "privateKey" },
                    ({ field: e }) =>
                      r.a.createElement(
                        Sa.Input,
                        Object.assign(
                          {
                            autoComplete: "off",
                            id: "privateKey-input",
                            type: "password",
                            placeholder: t("Your Stellar secret key"),
                            error: n,
                          },
                          e
                        )
                      )
                  ),
                  r.a.createElement(
                    Wn.a,
                    { name: "password" },
                    ({ field: e }) =>
                      r.a.createElement(
                        Sa.Input,
                        Object.assign(
                          {
                            autoComplete: "off",
                            id: "password-input",
                            type: "password",
                            placeholder: t("Enter password"),
                            error: n,
                          },
                          e
                        )
                      )
                  ),
                  r.a.createElement(
                    Wn.a,
                    { name: "authorization" },
                    ({ field: e }) =>
                      r.a.createElement(
                        Sa.Checkbox,
                        Object.assign(
                          {
                            autoComplete: "off",
                            id: "authorization-input",
                            label: t(
                              "I’m aware Freighter can’t recover the imported  secret key"
                            ),
                          },
                          e
                        )
                      )
                  )
                ),
                r.a.createElement(
                  "div",
                  { className: "ImportAccount__btn-row" },
                  r.a.createElement(
                    Wa,
                    {
                      fullWidth: !0,
                      variant: Wa.variant.tertiary,
                      onClick: () => La(Ka.a.account),
                    },
                    t("Cancel")
                  ),
                  r.a.createElement(
                    Wa,
                    {
                      fullWidth: !0,
                      type: "submit",
                      isLoading: a,
                      disabled: !(e && s),
                    },
                    t("Import")
                  )
                )
              )
          )
        );
      };
    var Cr = a.p + "9903e7cf8b2ce844f0809dfa79dd41f7.png";
    const Tr = () => {
        const e = Object(l.b)();
        return r.a.createElement(
          r.a.Fragment,
          null,
          r.a.createElement(
            "div",
            { className: "ConnectWallet" },
            r.a.createElement(Ln, {
              title: "Connect a hardware wallet",
              hasBackButton: !0,
              customBackAction: () => La(Ka.a.account),
            }),
            r.a.createElement(
              "p",
              null,
              "Select a hardware wallet you’d like to use with Freighter."
            ),
            r.a.createElement(
              "ul",
              { className: "ConnectWallet__options-list" },
              r.a.createElement(
                "li",
                {
                  className: "ConnectWallet__option",
                  onClick: () => {
                    return (
                      (t = b.a.LEDGER),
                      e(W(t)),
                      void La(Ka.a.connectWalletPlugin)
                    );
                    var t;
                  },
                },
                r.a.createElement("img", { src: Cr, alt: "ledger logo" })
              )
            )
          ),
          r.a.createElement(tr, null)
        );
      },
      kr = () => {
        const [e, t] = Object(n.useState)("44'/148'/0'"),
          [a, s] = Object(n.useState)(!0);
        return r.a.createElement(
          r.a.Fragment,
          null,
          r.a.createElement(
            "div",
            { className: "PluginWallet" },
            r.a.createElement(Ln, {
              title: "Connect with " + b.a.LEDGER,
              hasBackButton: !0,
              customBackAction: () => La(Ka.a.connectWallet),
            }),
            r.a.createElement(
              "p",
              null,
              "Make sure your Ledger wallet is connected to your computer and the Stellar app is open on the Ledger wallet.",
              " ",
              r.a.createElement(
                Sa.TextLink,
                {
                  variant: Sa.TextLink.variant.secondary,
                  href: "https://www.ledger.com/stellar-wallet",
                  rel: "noreferrer",
                  target: "_blank",
                },
                "Learn more about using Ledger"
              )
            ),
            r.a.createElement(
              "div",
              { className: "PluginWallet__bottom" },
              !a &&
                r.a.createElement(
                  "div",
                  null,
                  r.a.createElement(
                    "div",
                    { className: "PluginWallet__caption" },
                    "ENTER BIP PATH"
                  ),
                  r.a.createElement(Sa.Input, {
                    autoComplete: "off",
                    id: "bipPath",
                    value: e,
                    onChange: (e) => {
                      t(e.target.value);
                    },
                  })
                ),
              r.a.createElement(Sa.Checkbox, {
                defaultChecked: !0,
                autoComplete: "off",
                id: "useDefault-input",
                label: r.a.createElement(
                  "span",
                  { className: "PluginWallet__checkbox-label" },
                  "Use default account"
                ),
                onClick: () => s(!a),
              }),
              r.a.createElement(
                Wa,
                {
                  fullWidth: !0,
                  onClick: () => {
                    xa(Object(Ia.f)(Ka.a.connectLedger, "bipPath=" + e));
                  },
                },
                "Connect"
              )
            )
          ),
          r.a.createElement(tr, null)
        );
      };
    var jr,
      Ir = a.p + "84c0d31e2866ce019e06a1cc6fa4b1d9.png",
      Dr = a.p + "8d16e4b8d5a7e31cba34fc97ad120dc3.png";
    !(function (e) {
      (e.NONE = ""),
        (e.NO_DEVICE = "NO_DEVICE"),
        (e.NOT_OPEN = "NOT_OPEN"),
        (e.TX_REJECTED = "TX_REJECTED"),
        (e.OTHER = "OTHER");
    })(jr || (jr = {}));
    const Rr = (e) => {
        const t = e.message || e;
        return t
          ? t.indexOf("No device selected") > -1
            ? jr.NO_DEVICE
            : t.indexOf("Incorrect length") > -1
            ? jr.NOT_OPEN
            : t.indexOf("Transaction approval request was rejected") > -1
            ? jr.TX_REJECTED
            : jr.OTHER
          : jr.OTHER;
      },
      Pr = ({ error: e }) => {
        const { t: t } = Object(Va.a)();
        let a = "";
        switch (e) {
          case jr.NOT_OPEN:
            a = t("Connect device to computer and open the Stellar app on it.");
            break;
          case jr.NO_DEVICE:
            a = t(
              "No device detected. Please make sure your device is connected and the Stellar app is open on it."
            );
            break;
          case jr.OTHER:
            a = t("Error connecting. Please try again.");
            break;
          case jr.TX_REJECTED:
            a = t("Transaction Rejected.");
        }
        return a
          ? r.a.createElement(
              Sa.InfoBlock,
              { variant: Sa.InfoBlock.variant.warning },
              a
            )
          : null;
      },
      Mr = () => {
        const e = Object(l.b)(),
          { t: t } = Object(Va.a)(),
          [a, s] = Object(n.useState)(!1),
          { search: c } = Object(Ta.h)(),
          o = new URLSearchParams(c).get("bipPath") || "44'/148'/0'",
          [i, u] = Object(n.useState)(!1),
          [d, m] = Object(n.useState)(jr.NONE),
          E = async () => {
            s(!0), m(jr.NONE);
            try {
              const t = await q.a.request(),
                a = new z.a(t),
                n = await a.getPublicKey(o);
              u(!0),
                e(
                  v({
                    publicKey: n.publicKey,
                    hardwareWalletType: b.a.LEDGER,
                    bipPath: o,
                  })
                );
            } catch (e) {
              m(Rr(e));
            }
            s(!1);
          };
        return r.a.createElement(
          r.a.Fragment,
          null,
          r.a.createElement(Er, null),
          r.a.createElement(
            "div",
            { className: "LedgerConnect" },
            r.a.createElement(
              "div",
              { className: "LedgerConnect__header" },
              "Connect Ledger"
            ),
            r.a.createElement(
              "div",
              { className: "LedgerConnect__caption" },
              t(i ? "You’re good to go!" : "Connect device to computer")
            ),
            r.a.createElement(
              "div",
              { className: "LedgerConnect__content__center" },
              r.a.createElement("img", {
                className: "LedgerConnect__img",
                src: i ? Dr : Ir,
                alt: "ledger",
              })
            ),
            r.a.createElement(
              "div",
              { className: "LedgerConnect__bottom" },
              r.a.createElement(Pr, { error: d }),
              i
                ? r.a.createElement(
                    Wa,
                    {
                      fullWidth: !0,
                      variant: Wa.variant.tertiary,
                      onClick: () => window.close(),
                    },
                    "Done"
                  )
                : r.a.createElement(
                    Wa,
                    {
                      fullWidth: !0,
                      variant: Wa.variant.tertiary,
                      onClick: E,
                      isLoading: a,
                    },
                    t(a ? "Detecting" : "Detect device")
                  )
            )
          )
        );
      },
      Lr = Object(s.c)("grantAccess", E.t),
      xr = Object(s.c)("rejectAccess", E.C),
      Kr = Object(s.c)("signTransaction", E.K),
      Br = Object(s.c)("rejectTransaction", E.C),
      Vr = ({ children: e }) =>
        r.a.createElement("section", { className: "ModalWrapper__header" }, e),
      Fr = ({ children: e }) => (
        Object(n.useEffect)(() => {
          var e;
          return (
            null === (e = document.querySelector("body")) ||
              void 0 === e ||
              e.classList.add("ModalWrapper__disable-scroll-x"),
            () => {
              var e;
              return null === (e = document.querySelector("body")) ||
                void 0 === e
                ? void 0
                : e.classList.remove("ModalWrapper__disable-scroll-x");
            }
          );
        }, []),
        r.a.createElement(
          Ha.a,
          { className: "ModalWrapper__scrollbar" },
          r.a.createElement("section", { className: "ModalWrapper" }, e, " ")
        )
      ),
      Ur = ({ children: e }) =>
        r.a.createElement(
          "div",
          { className: "ModalWrapper__buttons-container" },
          e
        ),
      Hr = ({ domain: e, domainTitle: t, isRow: a, ...n }) => {
        const s = Object(Ia.c)(e),
          c = s === e,
          l = "https://www.google.com/s2/favicons?sz=32&domain=" + e;
        return r.a.createElement(
          "div",
          Object.assign(
            {
              className: "PunycodedDomain " + (a ? "PunycodedDomain--row" : ""),
            },
            n
          ),
          r.a.createElement(
            "div",
            null,
            r.a.createElement("img", {
              className: "PunycodedDomain__favicon",
              src: l,
              alt: "Site favicon",
            })
          ),
          r.a.createElement(
            "div",
            { className: "PunycodedDomain__domain" },
            r.a.createElement("strong", null, c ? s : "xn-" + s)
          ),
          r.a.createElement("div", { className: "PunycodedDomain__title" }, t)
        );
      },
      Wr = ({ children: e, domain: t, domainTitle: a, subject: n }) =>
        r.a.createElement(
          r.a.Fragment,
          null,
          r.a.createElement(
            "div",
            { className: "ModalInfo--card" },
            r.a.createElement(
              Sa.Card,
              { variant: Sa.Card.variant.highlight },
              r.a.createElement(Hr, { domain: t, domainTitle: a }),
              r.a.createElement("div", { className: "ModalInfo--subject" }, n),
              e
            )
          )
        );
    var Gr,
      $r = a(336);
    !(function (e) {
      (e.LOW = "Low"), (e.MEDIUM = "Medium"), (e.HIGH = "High");
    })(Gr || (Gr = {}));
    const Xr = () => {
      const { networkUrl: e } = Object(l.c)(G.l),
        [t, a] = Object(n.useState)(""),
        [r, s] = Object(n.useState)("");
      return (
        Object(n.useEffect)(() => {
          (async () => {
            try {
              const t = Object(On.a)(e),
                { max_fee: n, ledger_capacity_usage: r } = await t.feeStats();
              a(Object(i.o)(n.mode).toFixed()),
                s(
                  r > 0.5 && r <= 0.75 ? Gr.MEDIUM : r > 0.75 ? Gr.HIGH : Gr.LOW
                );
            } catch (e) {
              console.error(e);
            }
          })();
        }, [e]),
        { recommendedFee: t, networkCongestion: r }
      );
    };
    var qr = a.p + "887fe95a0e0f93a2d5e9f91b14b1fa63.png";
    const zr = () => {
        const e = Object(Ta.h)();
        return !!e.pathname && e.pathname.includes("swap");
      },
      Zr = () => {
        const e = Object(l.b)(),
          { t: t } = Object(Va.a)(),
          [a, s] = Object(n.useState)(!1),
          c = Object(l.c)(G.l),
          {
            hardwareWalletData: { transactionXDR: o, shouldSubmit: i },
            transactionData: { destination: u },
          } = Object(l.c)(ya),
          d = Object(l.c)(V),
          [m, p] = Object(n.useState)(!1),
          [b, _] = Object(n.useState)(jr.NONE),
          h = zr(),
          [w, f] = Object(n.useState)(!1),
          g = () => {
            v.current && (v.current.style.bottom = `-${ja.a}px`),
              setTimeout(() => {
                e(wa());
              }, 300);
          },
          v = Object(n.useRef)(null);
        Object(n.useEffect)(() => {
          v.current && (v.current.style.bottom = "0");
        }, [v]);
        const y = async () => {
          var t;
          s(!0), _(jr.NONE);
          try {
            const a = await q.a.create(),
              n = new z.a(a),
              r = await n.getPublicKey(d);
            p(!0);
            const s = await e(
              Wt({
                transactionXDR: o,
                networkPassphrase: c.networkPassphrase,
                publicKey: r.publicKey,
                bipPath: d,
              })
            );
            if (Wt.fulfilled.match(s)) {
              if (i) {
                const t = await e(
                  Ut({
                    publicKey: r.publicKey,
                    signedXDR: s.payload,
                    networkDetails: c,
                  })
                );
                Ut.fulfilled.match(t) && !h && e(Gt({ publicKey: u }));
              } else await Object(E.u)({ signedTransaction: s.payload });
              g();
            } else
              p(!1),
                _(
                  Rr(
                    (null === (t = s.payload) || void 0 === t
                      ? void 0
                      : t.errorMessage) || ""
                  )
                );
          } catch (e) {
            _(Rr(e));
          }
          s(!1);
        };
        return (
          Object(n.useEffect)(() => {
            y();
          }, []),
          r.a.createElement(
            "div",
            { className: "LedgerSign" },
            r.a.createElement(
              "div",
              { className: "LedgerSign__wrapper", ref: v },
              r.a.createElement(Ln, {
                customBackAction: g,
                customBackIcon: r.a.createElement(Sa.Icon.X, null),
                title: "Connect Ledger",
              }),
              r.a.createElement(
                "div",
                { className: "LedgerSign__content" },
                r.a.createElement(
                  "div",
                  { className: "LedgerSign__success" },
                  m ? "Connected" : ""
                ),
                r.a.createElement(
                  "div",
                  { className: "LedgerSign__content__center" },
                  r.a.createElement("img", {
                    className: "LedgerSign__img",
                    src: m ? qr : Ir,
                    alt: "ledger",
                  }),
                  r.a.createElement(
                    "span",
                    null,
                    t(
                      m
                        ? "Review transaction on device"
                        : "Connect device to computer"
                    )
                  )
                )
              ),
              r.a.createElement(
                "div",
                { className: "LedgerSign__bottom" },
                w && r.a.createElement(Pr, { error: b }),
                !m &&
                  r.a.createElement(
                    Wa,
                    {
                      fullWidth: !0,
                      variant: Wa.variant.tertiary,
                      onClick: () => {
                        f(!0), y();
                      },
                      isLoading: a,
                    },
                    t(a ? "Detecting" : "Detect device")
                  )
              )
            ),
            r.a.createElement(on, { onClick: void 0, isActive: !0 })
          )
        );
      },
      Yr = ({ children: e, header: t, assetRows: a, maxHeight: s }) => {
        const { t: c } = Object(Va.a)(),
          u = Object(l.c)(B),
          d = Object(l.c)(G.l),
          {
            accountBalances: { balances: m = {} },
            submitStatus: E,
            hardwareWalletData: { status: b },
            blockedDomains: _,
          } = Object(l.c)(ya),
          [h, w] = Object(n.useState)(""),
          f = Object(l.b)(),
          { recommendedFee: g } = Xr(),
          v = !!Object(l.c)(U),
          [y, O] = Object(n.useState)(!1),
          [A, S] = Object(n.useState)(!1),
          [N, C] = Object(n.useState)({
            isNewAsset: !1,
            isInvalidDomain: !1,
            isRevocable: !1,
          }),
          [T, k] = Object(n.useState)({
            domain: "",
            code: "",
            issuer: "",
            image: "",
          }),
          j = Object(On.a)(d.networkUrl),
          I = async (e, t) => {
            const a = await f(
              Vt({ transactionXDR: e, network: d.networkPassphrase })
            );
            if (Vt.fulfilled.match(a)) {
              const e = await f(
                Ut({
                  publicKey: u,
                  signedXDR: a.payload.signedTransaction,
                  networkDetails: d,
                })
              );
              Ut.fulfilled.match(e) &&
                (w(""),
                f(Xt({ publicKey: u, networkDetails: d })),
                t(),
                f(ra()),
                La(Ka.a.account)),
                Ut.rejected.match(e) && La(Ka.a.trustlineError);
            }
          };
        Object(n.useEffect)(() => {
          E === p.b.ERROR
            ? La(Ka.a.trustlineError)
            : E === p.b.SUCCESS && (f(ra()), La(Ka.a.account));
        }, [E, h, f]);
        const D = async (e, t) => {
          const a = await (async (e, t, a) => {
            var n, r, s;
            let c = !1;
            try {
              const a = await j.assets().forCode(e).forIssuer(t).call();
              c =
                !!a.records[0] &&
                (null ===
                  (r =
                    null === (n = a.records[0]) || void 0 === n
                      ? void 0
                      : n.flags) || void 0 === r
                  ? void 0
                  : r.auth_revocable);
            } catch (e) {
              console.error(e);
            }
            let l = !1;
            try {
              const a = await fetch(
                  `${Object(Ga.c)(d)}/asset/${e}-${t}/rating`
                ),
                n =
                  null === (s = (await a.json()).rating) || void 0 === s
                    ? void 0
                    : s.age;
              (!n || n <= 3) && (l = !0);
            } catch (e) {
              console.error(e);
            }
            let o = !1;
            try {
              const n = await X.a.StellarTomlResolver.resolve(a);
              let r = !1;
              n.CURRENCIES.forEach((a) => {
                a.code === e && a.issuer === t && (r = !0);
              }),
                (o = !r);
            } catch (e) {
              console.error(e), (o = !0);
            }
            return { isRevocable: c, isNewAsset: l, isInvalidDomain: o };
          })(e.code, e.issuer, e.domain);
          var n;
          (n = e.domain),
            _.domains[n] && !t
              ? (O(!0), k(e))
              : !t && (a.isInvalidDomain || a.isRevocable || a.isNewAsset)
              ? (S(!0), C(a), k(e))
              : (async (e, t, a) => {
                  const n = a ? {} : { limit: "0" },
                    r = await j.loadAccount(u),
                    s = Object(i.d)(e, t);
                  w(s);
                  const c = new X.a.TransactionBuilder(r, {
                      fee: Object(i.t)(g).toFixed(),
                      networkPassphrase: d.networkPassphrase,
                    })
                      .addOperation(
                        X.a.Operation.changeTrust({
                          asset: new X.a.Asset(e, t),
                          ...n,
                        })
                      )
                      .setTimeout(180)
                      .build()
                      .toXDR(),
                    l = () => {
                      Object(o.a)(a ? et : nt, {
                        assetCode: e,
                        assetIssuer: t,
                      });
                    };
                  v
                    ? (await f(ha({ transactionXDR: c, shouldSubmit: !0 })),
                      l())
                    : await I(c, l);
                })(e.code, e.issuer, !t);
        };
        return r.a.createElement(
          r.a.Fragment,
          null,
          b === ea.IN_PROGRESS && r.a.createElement(Zr, null),
          y &&
            r.a.createElement(Es, {
              domain: T.domain,
              code: T.code,
              issuer: T.issuer,
              image: T.image,
              onClose: () => {
                O(!1);
              },
            }),
          A &&
            r.a.createElement(ps, {
              domain: T.domain,
              code: T.code,
              issuer: T.issuer,
              image: T.image,
              newAssetFlags: N,
              onClose: () => {
                S(!1);
              },
            }),
          r.a.createElement(
            Ha.a,
            {
              className: "ManageAssetRows__scrollbar",
              style: { maxHeight: s + "px" },
            },
            t,
            r.a.createElement(
              "div",
              { className: "ManageAssetRows__content" },
              a.map(({ code: e, domain: t, image: a, issuer: n }) => {
                if (!m) return null;
                const s = Object(i.d)(e, n),
                  l = Object.keys(m).some((e) => e === s),
                  o = E === p.b.PENDING;
                return r.a.createElement(
                  "div",
                  { className: "ManageAssetRows__row", key: s },
                  r.a.createElement(Qr, {
                    code: e,
                    issuer: n,
                    image: a,
                    domain: t,
                  }),
                  r.a.createElement(
                    "div",
                    { className: "ManageAssetRows__button" },
                    r.a.createElement(
                      Sn,
                      {
                        disabled: o,
                        isLoading: o && h === s,
                        onClick: () =>
                          D({ code: e, issuer: n, image: a, domain: t }, l),
                        type: "button",
                      },
                      c(l ? "Remove" : "Add")
                    )
                  )
                );
              })
            ),
            e
          ),
          r.a.createElement(on, { onClick: () => {}, isActive: A || y })
        );
      },
      Qr = ({ code: e, issuer: t, image: a, domain: n }) => {
        const { blockedDomains: s } = Object(l.c)(ya),
          c = Object(i.d)(e, t),
          o = !!s.domains[n];
        return r.a.createElement(
          r.a.Fragment,
          null,
          r.a.createElement(cn, {
            assetIcons: "XLM" !== e ? { [c]: a } : {},
            code: e,
            issuerKey: t,
          }),
          r.a.createElement(
            "div",
            { className: "ManageAssetRows__row__info" },
            r.a.createElement(
              "div",
              { className: "ManageAssetRows__row__info__header" },
              e,
              r.a.createElement(Qa, { isScamAsset: o })
            ),
            r.a.createElement(
              "div",
              { className: "ManageAssetRows__domain" },
              Object(i.b)(n)
            )
          )
        );
      };
    var Jr = a(1241),
      es = a.n(Jr),
      ts = a(1242),
      as = a.n(ts),
      ns = a(1243),
      rs = a.n(ns);
    const ss = () => {
      const { t: e } = Object(Va.a)();
      return r.a.createElement(
        "a",
        {
          href: "https://stellar.expert/directory",
          target: "_blank",
          rel: "noreferrer",
        },
        "stellar.expert's ",
        e("directory")
      );
    };
    var cs;
    !(function (e) {
      (e.default = ""), (e.highAlert = "high-alert"), (e.warning = "warning");
    })(cs || (cs = {}));
    const ls = ({
        handleCloseClick: e,
        header: t,
        isActive: a = !1,
        variant: s,
        children: c,
      }) => {
        const { t: l } = Object(Va.a)(),
          [o, i] = Object(n.useState)(a),
          u = ({ children: e }) =>
            r.a.createElement(
              "div",
              {
                className:
                  "WarningMessage__infoBlock WarningMessage__infoBlock--" + s,
                "data-testid": "WarningMessage",
              },
              r.a.createElement(
                "div",
                { className: "WarningMessage__header" },
                r.a.createElement(Sa.Icon.AlertTriangle, {
                  className: "WarningMessage__icon",
                }),
                r.a.createElement("div", null, t),
                e
              )
            );
        return o
          ? Object($r.createPortal)(
              r.a.createElement(
                "div",
                { className: "WarningMessage--active" },
                r.a.createElement(u, null),
                r.a.createElement(
                  "div",
                  { className: "WarningMessage__children-wrapper" },
                  c
                ),
                r.a.createElement(
                  Wa,
                  {
                    variant: Wa.variant.tertiary,
                    fullWidth: !0,
                    type: "button",
                    onClick: () => (e ? e() : i(!1)),
                  },
                  l("Got it")
                )
              ),
              document.querySelector("#modal-root")
            )
          : r.a.createElement(
              "div",
              {
                className: "WarningMessage__activate-button",
                onClick: () => i(!0),
              },
              r.a.createElement(
                u,
                null,
                r.a.createElement(
                  "div",
                  { className: "WarningMessage__link-wrapper" },
                  r.a.createElement(Sa.Icon.ChevronRight, {
                    className: "WarningMessage__link-icon",
                  })
                )
              )
            );
      },
      os = ({ isUnsafe: e, isMalicious: t }) => {
        const { t: a } = Object(Va.a)();
        return t
          ? r.a.createElement(
              ls,
              { header: "Malicious account detected", variant: cs.highAlert },
              r.a.createElement(
                "p",
                null,
                a(
                  "An account you’re interacting with is tagged as malicious on"
                ),
                " ",
                r.a.createElement(ss, null),
                "."
              ),
              r.a.createElement(
                "p",
                null,
                a("For your safety, signing this transaction is disabled")
              )
            )
          : e
          ? r.a.createElement(
              ls,
              { header: "Unsafe account", variant: cs.warning },
              r.a.createElement(
                "p",
                null,
                a("An account you’re interacting with is tagged as unsafe on"),
                " ",
                r.a.createElement(ss, null),
                ". ",
                a("Please proceed with caution.")
              )
            )
          : null;
      },
      is = ({ isMemoRequired: e }) => {
        const { t: t } = Object(Va.a)();
        return e
          ? r.a.createElement(
              ls,
              { header: "Memo is required", variant: cs.highAlert },
              r.a.createElement(
                "p",
                null,
                t(
                  "A destination account requires the use of the memo field which is not present in the transaction you’re about to sign. Freighter automatically disabled the option to sign this transaction."
                )
              ),
              r.a.createElement(
                "p",
                null,
                t(
                  "Check the destination account memo requirements and include it in the transaction."
                )
              )
            )
          : null;
      },
      us = ({ isUnsafe: e, isMemoRequired: t, isMalicious: a }) =>
        r.a.createElement(
          r.a.Fragment,
          null,
          r.a.createElement(os, { isUnsafe: e, isMalicious: a }),
          r.a.createElement(is, { isMemoRequired: t })
        ),
      ds = () => {
        const { t: e } = Object(Va.a)();
        return r.a.createElement(
          ls,
          { header: "First Time Interaction", variant: cs.warning },
          r.a.createElement(
            "p",
            null,
            e(
              "If you believe you have interacted with this domain before, it is possible that scammers have copied the original site and/or made small changes to the domain name, and that this site is a scam."
            )
          ),
          r.a.createElement(
            "p",
            null,
            e(
              "Double check the domain name. If it is incorrect in any way, do not share your public key and contact the site administrator via a verified email or social media account to confirm that this domain is correct."
            )
          )
        );
      },
      ms = () => {
        const { t: e } = Object(Va.a)();
        return r.a.createElement(
          "div",
          { className: "WarningMessage__backup" },
          r.a.createElement(
            "div",
            { className: "WarningMessage__infoBlock" },
            r.a.createElement(
              "div",
              { className: "WarningMessage__header" },
              r.a.createElement(Sa.Icon.AlertTriangle, {
                className: "WarningMessage__icon",
              }),
              r.a.createElement("div", null, e("IMPORTANT"))
            ),
            r.a.createElement(
              "p",
              null,
              e(
                "Keep your recovery phrase in a safe and secure place. Anyone who has access to this phrase has access to your account and to the funds in it, so save it in a safe and secure place."
              )
            )
          )
        );
      },
      Es = ({
        isSendWarning: e = !1,
        domain: t,
        code: a,
        issuer: s,
        image: c,
        onClose: u,
        onContinue: d = () => {},
      }) => {
        const { t: m } = Object(Va.a)(),
          E = Object(l.b)(),
          b = Object(n.useRef)(null),
          { isValidatingSafeAssetsEnabled: _ } = Object(l.c)(G.n),
          { recommendedFee: h } = Xr(),
          w = Object(l.c)(G.l),
          f = Object(l.c)(B),
          { submitStatus: g } = Object(l.c)(ya),
          [v, y] = Object(n.useState)(!1),
          O = !!Object(l.c)(U);
        Object(n.useEffect)(() => {
          b.current &&
            setTimeout(() => {
              b.current.style.bottom = "0";
            }, 10);
        }, [b]);
        return r.a.createElement(
          "div",
          { className: "ScamAssetWarning" },
          r.a.createElement(
            "div",
            { className: "ScamAssetWarning__wrapper", ref: b },
            r.a.createElement(
              "div",
              { className: "ScamAssetWarning__header" },
              "Warning"
            ),
            r.a.createElement(
              "div",
              { className: "ScamAssetWarning__description" },
              m(
                "This asset was tagged as fraudulent by stellar.expert, a reliable community-maintained directory."
              )
            ),
            r.a.createElement(
              "div",
              { className: "ScamAssetWarning__row" },
              r.a.createElement(Qr, { code: a, issuer: s, image: c, domain: t })
            ),
            r.a.createElement(
              "div",
              { className: "ScamAssetWarning__bottom-content" },
              r.a.createElement(
                "div",
                null,
                e
                  ? r.a.createElement(
                      Un,
                      { variant: Un.variant.error },
                      r.a.createElement(
                        "p",
                        null,
                        m(
                          "Trading or sending this asset is not recommended. Projects related to this asset may be fraudulent even if the creators say otherwise."
                        )
                      )
                    )
                  : r.a.createElement(
                      Un,
                      { variant: Un.variant.error },
                      r.a.createElement(
                        "div",
                        null,
                        r.a.createElement(
                          "p",
                          null,
                          m(
                            _
                              ? "Freighter automatically blocked this asset. Projects related to this asset may be fraudulent even if the creators say otherwise."
                              : "Projects related to this asset may be fraudulent even if the creators say otherwise. "
                          )
                        ),
                        r.a.createElement(
                          "p",
                          null,
                          m("You can"),
                          " ",
                          "" + m(_ ? "disable" : "enable"),
                          " ",
                          m("this alert by going to"),
                          " ",
                          r.a.createElement(
                            "strong",
                            null,
                            m("Settings > Preferences")
                          )
                        )
                      )
                    )
              ),
              r.a.createElement(
                "div",
                { className: "ScamAssetWarning__btns" },
                r.a.createElement(
                  Wa,
                  {
                    fullWidth: !0,
                    variant: Wa.variant.tertiary,
                    type: "button",
                    onClick: () => {
                      b.current && (b.current.style.bottom = `-${ja.a}px`),
                        setTimeout(() => {
                          u();
                        }, 300);
                    },
                  },
                  m(_ ? "Got it" : "Cancel")
                ),
                e &&
                  r.a.createElement(
                    Wa,
                    {
                      fullWidth: !0,
                      onClick: d,
                      type: "button",
                      isLoading: v || g === p.b.PENDING,
                    },
                    m("Continue")
                  ),
                !_ &&
                  !e &&
                  r.a.createElement(
                    Wa,
                    {
                      fullWidth: !0,
                      onClick: async () => {
                        y(!0);
                        const e = new X.a.Server(w.networkUrl),
                          t = await e.loadAccount(f),
                          n = new X.a.TransactionBuilder(t, {
                            fee: Object(i.t)(h).toFixed(),
                            networkPassphrase: w.networkPassphrase,
                          })
                            .addOperation(
                              X.a.Operation.changeTrust({
                                asset: new X.a.Asset(a, s),
                              })
                            )
                            .setTimeout(180)
                            .build()
                            .toXDR();
                        if (O)
                          await E(ha({ transactionXDR: n, shouldSubmit: !0 })),
                            Object(o.a)(at, { code: a, issuer: s });
                        else {
                          const e = await E(
                            Vt({
                              transactionXDR: n,
                              network: w.networkPassphrase,
                            })
                          );
                          if (Vt.fulfilled.match(e)) {
                            const t = await E(
                              Ut({
                                publicKey: f,
                                signedXDR: e.payload.signedTransaction,
                                networkDetails: w,
                              })
                            );
                            Ut.fulfilled.match(t)
                              ? (La(Ka.a.account),
                                Object(o.a)(at, { code: a, issuer: s }))
                              : La(Ka.a.trustlineError);
                          }
                        }
                        y(!1);
                      },
                      type: "button",
                      isLoading: v || g === p.b.PENDING,
                    },
                    m("Add anyway")
                  )
              ),
              " "
            )
          )
        );
      },
      ps = ({
        domain: e,
        code: t,
        issuer: a,
        image: s,
        newAssetFlags: c,
        onClose: u,
      }) => {
        const { t: d } = Object(Va.a)(),
          m = Object(l.b)(),
          E = Object(n.useRef)(null),
          { recommendedFee: p } = Xr(),
          b = Object(l.c)(G.l),
          _ = Object(l.c)(B),
          [h, w] = Object(n.useState)(!1),
          f = !!Object(l.c)(U),
          { isRevocable: g, isNewAsset: v, isInvalidDomain: y } = c;
        Object(n.useEffect)(() => {
          E.current &&
            setTimeout(() => {
              E.current.style.bottom = "0";
            }, 10);
        }, [E]);
        return r.a.createElement(
          "div",
          { className: "NewAssetWarning" },
          r.a.createElement(
            "div",
            { className: "NewAssetWarning__wrapper", ref: E },
            r.a.createElement(
              "div",
              { className: "NewAssetWarning__header" },
              d("Before You Add This Asset")
            ),
            r.a.createElement(
              "div",
              { className: "NewAssetWarning__description" },
              d(
                "Please double-check its information and characteristics. This can help you identify fraudulent assets."
              )
            ),
            r.a.createElement(
              "div",
              { className: "NewAssetWarning__row" },
              r.a.createElement(Qr, { code: t, issuer: a, image: s, domain: e })
            ),
            r.a.createElement("hr", {
              className: "NewAssetWarning__list-divider",
            }),
            r.a.createElement(
              "div",
              { className: "NewAssetWarning__flags" },
              g &&
                r.a.createElement(
                  "div",
                  { className: "NewAssetWarning__flag" },
                  r.a.createElement(
                    "div",
                    { className: "NewAssetWarning__flag__icon" },
                    r.a.createElement("img", { src: es.a, alt: "revocable" })
                  ),
                  r.a.createElement(
                    "div",
                    { className: "NewAssetWarning__flag__content" },
                    r.a.createElement(
                      "div",
                      { className: "NewAssetWarning__flag__header" },
                      d("Revocable Asset")
                    ),
                    r.a.createElement(
                      "div",
                      { className: "NewAssetWarning__flag__description" },
                      d(
                        "The asset creator can revoke your access to this asset at anytime"
                      )
                    )
                  )
                ),
              r.a.createElement(
                "div",
                null,
                v &&
                  r.a.createElement(
                    "div",
                    { className: "NewAssetWarning__flag" },
                    r.a.createElement(
                      "div",
                      { className: "NewAssetWarning__flag__icon" },
                      r.a.createElement("img", { src: as.a, alt: "new asset" })
                    ),
                    r.a.createElement(
                      "div",
                      { className: "NewAssetWarning__flag__content" },
                      r.a.createElement(
                        "div",
                        { className: "NewAssetWarning__flag__header" },
                        d("New Asset")
                      ),
                      r.a.createElement(
                        "div",
                        { className: "NewAssetWarning__flag__description" },
                        d("This is a relatively new asset.")
                      )
                    )
                  )
              ),
              r.a.createElement(
                "div",
                null,
                y &&
                  r.a.createElement(
                    "div",
                    { className: "NewAssetWarning__flag" },
                    r.a.createElement(
                      "div",
                      { className: "NewAssetWarning__flag__icon" },
                      r.a.createElement("img", {
                        src: rs.a,
                        alt: "invalid domain",
                      })
                    ),
                    r.a.createElement(
                      "div",
                      { className: "NewAssetWarning__flag__content" },
                      r.a.createElement(
                        "div",
                        { className: "NewAssetWarning__flag__header" },
                        d("Invalid Format Asset")
                      ),
                      r.a.createElement(
                        "div",
                        { className: "NewAssetWarning__flag__description" },
                        d(
                          "Asset home domain doesn’t exist, TOML file format is invalid, or asset doesn't match currency description"
                        )
                      )
                    )
                  )
              ),
              r.a.createElement(
                "div",
                { className: "NewAssetWarning__btns" },
                r.a.createElement(
                  Wa,
                  {
                    fullWidth: !0,
                    variant: Wa.variant.tertiary,
                    type: "button",
                    onClick: () => {
                      E.current && (E.current.style.bottom = `-${ja.a}px`),
                        setTimeout(() => {
                          u();
                        }, 300);
                    },
                  },
                  d("Cancel")
                ),
                r.a.createElement(
                  Wa,
                  {
                    fullWidth: !0,
                    onClick: async () => {
                      w(!0);
                      const e = new X.a.Server(b.networkUrl),
                        n = await e.loadAccount(_),
                        r = new X.a.TransactionBuilder(n, {
                          fee: Object(i.t)(p).toFixed(),
                          networkPassphrase: b.networkPassphrase,
                        })
                          .addOperation(
                            X.a.Operation.changeTrust({
                              asset: new X.a.Asset(t, a),
                            })
                          )
                          .setTimeout(180)
                          .build()
                          .toXDR();
                      if (f)
                        await m(ha({ transactionXDR: r, shouldSubmit: !0 })),
                          Object(o.a)(at, { code: t, issuer: a });
                      else {
                        const e = await m(
                          Vt({
                            transactionXDR: r,
                            network: b.networkPassphrase,
                          })
                        );
                        if (Vt.fulfilled.match(e)) {
                          const n = await m(
                            Ut({
                              publicKey: _,
                              signedXDR: e.payload.signedTransaction,
                              networkDetails: b,
                            })
                          );
                          Ut.fulfilled.match(n)
                            ? (La(Ka.a.account),
                              Object(o.a)(at, { code: t, issuer: a }))
                            : La(Ka.a.trustlineError);
                        }
                      }
                      w(!1);
                    },
                    type: "button",
                    isLoading: h,
                  },
                  d("Add asset")
                )
              )
            )
          )
        );
      };
    Object(o.c)(Lr.fulfilled, () => {
      Object(o.a)(gt);
    }),
      Object(o.c)(xr.fulfilled, () => {
        Object(o.a)(vt);
      }),
      Object(o.c)(Kr.fulfilled, () => {
        const e = JSON.parse(localStorage.getItem(_.p) || "{}");
        Object(o.a)(yt, { accountType: e.accountType });
      }),
      Object(o.c)(Br.fulfilled, () => {
        Object(o.a)(Nt);
      });
    const bs = () => {
      const { t: e } = Object(Va.a)(),
        t = Object(Ta.h)(),
        a = Object(l.b)(),
        [s, c] = Object(n.useState)(!1),
        { tab: o, url: i } = Object(Ia.g)(t.search),
        u = o && o.title ? o.title : "",
        d = Object(Ia.e)(i),
        m = Object(l.c)(B);
      return r.a.createElement(
        r.a.Fragment,
        null,
        r.a.createElement(
          Fr,
          null,
          r.a.createElement(
            Vr,
            null,
            r.a.createElement("strong", null, e("Share Public Key"))
          ),
          r.a.createElement(ds, null),
          r.a.createElement(
            Wr,
            {
              domain: d,
              domainTitle: u,
              subject:
                e("This website wants to know data about your account") + ":",
            },
            r.a.createElement(Pn.a, { publicKey: m })
          )
        ),
        r.a.createElement(
          Ur,
          null,
          r.a.createElement(
            Wa,
            {
              fullWidth: !0,
              variant: Wa.variant.tertiary,
              onClick: () => {
                a(xr()), window.close();
              },
            },
            e("Reject")
          ),
          r.a.createElement(
            Wa,
            {
              fullWidth: !0,
              isLoading: s,
              onClick: () =>
                (async () => {
                  c(!0), await a(Lr(i)), window.close();
                })(),
            },
            e("Share")
          )
        )
      );
    };
    var _s = a(1244),
      hs = a.n(_s);
    const ws = () => {
      const [e, t] = Object(n.useState)("");
      return (
        Object(n.useEffect)(() => {
          let e = { mnemonicPhrase: "" };
          return (
            (async () => {
              try {
                e = await Object(E.q)();
              } catch (e) {
                console.error(e);
              }
              const { mnemonicPhrase: a } = e;
              t(a);
            })(),
            () => {
              t("");
            }
          );
        }, []),
        e
      );
    };
    var fs = a(260),
      gs = a(1167),
      vs = a.n(gs);
    const ys = ({ mnemonicPhrase: e }) =>
        e.split(" ").map((e) => {
          const t = vs()(1, 10),
            a = Object(fs.generateMnemonic)().split(" "),
            n = a[vs()(0, a.length - 1)];
          return r.a.createElement(
            "li",
            { className: "MnemonicDisplay__list-item", key: e },
            t % 2 == 0
              ? r.a.createElement(
                  r.a.Fragment,
                  null,
                  r.a.createElement(
                    "span",
                    { className: "MnemonicDisplay__random-word" },
                    r.a.createElement("strong", null, n)
                  ),
                  r.a.createElement(
                    "span",
                    null,
                    r.a.createElement("strong", null, e)
                  )
                )
              : r.a.createElement(
                  r.a.Fragment,
                  null,
                  r.a.createElement(
                    "span",
                    null,
                    r.a.createElement("strong", null, e)
                  ),
                  r.a.createElement(
                    "span",
                    { className: "MnemonicDisplay__random-word" },
                    r.a.createElement("strong", null, n)
                  )
                )
          );
        }),
      Os = ({ mnemonicPhrase: e, isPopupView: t }) =>
        r.a.createElement(
          "div",
          { className: "MnemonicDisplay" },
          r.a.createElement(
            Sa.Card,
            { variant: Sa.Card.variant.highlight },
            r.a.createElement(
              "ol",
              {
                onCopy: (e) => e.preventDefault(),
                className:
                  "MnemonicDisplay__ordered-list " +
                  (t ? "MnemonicDisplay__ordered-list--popup-view" : ""),
              },
              ys({ mnemonicPhrase: e })
            )
          )
        ),
      As = ({ onChange: e, wordKey: t, word: a }) =>
        r.a.createElement(
          r.a.Fragment,
          null,
          r.a.createElement(Wn.a, {
            className: "CheckButton",
            id: t,
            onChange: (t) => e(t),
            type: "checkbox",
            name: t,
            key: t,
            text: a,
          }),
          r.a.createElement(
            "label",
            { className: "ButtonLabel", htmlFor: t },
            a
          )
        ),
      Ss = (e) => e.replace(/-.*/, ""),
      Ns = ({ words: e = [""] }) => {
        const { t: t } = Object(Va.a)(),
          a = Object(l.b)(),
          s = e.reduce((e, t, a) => ({ ...e, [`${t}-${a}`]: !1 }), {}),
          [c, o] = Object(n.useState)([]),
          i = Object(l.c)(K),
          u = Object.entries(s),
          d = () => c.map((e) => Ss(e)).join(" ");
        return r.a.createElement(
          r.a.Fragment,
          null,
          r.a.createElement(
            _r,
            {
              className: "ConfirmMnemonicPhrase__screen",
              "data-testid": "ConfirmMnemonicPhrase",
            },
            r.a.createElement(
              br,
              { className: "ConfirmMnemonicPhrase__header" },
              t("Confirm your recovery phrase")
            ),
            r.a.createElement(
              "div",
              { className: "ConfirmMnemonicPhrase__content" },
              r.a.createElement(
                "p",
                null,
                t("Please select each word in the same order you have")
              ),
              r.a.createElement(
                "p",
                null,
                t("them noted to confirm you got them right")
              )
            ),
            r.a.createElement(
              Wn.c,
              {
                initialValues: s,
                onSubmit: (e, t) => {
                  a(S(d())), o([]), t.resetForm();
                },
              },
              ({ dirty: e, isSubmitting: a, handleChange: n }) =>
                r.a.createElement(
                  Wn.b,
                  { className: "ConfirmMnemonicPhrase--form-wrapper" },
                  r.a.createElement(
                    "div",
                    {
                      className:
                        "ConfirmMnemonicPhrase__selected-words-wrapper",
                    },
                    r.a.createElement(
                      Sa.Card,
                      { variant: Sa.Card.variant.highlight },
                      r.a.createElement(
                        "ul",
                        {
                          className:
                            "ConfirmMnemonicPhrase__selected-words-text",
                          onCopy: (e) => e.preventDefault(),
                        },
                        ys({ mnemonicPhrase: d() })
                      )
                    )
                  ),
                  r.a.createElement(mr, null, i),
                  r.a.createElement(
                    "div",
                    { className: "ConfirmMnemonicPhrase__word-bubble-wrapper" },
                    u.map(([e]) =>
                      r.a.createElement(As, {
                        key: e,
                        onChange: (e) => {
                          var t;
                          n(e),
                            (t = e.target).checked
                              ? o((e) => [...e, t.name])
                              : o((e) => {
                                  const a = [...e];
                                  return a.splice(a.indexOf(t.name), 1), [...a];
                                });
                        },
                        wordKey: e,
                        word: Ss(e),
                      })
                    )
                  ),
                  r.a.createElement(
                    dr,
                    null,
                    r.a.createElement(
                      Wa,
                      {
                        "data-testid": "display-mnemonic-phrase-confirm-btn",
                        fullWidth: !0,
                        type: "submit",
                        disabled: !e && !!d().length,
                        isLoading: a,
                      },
                      t("NEXT")
                    )
                  )
                )
            )
          )
        );
      },
      Cs = ({ mnemonicPhrase: e }) => {
        const { t: t } = Object(Va.a)();
        return r.a.createElement(
          "div",
          {
            className: "DisplayMnemonicPhrase",
            "data-testid": "display-mnemonic-phrase",
          },
          r.a.createElement(
            _r,
            { className: "DisplayMnemonicPhrase__screen" },
            r.a.createElement(
              hr,
              { className: "DisplayMnemonicPhrase__half-screen" },
              r.a.createElement(
                br,
                { className: "DisplayMnemonicPhrase__header" },
                t("Secret Recovery phrase")
              ),
              r.a.createElement(
                "div",
                { className: "DisplayMnemonicPhrase__content" },
                r.a.createElement(
                  "p",
                  null,
                  t(
                    "Your recovery phrase gives you access to your account and is the"
                  ),
                  " ",
                  r.a.createElement(
                    "strong",
                    null,
                    t("only way to access it in a new browser")
                  ),
                  ".",
                  " ",
                  t("Keep it in a safe place.")
                ),
                r.a.createElement(
                  "p",
                  null,
                  t(
                    "For your security, we'll check if you got it right in the next step."
                  )
                )
              )
            ),
            r.a.createElement(
              hr,
              { className: "DisplayMnemonicPhrase__half-screen" },
              r.a.createElement(
                Un,
                { variant: Un.variant.warning },
                r.a.createElement(
                  "div",
                  null,
                  r.a.createElement("strong", null, t("IMPORTANT WARNING")),
                  r.a.createElement(
                    "p",
                    null,
                    t("Never disclose your recovery phrase"),
                    "!"
                  )
                )
              ),
              r.a.createElement(Os, { mnemonicPhrase: e }),
              r.a.createElement(
                Wa,
                {
                  "data-testid": "display-mnemonic-phrase-next-btn",
                  fullWidth: !0,
                  onClick: () => {
                    La(Ka.a.mnemonicPhraseConfirm);
                  },
                },
                t("Next")
              )
            )
          )
        );
      },
      Ts = () => {
        const e = ws();
        return Object(l.c)(x) === m.a.MNEMONIC_PHRASE_CONFIRMED
          ? r.a.createElement(Ta.a, { to: Ka.a.pinExtension })
          : e
          ? r.a.createElement(
              Ta.d,
              null,
              r.a.createElement(
                Dl,
                { exact: !0, path: Ka.a.mnemonicPhrase },
                r.a.createElement(gr, null),
                r.a.createElement(Er, null),
                r.a.createElement(
                  pr,
                  null,
                  r.a.createElement(Cs, { mnemonicPhrase: e })
                )
              ),
              r.a.createElement(
                Dl,
                { exact: !0, path: Ka.a.mnemonicPhraseConfirm },
                r.a.createElement(gr, null),
                r.a.createElement(Er, null),
                r.a.createElement(
                  pr,
                  { hasGoBackBtn: !0 },
                  r.a.createElement(Ns, { words: hs()(e.split(" ")) })
                )
              )
            )
          : null;
      };
    var ks = a(1245),
      js = a.n(ks),
      Is = a.p + "860c36319ff2162e208a4a0466634410.png";
    const Ds = () =>
        navigator.userAgent.toLowerCase().indexOf("chrome") > -1 &&
        !!window.chrome,
      Rs = () => {
        const { t: e } = Object(Va.a)();
        return r.a.createElement(
          "div",
          { className: "FullscreenSuccessMessage__infoBlock" },
          r.a.createElement(
            Un,
            { variant: Un.variant.warning },
            r.a.createElement(
              "div",
              { className: "InfoBlock__content" },
              r.a.createElement(
                "div",
                { className: "InfoBlock__header" },
                e("Avoid scams and keep your account safe")
              ),
              r.a.createElement(
                "ul",
                { className: "FullscreenSuccessMessage__infoBlock__list" },
                r.a.createElement(
                  "li",
                  null,
                  e(
                    "Freighter will never ask for your recovery phrase unless you’re actively importing your account using the browser extension - never on an external website."
                  )
                ),
                r.a.createElement(
                  "li",
                  null,
                  e(
                    "Always check the domain of websites you’re using Freighter with"
                  )
                ),
                r.a.createElement(
                  "li",
                  null,
                  e(
                    "Freighter cannot recover your account if you lose your recovery phrase, so keep it safe"
                  )
                )
              )
            )
          )
        );
      },
      Ps = () => {
        const { t: e } = Object(Va.a)();
        return r.a.createElement(
          r.a.Fragment,
          null,
          r.a.createElement(
            "div",
            { className: "FullscreenSuccessMessage__copy" },
            r.a.createElement(
              "p",
              null,
              e(
                "Awesome, you passed the test. Keep your recovery phrase safe, it’s your responsibility."
              )
            )
          ),
          r.a.createElement(Rs, null),
          r.a.createElement(
            dr,
            null,
            r.a.createElement(
              Wa,
              {
                fullWidth: !0,
                onClick: () => {
                  Object(o.a)(it),
                    Ds() ? La(Ka.a.pinExtension) : window.close();
                },
              },
              Ds() ? e("CONTINUE") : e("ALL DONE")
            )
          )
        );
      },
      Ms = () => {
        const { t: e } = Object(Va.a)();
        return r.a.createElement(
          r.a.Fragment,
          null,
          r.a.createElement(
            "div",
            { className: "FullscreenSuccessMessage__copy" },
            r.a.createElement(
              "p",
              null,
              e(
                "You successfully imported your account. Keep your recovery phrase safe, it’s your responsibility"
              )
            ),
            !Ds() &&
              r.a.createElement(
                "p",
                null,
                e(
                  "Check your account details by clicking on the Freighter icon on your browser."
                )
              )
          ),
          Ds()
            ? r.a.createElement(Rs, null)
            : r.a.createElement(
                "div",
                { className: "FullscreenSuccessMessage__illo-container" },
                r.a.createElement("img", {
                  className: "FullscreenSuccessMessage__extension-image",
                  src: Is,
                  alt: "Extension",
                })
              ),
          r.a.createElement(
            dr,
            null,
            r.a.createElement(
              Wa,
              {
                fullWidth: !0,
                onClick: () => {
                  Object(o.a)(ft),
                    Ds() ? La(Ka.a.pinExtension) : window.close();
                },
              },
              Ds() ? e("CONTINUE") : e("ALL DONE")
            )
          )
        );
      },
      Ls = () => {
        const e = Object(Ta.h)(),
          { t: t } = Object(Va.a)(),
          a = e.pathname === Ka.a.mnemonicPhraseConfirmed;
        return r.a.createElement(
          r.a.Fragment,
          null,
          r.a.createElement(gr, null),
          r.a.createElement(Er, null),
          r.a.createElement(
            "div",
            { className: "FullscreenSuccessMessage__wrapper" },
            r.a.createElement(
              "div",
              { className: "FullscreenSuccessMessage__illo-container" },
              r.a.createElement("img", {
                className: "FullscreenSuccessMessage__success-image",
                src: js.a,
                alt: "Success",
              })
            ),
            r.a.createElement(
              br,
              { className: "FullscreenSuccessMessage__header" },
              t("Woo, you’re in!")
            ),
            r.a.createElement(
              "div",
              { className: "FullscreenSuccessMessage__content-wrapper" },
              a ? r.a.createElement(Ps, null) : r.a.createElement(Ms, null)
            )
          )
        );
      },
      xs = ({ phraseInput: e, index: t, handleMnemonicInputChange: a }) => {
        const [s, c] = Object(n.useState)(!1),
          [l, o] = Object(n.useState)("");
        return r.a.createElement(
          "div",
          { key: e, className: "RecoverAccount__phrase-input" },
          r.a.createElement(Sa.Input, {
            autoComplete: "off",
            id: e,
            name: e,
            onChange: (e) => {
              a(e.target.value, t), o(e.target.value);
            },
            onPaste: (e) => e.preventDefault(),
            placeholder: t + 1 + ".",
            type: s ? "text" : "password",
            value: l,
          }),
          r.a.createElement(
            "div",
            {
              className: "RecoverAccount__password-toggle",
              onClick: () => c(!s),
            },
            s
              ? r.a.createElement(Sa.Icon.Eye, null)
              : r.a.createElement(Sa.Icon.EyeOff, null)
          )
        );
      },
      Ks = (e) => e.join(" ").trim(),
      Bs = () => {
        const { t: e } = Object(Va.a)(),
          t = Object(l.c)(B),
          a = Object(l.c)(K),
          s = Object(n.useRef)(t),
          c = Object(cr.c)().shape({
            password: lr,
            confirmPassword: or,
            termsOfUse: ir,
          }),
          o = Object(l.b)(),
          [i, u] = Object(n.useState)([]),
          [d, m] = Object(n.useState)([]);
        Object(n.useEffect)(() => {
          t && t !== s.current && La(Ka.a.recoverAccountSuccess);
        }, [t]),
          Object(n.useEffect)(() => {
            const e = [];
            for (let t = 1; t <= 12; t++) e.push("MnemonicPhrase-" + t);
            u(e);
          }, [12]);
        const E = (e, t) => {
          const a = [...d];
          (a[t] = e), m(a);
        };
        return r.a.createElement(
          r.a.Fragment,
          null,
          r.a.createElement(gr, null),
          r.a.createElement(Er, null),
          r.a.createElement(
            pr,
            { hasGoBackBtn: !0 },
            r.a.createElement(
              Wn.c,
              {
                initialValues: {
                  password: "",
                  confirmPassword: "",
                  termsOfUse: !1,
                },
                validationSchema: c,
                onSubmit: async (e) => {
                  const { password: t } = e;
                  await o(A({ password: t, mnemonicPhrase: Ks(d) }));
                },
              },
              ({
                dirty: t,
                touched: n,
                isSubmitting: s,
                isValid: c,
                errors: l,
              }) =>
                r.a.createElement(
                  Wn.b,
                  null,
                  r.a.createElement(
                    "div",
                    { className: "RecoverAccount__screen" },
                    r.a.createElement(
                      "div",
                      { className: "RecoverAccount__half-screen" },
                      r.a.createElement(
                        "div",
                        { className: "RecoverAccount__header" },
                        e("Import wallet from recovery phrase")
                      ),
                      r.a.createElement(
                        "div",
                        { className: "RecoverAccount__subheader" },
                        e("Enter your 12 word phrase to restore your wallet")
                      ),
                      r.a.createElement(
                        "div",
                        { className: "RecoverAccount__mnemonic-input" },
                        i.map((e, t) =>
                          r.a.createElement(xs, {
                            key: e,
                            phraseInput: e,
                            handleMnemonicInputChange: E,
                            index: t,
                          })
                        )
                      ),
                      r.a.createElement(mr, null, a)
                    ),
                    r.a.createElement(
                      "div",
                      { className: "RecoverAccount__half-screen" },
                      r.a.createElement(
                        ur,
                        null,
                        r.a.createElement(Sa.Input, {
                          autoComplete: "off",
                          customInput: r.a.createElement(Wn.a, null),
                          id: "password-input",
                          name: "password",
                          placeholder: e("New password"),
                          type: "password",
                          error: l.password && n.password ? l.password : "",
                        }),
                        r.a.createElement(Sa.Input, {
                          autoComplete: "off",
                          customInput: r.a.createElement(Wn.a, null),
                          id: "confirm-password-input",
                          name: "confirmPassword",
                          placeholder: e("Confirm password"),
                          type: "password",
                          error:
                            l.confirmPassword && n.confirmPassword
                              ? l.confirmPassword
                              : null,
                        }),
                        r.a.createElement(vr, null),
                        r.a.createElement(
                          Wn.a,
                          { name: "termsOfUse" },
                          ({ field: t }) =>
                            r.a.createElement(
                              Sa.Checkbox,
                              Object.assign(
                                {
                                  autoComplete: "off",
                                  id: "termsOfUse-input",
                                  error:
                                    l.termsOfUse && n.termsOfUse
                                      ? l.termsOfUse
                                      : null,
                                  label: r.a.createElement(
                                    "span",
                                    null,
                                    e("I have read and agree to"),
                                    " ",
                                    r.a.createElement(
                                      Sa.TextLink,
                                      {
                                        variant: Sa.TextLink.variant.secondary,
                                        href:
                                          "https://stellar.org/terms-of-service",
                                      },
                                      e("Terms of Use")
                                    )
                                  ),
                                },
                                t
                              )
                            )
                        )
                      ),
                      r.a.createElement(
                        dr,
                        null,
                        r.a.createElement(
                          Wa,
                          {
                            fullWidth: !0,
                            isLoading: s,
                            disabled: !(t && c && Ks(d).length),
                          },
                          e("IMPORT")
                        )
                      )
                    )
                  )
                )
            )
          )
        );
      };
    var Vs,
      Fs = a(27),
      Us = a(1395),
      Hs = a(7),
      Ws = a.n(Hs),
      Gs = a(124),
      $s = a.n(Gs);
    !(function (e) {
      (e.MEMO_ID = "memoId"),
        (e.MEMO_HASH = "memoHash"),
        (e.MEMO_TEXT = "memoText");
    })(Vs || (Vs = {}));
    var Xs;
    !(function (e) {
      (e.tx_failed = "tx_failed"),
        (e.tx_insufficient_fee = "tx_insufficient_fee"),
        (e.op_invalid_limit = "op_invalid_limit"),
        (e.op_low_reserve = "op_low_reserve"),
        (e.op_under_dest_min = "op_under_dest_min"),
        (e.op_underfunded = "op_underfunded"),
        (e.op_no_destination = "op_no_destination"),
        (e.op_no_trust = "op_no_trust");
    })(Xs || (Xs = {}));
    const qs = (e) => {
        const t = $s()(e, "response.extras.result_codes.transaction", "");
        return {
          operations: $s()(e, "response.extras.result_codes.operations", []),
          transaction: t,
        };
      },
      zs = ({ children: e }) =>
        r.a.createElement("div", { className: "TransactionHeading" }, e);
    var Zs = a(1246);
    const Ys = ({ flaggedKeys: e, isMemoRequired: t, transaction: a }) => {
        const { t: n } = Object(Va.a)(),
          { _operations: s } = a,
          c = s && s.length > 1 ? n("Operations") : n("Operation");
        return r.a.createElement(
          "div",
          { className: "Transaction" },
          s
            ? r.a.createElement(
                r.a.Fragment,
                null,
                r.a.createElement(zs, null, c),
                r.a.createElement(Zs.a, {
                  flaggedKeys: e,
                  isMemoRequired: t,
                  operations: s,
                })
              )
            : null
        );
      },
      Qs = ({ memo: e, isMemoRequired: t }) => {
        const { t: a } = Object(Va.a)();
        return t
          ? r.a.createElement(Sa.IconButton, {
              label: a("Not defined"),
              altText: "Error",
              icon: r.a.createElement(Sa.Icon.Info, null),
              variant: Sa.IconButton.variant.error,
            })
          : e
          ? r.a.createElement("span", null, e + " (MEMO_TEXT)")
          : null;
      },
      Js = ({
        _fee: e,
        _sequence: t,
        isFeeBump: a,
        isMemoRequired: n,
        memo: s,
      }) => {
        const { t: c } = Object(Va.a)();
        return r.a.createElement(
          "div",
          { className: "TransactionInfo" },
          e
            ? r.a.createElement(
                "div",
                null,
                r.a.createElement(
                  "div",
                  null,
                  r.a.createElement("strong", null, c("Base fee"))
                ),
                r.a.createElement(
                  "div",
                  null,
                  " ",
                  Object(i.o)(e).toString(),
                  " XLM"
                )
              )
            : null,
          s
            ? r.a.createElement(
                "div",
                null,
                r.a.createElement(
                  "div",
                  null,
                  r.a.createElement("strong", null, c("Memo"))
                ),
                r.a.createElement(
                  "div",
                  null,
                  r.a.createElement(Qs, { memo: s, isMemoRequired: n })
                )
              )
            : null,
          t
            ? r.a.createElement(
                "div",
                null,
                r.a.createElement(
                  "div",
                  null,
                  r.a.createElement(
                    "strong",
                    null,
                    c("Transaction sequence number")
                  )
                ),
                r.a.createElement("div", null, " ", t)
              )
            : null,
          a
            ? r.a.createElement(
                "div",
                null,
                r.a.createElement(
                  "div",
                  null,
                  r.a.createElement("strong", null, c("Inner Transaction"))
                )
              )
            : null
        );
      },
      ec = ({ isApproval: e, customBackAction: t, customSubmit: a }) => {
        const { t: n } = Object(Va.a)(),
          s = Object(Ta.h)(),
          c = Object(l.b)(),
          o = Object(l.c)(K),
          i = $s()(s, "state.from.pathname", "");
        return r.a.createElement(
          Or,
          null,
          r.a.createElement(Ln, {
            title: n("Verification"),
            customBackAction: t,
          }),
          r.a.createElement(
            "div",
            { className: "VerifyAccount__copy" },
            n(
              e
                ? "Enter your account password to verify your account."
                : "Enter your account password to authorize this transaction."
            ),
            " ",
            "You won’t be asked to do this for the next 24 hours."
          ),
          r.a.createElement(
            Wn.c,
            {
              initialValues: { password: "" },
              onSubmit: async (e) => {
                a
                  ? await a(e.password)
                  : (await c(N(e.password)), La(i || Ka.a.account));
              },
            },
            ({
              dirty: t,
              isValid: a,
              isSubmitting: s,
              errors: c,
              touched: l,
            }) =>
              r.a.createElement(
                Wn.b,
                null,
                r.a.createElement(Wn.a, { name: "password" }, ({ field: e }) =>
                  r.a.createElement(
                    Sa.Input,
                    Object.assign(
                      {
                        id: "password-input",
                        type: "password",
                        placeholder: n("Enter password"),
                        error:
                          o || (c.password && l.password ? c.password : ""),
                      },
                      e
                    )
                  )
                ),
                r.a.createElement(
                  "div",
                  { className: "VerifyAccount__btn-continue" },
                  r.a.createElement(
                    Wa,
                    { fullWidth: !0, isLoading: s, disabled: !(t && a) },
                    n(e ? "Approve" : "Submit")
                  )
                )
              )
          )
        );
      },
      tc = () => {
        const { t: e } = Object(Va.a)(),
          t = Object(Ta.h)(),
          a = Object(l.b)(),
          { networkName: s, networkPassphrase: c } = Object(l.c)(G.l),
          u = Object(l.c)(G.k),
          {
            accountToSign: d,
            transactionXdr: m,
            domain: E,
            isDomainListedAllowed: p,
            isHttpsDomain: b,
            flaggedKeys: _,
          } = Object(i.f)(t.search),
          h = (u ? Fs : X.a).TransactionBuilder.fromXDR(m, c),
          {
            _fee: w,
            _innerTransaction: f,
            _memo: g,
            _networkPassphrase: v,
            _sequence: O,
          } = h,
          A = !!f,
          S = ((e) => {
            const t = $s()(e, "_switch.name", "");
            if (t === Vs.MEMO_ID) return $s()(e, "_value.low", "");
            const a = t === Vs.MEMO_HASH ? "hex" : "utf-8";
            return Ws.a.Buffer.from($s()(e, "_value.data", "")).toString(a);
          })(g);
        let C = d;
        const T = !!Object(l.c)(U),
          {
            hardwareWalletData: { status: k },
          } = Object(l.c)(ya),
          [j, I] = Object(n.useState)(!1),
          [D, R] = Object(n.useState)(!1),
          [P, x] = Object(n.useState)({}),
          [K, V] = Object(n.useState)(!1),
          [F, H] = Object(n.useState)(!1),
          [W, q] = Object(n.useState)(!1);
        Object(n.useEffect)(() => {
          W && k === ea.IDLE && window.close();
        }, [W, k]);
        const z = async () => {
            T
              ? (await a(ha({ transactionXDR: m, shouldSubmit: !1 })), q(!0))
              : (await a(Kr()), window.close());
          },
          Z = Object.values(_),
          Y = Z.some(({ tags: e }) => e.includes(Tn.c.unsafe)),
          Q = Z.some(({ tags: e }) => e.includes(Tn.c.malicious)),
          J = Z.some(({ tags: e }) => e.includes(Tn.c.memoRequired) && !S),
          ee = Object(l.c)(L),
          te = Object(l.c)(B),
          ae = Object(l.c)(M),
          ne = Object(n.useRef)(te),
          re = Object(n.useRef)({}),
          se = Object(n.useCallback)(async (e) => {
            let t;
            try {
              t = (await $.FederationServer.resolve(e)).account_id;
            } catch (e) {
              console.error(e);
            }
            return t;
          }, []);
        (async () => {
          if (d) {
            if (Object(i.l)(d)) {
              const e = $.MuxedAccount.fromAddress(d, "0");
              C = e.baseAccount().accountId();
            }
            Object(i.i)(d) && (C = await se(C));
          }
        })(),
          Object(n.useEffect)(() => {
            J && Object(o.a)(Ot), Y && Object(o.a)(St), Q && Object(o.a)(At);
          }, [J, Q, Y]),
          Object(n.useEffect)(() => {
            let e;
            ee.forEach((t) => {
              C &&
                t.publicKey === C &&
                (ne.current !== t.publicKey && a(y(t.publicKey)), (e = t)),
                (re.current[t.publicKey] = t);
            }),
              e || V(!0);
          }, [C, ee, a]),
          Object(n.useEffect)(() => {
            x(re.current[te] || {});
          }, [ee, te]);
        const ce = J || Q;
        return v !== c
          ? r.a.createElement(
              Fr,
              null,
              r.a.createElement(
                ls,
                {
                  variant: cs.warning,
                  handleCloseClick: () => window.close(),
                  isActive: !0,
                  header: `${e("Freighter is set to")} ${s}`,
                },
                r.a.createElement(
                  "p",
                  null,
                  e("The transaction you’re trying to sign is on"),
                  " ",
                  v,
                  "."
                ),
                r.a.createElement(
                  "p",
                  null,
                  e("Signing this transaction is not possible at the moment.")
                )
              )
            )
          : b || u
          ? F
            ? r.a.createElement(ec, {
                isApproval: !0,
                customBackAction: () => H(!1),
                customSubmit: async (e) => {
                  const t = await a(N(e));
                  N.fulfilled.match(t) && (await z());
                },
              })
            : r.a.createElement(
                r.a.Fragment,
                null,
                k === ea.IN_PROGRESS && r.a.createElement(Zr, null),
                r.a.createElement(
                  "div",
                  {
                    className: "SignTransaction",
                    "data-testid": "SignTransaction",
                  },
                  r.a.createElement(
                    Fr,
                    null,
                    r.a.createElement(
                      Vr,
                      null,
                      r.a.createElement(
                        "strong",
                        null,
                        e("Confirm Transaction")
                      )
                    ),
                    u
                      ? r.a.createElement(
                          ls,
                          { header: "Experimental Mode", variant: cs.default },
                          r.a.createElement(
                            "p",
                            null,
                            e(
                              "You are interacting with a transaction that may be using untested and changing schemas. Proceed at your own risk."
                            )
                          )
                        )
                      : null,
                    Z.length
                      ? r.a.createElement(us, {
                          isUnsafe: Y,
                          isMalicious: Q,
                          isMemoRequired: J,
                        })
                      : null,
                    p || ce ? null : r.a.createElement(ds, null),
                    r.a.createElement(
                      "div",
                      { className: "SignTransaction__info" },
                      r.a.createElement(
                        Sa.Card,
                        { variant: Sa.Card.variant.highlight },
                        r.a.createElement(Hr, { domain: E, isRow: !0 }),
                        r.a.createElement(
                          "div",
                          { className: "SignTransaction__subject" },
                          e("is requesting approval to a"),
                          " ",
                          A ? "fee bump " : "",
                          e("transaction"),
                          ":"
                        ),
                        r.a.createElement(
                          "div",
                          { className: "SignTransaction__approval" },
                          r.a.createElement(
                            "div",
                            { className: "SignTransaction__approval__title" },
                            e("Approve using"),
                            ":"
                          ),
                          r.a.createElement(
                            "div",
                            {
                              className: "SignTransaction__current-account",
                              onClick: () => R(!0),
                            },
                            r.a.createElement(
                              dn,
                              {
                                displayKey: !0,
                                accountName: P.name,
                                active: !0,
                                publicKey: P.publicKey,
                                setIsDropdownOpen: R,
                              },
                              r.a.createElement(mn, {
                                hardwareWalletType: P.hardwareWalletType,
                                imported: P.imported,
                              })
                            ),
                            r.a.createElement(
                              "div",
                              {
                                className:
                                  "SignTransaction__current-account__chevron",
                              },
                              r.a.createElement(Sa.Icon.ChevronDown, null)
                            )
                          )
                        )
                      ),
                      K && C
                        ? r.a.createElement(
                            "div",
                            { className: "SignTransaction__account-not-found" },
                            r.a.createElement(
                              Un,
                              { variant: Un.variant.warning },
                              e(
                                "The application is requesting a specific account"
                              ),
                              " (",
                              Object(i.s)(C),
                              "),",
                              " ",
                              e(
                                "which is not available on Freighter. If you own this account, you can import it into Freighter to complete this transaction."
                              )
                            )
                          )
                        : null
                    ),
                    A
                      ? r.a.createElement(
                          "div",
                          { className: "SignTransaction__inner-transaction" },
                          r.a.createElement(Ys, {
                            flaggedKeys: _,
                            isMemoRequired: J,
                            transaction: f,
                          })
                        )
                      : r.a.createElement(Ys, {
                          flaggedKeys: _,
                          isMemoRequired: J,
                          transaction: h,
                        }),
                    r.a.createElement(zs, null, e("Transaction Info")),
                    r.a.createElement(Js, {
                      _fee: w,
                      _sequence: O,
                      isFeeBump: A,
                      isMemoRequired: J,
                    })
                  ),
                  r.a.createElement(
                    Ur,
                    null,
                    r.a.createElement(
                      Wa,
                      {
                        fullWidth: !0,
                        variant: Wa.variant.tertiary,
                        onClick: () => (a(Br()), void window.close()),
                      },
                      e("Reject")
                    ),
                    r.a.createElement(
                      Wa,
                      {
                        disabled: ce,
                        fullWidth: !0,
                        isLoading: j,
                        onClick: () =>
                          (async () => {
                            I(!0), ae ? await z() : H(!0), I(!1);
                          })(),
                      },
                      e("Approve")
                    )
                  ),
                  r.a.createElement(
                    Kn,
                    { isModalOpen: D, setIsModalOpen: R },
                    r.a.createElement(
                      "div",
                      { className: "SignTransaction__modal" },
                      r.a.createElement(pn, {
                        allAccounts: ee,
                        publicKey: te,
                        setIsDropdownOpen: R,
                      })
                    )
                  )
                )
              )
          : r.a.createElement(
              Fr,
              null,
              r.a.createElement(
                ls,
                {
                  handleCloseClick: () => window.close(),
                  isActive: !0,
                  variant: cs.warning,
                  header: e("WEBSITE CONNECTION IS NOT SECURE"),
                },
                r.a.createElement(
                  "p",
                  null,
                  r.a.createElement(
                    Us.a,
                    { domain: E },
                    "The website ",
                    r.a.createElement("strong", null, { domain: E }),
                    " does not use an SSL certificate. For additional safety Freighter only works with websites that provide an SSL certificate."
                  )
                )
              )
            );
      },
      ac = () => {
        const { t: e } = Object(Va.a)(),
          t = Object(Ta.h)(),
          a = Object(Ta.g)(),
          n = $s()(t, "state.from.pathname", ""),
          s = $s()(t, "search", ""),
          c = n || Ka.a.account,
          o = Object(l.b)(),
          i = Object(l.c)(K);
        return r.a.createElement(
          "div",
          { className: "UnlockAccount" },
          r.a.createElement(gr, { isPopupView: !0 }),
          r.a.createElement(
            "div",
            { className: "UnlockAccount__header" },
            e("A Stellar wallet for every website")
          ),
          r.a.createElement(
            Wn.c,
            {
              onSubmit: async (e) => {
                const { password: t } = e;
                await o(N(t)), a.replace(`${c}${s}`);
              },
              initialValues: { password: "" },
            },
            ({
              dirty: t,
              isSubmitting: a,
              isValid: n,
              errors: s,
              touched: c,
            }) =>
              r.a.createElement(
                Wn.b,
                null,
                r.a.createElement(
                  "div",
                  null,
                  r.a.createElement(
                    ur,
                    null,
                    r.a.createElement(
                      Wn.a,
                      { name: "password" },
                      ({ field: t }) =>
                        r.a.createElement(
                          Sa.Input,
                          Object.assign(
                            {
                              autoComplete: "off",
                              id: "password-input",
                              placeholder: e("Enter Password"),
                              type: "password",
                              error:
                                i ||
                                (s.password && c.password ? s.password : ""),
                            },
                            t
                          )
                        )
                    )
                  ),
                  r.a.createElement(
                    dr,
                    null,
                    r.a.createElement(
                      Wa,
                      {
                        fullWidth: !0,
                        type: "submit",
                        isLoading: a,
                        disabled: !(t && n),
                      },
                      e("LOG IN")
                    )
                  )
                )
              )
          ),
          r.a.createElement(
            "div",
            { className: "UnlockAccount__import-account" },
            r.a.createElement("div", null, e("Want to add another account?")),
            r.a.createElement(
              "div",
              null,
              r.a.createElement(
                Sa.TextLink,
                {
                  variant: Sa.TextLink.variant.secondary,
                  onClick: () => {
                    xa(Object(Ia.f)(Ka.a.recoverAccount));
                  },
                },
                e("Import using account seed phrase")
              )
            )
          )
        );
      },
      nc = () => {
        const { t: e } = Object(Va.a)();
        return r.a.createElement(
          r.a.Fragment,
          null,
          r.a.createElement(Er, null),
          r.a.createElement(gr, null),
          r.a.createElement(
            "div",
            { className: "Welcome__column" },
            r.a.createElement(
              "div",
              { className: "Welcome__centered-screen" },
              r.a.createElement(
                "div",
                { className: "Welcome__heading--large" },
                e("Welcome! Is this your first time using Freighter?")
              )
            ),
            r.a.createElement(
              "div",
              { className: "Welcome__row-screen" },
              r.a.createElement(
                "div",
                { className: "Welcome__half-screen" },
                r.a.createElement(
                  Sa.Card,
                  { variant: Sa.Card.variant.highlight },
                  r.a.createElement(
                    "div",
                    { className: "Welcome__heading--small" },
                    e("I’m new!")
                  ),
                  r.a.createElement(
                    "div",
                    { className: "Welcome__text" },
                    e("I’m going to need a seed phrase")
                  ),
                  r.a.createElement(
                    "div",
                    { className: "Welcome__button-container" },
                    r.a.createElement(
                      Wa,
                      { fullWidth: !0, onClick: () => La(Ka.a.accountCreator) },
                      e("CREATE WALLET")
                    )
                  )
                )
              ),
              r.a.createElement(
                "div",
                { className: "Welcome__half-screen Welcome__import" },
                r.a.createElement(
                  Sa.Card,
                  null,
                  r.a.createElement(
                    "div",
                    { className: "Welcome__heading--small" },
                    e("I’ve done this before")
                  ),
                  r.a.createElement(
                    "div",
                    { className: "Welcome__text" },
                    e("I have my 12 word seed phrase")
                  ),
                  r.a.createElement(
                    "div",
                    { className: "Welcome__button-container" },
                    r.a.createElement(
                      Wa,
                      {
                        fullWidth: !0,
                        variant: Wa.variant.tertiary,
                        onClick: () => La(Ka.a.recoverAccount),
                      },
                      e("IMPORT WALLET")
                    )
                  )
                )
              )
            )
          )
        );
      },
      rc = () => {
        const { t: e } = Object(Va.a)(),
          [t, a] = Object(n.useState)(""),
          [s, c] = Object(n.useState)(!1),
          l = ws();
        Object(n.useEffect)(() => {
          Object(o.a)(s ? we : he);
        }, [s]);
        return r.a.createElement(
          "div",
          { className: "DisplayBackupPhrase" },
          r.a.createElement(Ln, { title: e("Show recovery phrase") }),
          s
            ? r.a.createElement(
                r.a.Fragment,
                null,
                r.a.createElement(
                  "div",
                  null,
                  r.a.createElement(
                    "p",
                    null,
                    e(
                      "Anyone who has access to this phrase has access to your account and to the funds in it, so save it in a safe and secure place."
                    )
                  ),
                  r.a.createElement(Os, { mnemonicPhrase: l, isPopupView: !0 })
                ),
                r.a.createElement(
                  "div",
                  { className: "DisplayBackupPhrase__button" },
                  r.a.createElement(
                    Wa,
                    { fullWidth: !0, onClick: () => La(Ka.a.account) },
                    e("Done")
                  )
                )
              )
            : r.a.createElement(
                r.a.Fragment,
                null,
                r.a.createElement(ms, null),
                r.a.createElement(
                  Wn.c,
                  {
                    onSubmit: async (e) => {
                      const { password: t } = e,
                        n = await Object(E.G)(t);
                      n.error
                        ? (a(n.error), Object(o.a)(Tt, { error_type: n.error }))
                        : (c(!0), a(""), Object(o.a)(Ct));
                    },
                    initialValues: { password: "" },
                  },
                  ({ dirty: a, isSubmitting: n, isValid: s }) =>
                    r.a.createElement(
                      Wn.b,
                      { className: "DisplayBackupPhrase__form" },
                      r.a.createElement(Sa.Input, {
                        id: "password",
                        autoComplete: "off",
                        error: t,
                        customInput: r.a.createElement(Wn.a, null),
                        type: "password",
                        name: "password",
                        placeholder: e("Enter your password"),
                      }),
                      r.a.createElement(
                        Wa,
                        {
                          disabled: !(s && a),
                          fullWidth: !0,
                          isLoading: n,
                          type: "submit",
                          variant: Wa.variant.tertiary,
                        },
                        e("Show recovery phrase")
                      )
                    )
                )
              )
        );
      },
      sc = () =>
        r.a.createElement(
          "div",
          null,
          r.a.createElement("h1", null, "Debug"),
          r.a.createElement("p", null, "Use this page for development helpers"),
          r.a.createElement(
            "ul",
            null,
            r.a.createElement("li", null, "dummy entry")
          )
        );
    var cc = a(11),
      lc = a(34);
    var oc = a(18);
    const ic = "GAM7OKWGYLITNSTD6335XNCBT6S2MZRT7UWQVZJHF5BQVMNF3YIKJTWY",
      uc =
        "AAAAAgAAAAC/Aa0zCy4X49LY6Y9QoC9Z94wG2/mz7eFcQJOH3qGY0AAAAGQAAAAAAAAAAQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAACwAAAAAAAAACAAAAAAAAAAA=",
      dc = Math.random().toString(36).substring(2),
      mc = {
        network: oc.d.TESTNET,
        networkName: "custom network " + dc,
        networkUrl: oc.f.TESTNET,
        networkPassphrase: X.a.Networks.TESTNET,
      },
      Ec = {
        native: { token: { type: "native", code: "XLM" } },
        "USDC:GBBD47IF6LWK7P7MDEVSCWR7DPUWV3NY3DTQEVFL4NAT4AQH3ZLLFLA5": {
          token: {
            type: "credit_alphanum4",
            code: "USDC",
            issuer: {
              key: "GBBD47IF6LWK7P7MDEVSCWR7DPUWV3NY3DTQEVFL4NAT4AQH3ZLLFLA5",
              code: "USDC",
            },
          },
        },
      },
      pc = () => {
        const [e, t] = Object(n.useState)(!1);
        return (
          Object(n.useEffect)(() => {
            if (!cc.a) return void console.error("used for dev only");
            (async () => {
              let e;
              if (
                (console.log("🧪 starting integration tests 🧪"),
                (e = await vc()),
                e.error)
              )
                return void console.error(
                  "extension must be built in experimental mode to run integration tests"
                );
              (e = await Object(E.e)(oc.e.TESTNET)),
                bc("changeNetwork", () => {
                  _c(e, oc.h);
                }),
                (e = await Object(E.h)("test")),
                bc("createAccount", () => {
                  gc(e.allAccounts), fc(e.publicKey);
                }),
                await Object(E.j)(ic),
                bc("fundAccount", () => {}),
                (e = await Object(E.a)("test")),
                bc("addAccount", () => {
                  gc(e.allAccounts), fc(e.publicKey), wc(e.hasPrivateKey);
                }),
                (e = await Object(E.v)(
                  "test",
                  "SC3JPZM3IULPEWMXYCMUI5DHQQRE4TVC75BMNKZZZSSYWXVLJUMPINWG"
                )),
                bc("importAccount", () => {
                  gc(e.allAccounts), fc(e.publicKey), wc(e.hasPrivateKey);
                }),
                (e = await Object(E.w)(ic, b.a.LEDGER, "44'/148'/1'")),
                bc("importHardwareWallet", () => {
                  gc(e.allAccounts),
                    fc(e.publicKey),
                    fc(e.bipPath),
                    wc(e.hasPrivateKey);
                }),
                (e = await Object(E.A)(ic)),
                bc("makeAccountActive", () => {
                  fc(e.publicKey), fc(e.bipPath), wc(e.hasPrivateKey);
                }),
                (e = await Object(E.N)("new-name")),
                bc("updateAccountName", () => {
                  gc(e.allAccounts);
                }),
                (e = await Object(E.x)()),
                bc("loadAccount", () => {
                  gc(e.allAccounts),
                    fc(e.publicKey),
                    fc(e.bipPath),
                    wc(e.hasPrivateKey),
                    fc(e.applicationState);
                }),
                (e = await Object(E.q)()),
                bc("getMnemonicPhrase", () => {
                  fc(e.mnemonicPhrase);
                });
              const a = e.mnemonicPhrase;
              (e = await Object(E.f)(a)),
                bc("confirmMnemonicPhrase", () => {
                  fc(e.applicationState),
                    wc(e.isCorrectPhrase),
                    _c(e.isCorrectPhrase, !0);
                }),
                await vc(),
                bc("resetDevData", () => {}),
                (e = await Object(E.B)("test", a)),
                bc("recoverAccount", () => {
                  gc(e.allAccounts),
                    fc(e.publicKey),
                    wc(e.hasPrivateKey),
                    _c(e.error, "");
                }),
                (e = await Object(E.g)("test")),
                bc("confirmPassword", () => {
                  gc(e.allAccounts),
                    fc(e.publicKey),
                    fc(e.bipPath, !0),
                    wc(e.hasPrivateKey),
                    fc(e.applicationState);
                }),
                (e = await Object(E.k)({
                  publicKey: ic,
                  networkDetails: oc.h,
                })),
                bc("getAccountBalances", () => {
                  _c(Object.keys(e.balances).length > 0, !0),
                    wc(e.isFunded),
                    hc(e.subentryCount);
                }),
                (e = await Object(E.l)({
                  publicKey: ic,
                  networkDetails: oc.h,
                })),
                bc("getAccountHistory", () => {
                  gc(e.operations);
                }),
                (e = await Object(E.n)({ balances: Ec, networkDetails: oc.h })),
                bc("getAssetIcons", () => {
                  _c(Object.keys(e).length > 0, !0);
                }),
                (e = await Object(E.E)({
                  key:
                    "GBBD47IF6LWK7P7MDEVSCWR7DPUWV3NY3DTQEVFL4NAT4AQH3ZLLFLA5",
                  code: "USDC",
                  assetIcons: {},
                  networkDetails: oc.h,
                })),
                bc("retryAssetIcon", () => {
                  _c(Object.keys(e).length > 0, !0);
                }),
                (e = await Object(E.m)({ balances: Ec, networkDetails: oc.h })),
                bc("getAssetDomains", () => {
                  _c(Object.keys(e).length > 0, !0);
                }),
                await Object(E.C)(),
                bc("rejectAccess", () => {}),
                await Object(E.t)("https://laboratory.stellar.org"),
                bc("grantAccess", () => {}),
                await Object(E.u)({ signedTransaction: "" }),
                bc("handleSignedHwTransaction", () => {}),
                await Object(E.K)(),
                bc("signTransaction", () => {}),
                (e = await Object(E.I)({
                  transactionXDR: uc,
                  network: oc.h.networkPassphrase,
                })),
                bc("signFreighterTransaction", () => {
                  fc(e.signedTransaction);
                }),
                (e = await Object(E.c)({ publicKey: ic })),
                bc("addRecentAddress", () => {
                  gc(e.recentAddresses);
                }),
                (e = await Object(E.y)()),
                bc("loadRecentAddresses", () => {
                  gc(e.recentAddresses);
                }),
                (e = await Object(E.J)()),
                bc("signOut", () => {
                  fc(e.publicKey, !0), fc(e.applicationState);
                }),
                (e = await Object(E.F)({
                  isDataSharingAllowed: !0,
                  isMemoValidationEnabled: !0,
                  isSafetyValidationEnabled: !0,
                  isValidatingSafeAssetsEnabled: !0,
                  isExperimentalModeEnabled: !0,
                })),
                bc("saveSettings", () => {
                  _c(e.networkDetails, oc.b),
                    gc(e.networksList),
                    _c(e.error, void 0),
                    _c(e.isDataSharingAllowed, !0),
                    _c(e.isMemoValidationEnabled, !0),
                    _c(e.isSafetyValidationEnabled, !0),
                    _c(e.isValidatingSafeAssetsEnabled, !0),
                    _c(e.isExperimentalModeEnabled, !0);
                }),
                (e = await Object(E.z)()),
                bc("loadSettings", () => {
                  _c(e.networkDetails, oc.b),
                    gc(e.networksList),
                    _c(e.error, void 0),
                    _c(e.isDataSharingAllowed, !0),
                    _c(e.isMemoValidationEnabled, !0),
                    _c(e.isSafetyValidationEnabled, !0),
                    _c(e.isValidatingSafeAssetsEnabled, !0),
                    _c(e.isExperimentalModeEnabled, !0);
                }),
                (e = await Object(E.G)("test")),
                bc("showBackupPhrase", () => {
                  _c(e.error, void 0);
                }),
                (e = await Object(E.b)(mc));
              const n = e.networksList.length;
              bc("addCustomNetwork", () => {
                gc(e.networksList),
                  _c(e.networksList[n - 1].networkName, mc.networkName);
              }),
                (e = await Object(E.i)({
                  networkDetails: { ...mc, networkName: "new network " + dc },
                  networkIndex: n - 1,
                })),
                bc("editCustomNetwork", () => {
                  gc(e.networksList),
                    _c(e.networksList[n - 1].networkName, "new network " + dc);
                }),
                (e = await Object(E.D)(mc.networkName)),
                bc("removeCustomNetwork", () => {
                  gc(e.networksList), _c(e.networksList.length, n - 1);
                }),
                (e = await Object(E.p)()),
                bc("getBlockedDomains", () => {
                  _c(Object.keys(e.blockedDomains).length > 0, !0);
                }),
                await Object(E.e)(oc.e.PUBNET),
                (e = await (async () => {
                  let e = { publicKey: "", error: "" };
                  try {
                    e = await Object(lc.b)({ type: cc.d.REQUEST_ACCESS });
                  } catch (e) {
                    console.error(e);
                  }
                  const { publicKey: t, error: a } = e;
                  if (a) throw a;
                  return t;
                })()),
                bc("requestPublicKey", () => {
                  fc(e);
                }),
                (e = await (async (e, t, a) => {
                  let n = "",
                    r = "",
                    s = "";
                  "object" == typeof t
                    ? ((n = t.network || ""),
                      (r = t.accountToSign || ""),
                      (s = t.networkPassphrase || ""))
                    : ((n = t || ""), (r = a || ""));
                  let c = { signedTransaction: "", error: "" };
                  try {
                    c = await Object(lc.b)({
                      transactionXdr: e,
                      network: n,
                      networkPassphrase: s,
                      accountToSign: r,
                      type: cc.d.SUBMIT_TRANSACTION,
                    });
                  } catch (e) {
                    console.error(e);
                  }
                  const { signedTransaction: l, error: o } = c;
                  if (o) throw o;
                  return l;
                })(uc)),
                bc("submitTransaction", () => {
                  fc(e);
                }),
                (e = await (async () => {
                  let e = { network: "", error: "" };
                  try {
                    e = await Object(lc.b)({ type: cc.d.REQUEST_NETWORK });
                  } catch (e) {
                    console.error(e);
                  }
                  const { network: t, error: a } = e;
                  if (a) throw a;
                  return t;
                })()),
                bc("requestNetwork", () => {
                  fc(e);
                }),
                (e = await (async () => {
                  let e = {
                    networkDetails: {
                      network: "",
                      networkName: "",
                      networkUrl: "",
                      networkPassphrase: "",
                    },
                    error: "",
                  };
                  try {
                    e = await Object(lc.b)({
                      type: cc.d.REQUEST_NETWORK_DETAILS,
                    });
                  } catch (e) {
                    console.error(e);
                  }
                  const { networkDetails: t, error: a } = e,
                    { network: n, networkUrl: r, networkPassphrase: s } = t;
                  if (a) throw a;
                  return { network: n, networkUrl: r, networkPassphrase: s };
                })()),
                bc("requestNetworkDetails", () => {
                  fc(e.network), fc(e.networkPassphrase), fc(e.networkUrl);
                }),
                console.log("👍 Done 👍"),
                t(!0);
            })();
          }, []),
          r.a.createElement(
            "div",
            null,
            r.a.createElement("div", null, "Running integration tests ..."),
            r.a.createElement("div", null, e ? "Done" : "")
          )
        );
      },
      bc = (e, t = () => {}) => {
        try {
          t(), console.log(e + " ✅");
        } catch (e) {
          console.error(e);
        }
      },
      _c = (e, t) => {
        const a = JSON.stringify(e),
          n = JSON.stringify(t);
        if (a !== n) throw new Error(`[${a}]: incorrect value. Want ${n}`);
      },
      hc = (e) => {
        Number.isNaN(e) &&
          console.error(
            `[${e}]: incorrect type. Want Number but found ${typeof e}`
          );
      },
      wc = (e) => {
        "boolean" != typeof e &&
          console.error(
            `[${e}]: incorrect type. Want Boolean but found ${typeof e}`
          );
      },
      fc = (e, t = !1) => {
        "string" == typeof e || e instanceof String
          ? t || 0 !== e.length || console.error(`[${e}]: found empty`)
          : console.error(
              `[${e}]: incorrect type. Want String but found ${typeof e}`
            );
      },
      gc = (e, t = !1) => {
        Array.isArray(e)
          ? t || 0 !== e.length || console.error(`[${e}]: found empty`)
          : console.error(
              `[${e}]: incorrect type. Want Array but found ${typeof e}`
            );
      },
      vc = () => Object(lc.a)({ type: cc.e.RESET_EXP_DATA });
    var yc = a(1249),
      Oc = a.n(yc);
    const Ac = () => {
        const { t: e } = Object(Va.a)(),
          t = Object(l.c)(B),
          a = Object(l.c)(F),
          [s, c] = Object(n.useState)(!1),
          u = Object(l.c)(G.l),
          d = () => {
            const { submitForm: e } = Object(Wn.e)();
            return s
              ? r.a.createElement(
                  "button",
                  { onClick: () => e() },
                  r.a.createElement(Sa.Icon.Check, null)
                )
              : r.a.createElement(
                  "button",
                  { onClick: () => c(!0) },
                  r.a.createElement(Sa.Icon.Edit, null)
                );
          },
          m = Object(l.b)(),
          E = { accountName: a };
        return r.a.createElement(
          r.a.Fragment,
          null,
          r.a.createElement(
            "div",
            { className: "ViewPublicKey" },
            r.a.createElement(
              "div",
              { className: "ViewPublicKey__content" },
              r.a.createElement(
                Wn.c,
                {
                  initialValues: E,
                  onSubmit: async (e) => {
                    const { accountName: t } = e;
                    a !== t && (await m(O(t)), Object(o.a)(kt)), c(!1);
                  },
                  validationSchema: Object(cr.c)().shape({
                    accountName: Object(cr.e)().max(
                      24,
                      e("max of 24 characters allowed")
                    ),
                  }),
                },
                ({ errors: e }) =>
                  r.a.createElement(
                    "div",
                    {
                      className:
                        "ViewPublicKey__header " +
                        (s ? "ViewPublicKey__header--is-editing" : ""),
                    },
                    r.a.createElement(Mn, null),
                    s
                      ? r.a.createElement(
                          r.a.Fragment,
                          null,
                          r.a.createElement(
                            Wn.b,
                            { className: "ViewPublicKey__form" },
                            r.a.createElement(
                              Wn.a,
                              { name: "accountName" },
                              ({ field: t }) =>
                                r.a.createElement(
                                  Sa.Input,
                                  Object.assign(
                                    {
                                      autoComplete: "off",
                                      id: "accountName",
                                      placeholder: a,
                                    },
                                    t,
                                    { error: e.accountName }
                                  )
                                )
                            )
                          )
                        )
                      : r.a.createElement(
                          r.a.Fragment,
                          null,
                          r.a.createElement(
                            "div",
                            {
                              className: "ViewPublicKey__account-name-display",
                            },
                            a
                          )
                        ),
                    r.a.createElement(
                      "div",
                      { className: "ViewPublicKey--account-name-div" },
                      r.a.createElement(d, null)
                    )
                  )
              ),
              r.a.createElement(
                "div",
                { className: "ViewPublicKey__qr-code" },
                r.a.createElement(Oc.a, {
                  value: t,
                  style: { width: "10rem", height: "10rem" },
                })
              ),
              r.a.createElement(
                "div",
                { className: "ViewPublicKey__address-copy-label" },
                e("Wallet Address")
              ),
              r.a.createElement(
                "div",
                { className: "ViewPublicKey__address-copy" },
                Object(i.s)(t)
              ),
              r.a.createElement(
                "div",
                { className: "ViewPublicKey__copy-btn" },
                r.a.createElement(
                  Sa.CopyText,
                  { textToCopy: t, doneLabel: "ADDRESS COPIED" },
                  r.a.createElement(Sn, null, e("COPY"))
                )
              )
            ),
            r.a.createElement(
              "div",
              { className: "ViewPublicKey__external-link" },
              Object(i.h)(u)
                ? null
                : r.a.createElement(
                    Wa,
                    {
                      fullWidth: !0,
                      variant: Wa.variant.tertiary,
                      onClick: () => {
                        xa(
                          `https://stellar.expert/explorer/${u.network.toLowerCase()}/account/${t}`
                        ),
                          Object(o.a)(jt);
                      },
                    },
                    e("View on"),
                    " stellar.expert"
                  )
            )
          )
        );
      },
      Sc = ({ children: e, href: t, searchParams: a = "" }) => {
        const n = `${t}${a}`;
        return r.a.createElement(
          "div",
          { className: "ListNavLink" },
          Object.values(Ka.a).includes(t)
            ? r.a.createElement(
                ka.b,
                { to: n },
                e,
                " ",
                r.a.createElement(Sa.Icon.ChevronRight, {
                  className: "ListNavLink__icon",
                })
              )
            : r.a.createElement(
                "a",
                { rel: "noreferrer", target: "_blank", href: n },
                e,
                " ",
                r.a.createElement(Sa.Icon.ChevronRight, {
                  className: "ListNavLink__icon",
                })
              )
        );
      },
      Nc = ({ children: e }) =>
        r.a.createElement("div", { className: "ListNavLink__wrapper" }, e);
    var Cc = a(578);
    const Tc = () => {
      const { t: e } = Object(Va.a)(),
        t = Object(l.b)();
      return r.a.createElement(
        r.a.Fragment,
        null,
        r.a.createElement(
          "nav",
          { className: "Settings" },
          r.a.createElement(
            "div",
            null,
            r.a.createElement(
              "div",
              { className: "Settings__header" },
              r.a.createElement(Sa.Heading5, null, "Settings"),
              r.a.createElement("div", { className: "Settings__version" }, Cc.a)
            ),
            r.a.createElement(
              Nc,
              null,
              r.a.createElement(
                Sc,
                { href: Ka.a.networkSettings },
                e("Network Settings")
              ),
              r.a.createElement(
                Sc,
                { href: Ka.a.preferences },
                e("Preferences")
              ),
              r.a.createElement(Sc, { href: Ka.a.security }, e("Security")),
              r.a.createElement(
                Sc,
                { href: "http://freighter.app/help" },
                e("Help")
              ),
              r.a.createElement(
                Sc,
                { href: "https://stellarform.typeform.com/to/r4FiNpX1" },
                e("Leave Feedback")
              ),
              r.a.createElement(Sc, { href: Ka.a.about }, e("About"))
            )
          ),
          r.a.createElement(
            "div",
            { className: "Settings__logout" },
            r.a.createElement(
              Wa,
              {
                fullWidth: !0,
                variant: Wa.variant.tertiary,
                onClick: (e) =>
                  (async (e) => {
                    e.preventDefault(), await t(k()), La(Ka.a.welcome);
                  })(e),
              },
              e("Log Out")
            )
          )
        ),
        r.a.createElement(tr, null)
      );
    };
    var kc = a(123),
      jc = a.n(kc);
    const Ic = ({ debounceMs: e = 500 }) => {
        const t = Object(Wn.e)(),
          [a, s] = Object(n.useState)(!1),
          c = Object(n.useCallback)(
            jc()(async (e) => {
              try {
                await e.submitForm();
              } catch (e) {
                console.error(e), s(!0);
              }
            }, e),
            [t.submitForm, e]
          );
        return (
          Object(n.useEffect)(() => {
            t.isValid && t.dirty && !t.isSubmitting && c(t);
          }, [c, t, t.values, t.dirty, t.isSubmitting, t.isValid]),
          Object(n.useEffect)(() => {
            a &&
              setTimeout(() => {
                s(!1);
              }, 750);
          }, [a]),
          r.a.createElement(
            "div",
            {
              className:
                "AutoSave--status " + (a ? "AutoSave--status--failed" : ""),
            },
            r.a.createElement(
              Sa.StatusBar,
              { variant: Sa.StatusBar.variant.error },
              "Save failed!"
            )
          )
        );
      },
      Dc = () => {
        const { t: e } = Object(Va.a)(),
          t = Object(l.b)(),
          {
            isDataSharingAllowed: a,
            isMemoValidationEnabled: n,
            isSafetyValidationEnabled: s,
            isValidatingSafeAssetsEnabled: c,
            isExperimentalModeEnabled: o,
          } = Object(l.c)(G.n),
          i = {
            isValidatingMemoValue: n,
            isValidatingSafetyValue: s,
            isDataSharingAllowedValue: a,
            isValidatingSafeAssetsValue: c,
            isExperimentalModeEnabledValue: o,
          };
        return r.a.createElement(
          "div",
          { className: "Preferences" },
          r.a.createElement(Ln, { title: e("Preferences") }),
          r.a.createElement(
            Ha.a,
            { className: "Preferences__simplebar" },
            r.a.createElement(
              Wn.c,
              {
                initialValues: i,
                onSubmit: async (e) => {
                  const {
                    isValidatingMemoValue: a,
                    isValidatingSafetyValue: n,
                    isDataSharingAllowedValue: r,
                    isValidatingSafeAssetsValue: s,
                    isExperimentalModeEnabledValue: c,
                  } = e;
                  await t(
                    Object(G.h)({
                      isMemoValidationEnabled: a,
                      isSafetyValidationEnabled: n,
                      isDataSharingAllowed: r,
                      isValidatingSafeAssetsEnabled: s,
                      isExperimentalModeEnabled: c,
                    })
                  );
                },
                enableReinitialize: !0,
              },
              r.a.createElement(
                Wn.b,
                null,
                r.a.createElement(Ic, null),
                r.a.createElement(
                  "div",
                  { className: "Preferences--section" },
                  r.a.createElement(
                    "div",
                    { className: "Preferences--section--title" },
                    e("Verification with"),
                    " stellar.expert"
                  ),
                  r.a.createElement(
                    "div",
                    { className: "Preferences--toggle" },
                    r.a.createElement(
                      "label",
                      {
                        htmlFor: "isValidatingMemoValue",
                        className: "Preferences--label",
                      },
                      e("Validate addresses that require a memo")
                    ),
                    r.a.createElement(Sa.Toggle, {
                      checked: i.isValidatingMemoValue,
                      customInput: r.a.createElement(Wn.a, null),
                      id: "isValidatingMemoValue",
                    })
                  ),
                  r.a.createElement(
                    "div",
                    { className: "Preferences--toggle" },
                    r.a.createElement(
                      "label",
                      {
                        htmlFor: "isValidatingSafetyValue",
                        className: "Preferences--label",
                      },
                      e("Block malicious or unsafe addresses and domains")
                    ),
                    r.a.createElement(Sa.Toggle, {
                      checked: i.isValidatingSafetyValue,
                      customInput: r.a.createElement(Wn.a, null),
                      id: "isValidatingSafetyValue",
                    })
                  ),
                  r.a.createElement(
                    "div",
                    { className: "Preferences--toggle" },
                    r.a.createElement(
                      "label",
                      {
                        htmlFor: "isValidatingSafeAssetsValue",
                        className: "Preferences--label",
                      },
                      e("Block trustlines to malicious or fraudulent assets")
                    ),
                    r.a.createElement(Sa.Toggle, {
                      checked: i.isValidatingSafeAssetsValue,
                      customInput: r.a.createElement(Wn.a, null),
                      id: "isValidatingSafeAssetsValue",
                    })
                  )
                ),
                r.a.createElement(
                  "div",
                  { className: "Preferences--section" },
                  r.a.createElement(
                    "div",
                    { className: "Preferences--section--title" },
                    e("Anonymous data sharing"),
                    " "
                  ),
                  r.a.createElement(
                    "div",
                    { className: "Preferences--toggle" },
                    r.a.createElement(
                      "label",
                      {
                        htmlFor: "isDataSharingAllowedValue",
                        className: "Preferences--label",
                      },
                      e(
                        "Allow Freighter to collect anonymous information about usage. Freighter will never collect your personal information such as IP address, keys, balance or transaction amounts."
                      )
                    ),
                    r.a.createElement(Sa.Toggle, {
                      checked: i.isDataSharingAllowedValue,
                      customInput: r.a.createElement(Wn.a, null),
                      id: "isDataSharingAllowedValue",
                    })
                  )
                ),
                r.a.createElement(
                  "div",
                  { className: "Preferences--section" },
                  r.a.createElement(
                    "div",
                    { className: "Preferences--section--title" },
                    e("Enable experimental mode"),
                    " "
                  ),
                  r.a.createElement(
                    "div",
                    { className: "Preferences--toggle" },
                    r.a.createElement(
                      "label",
                      {
                        htmlFor: "isExperimentalModeEnabledValue",
                        className: "Preferences--label",
                      },
                      e(
                        "Freighter will use experimental API‘s and connect to the Futurenet, a test network. Please proceed at your own risk as you may be interacting with schemas that are untested and still changing."
                      )
                    ),
                    r.a.createElement(Sa.Toggle, {
                      checked: i.isExperimentalModeEnabledValue,
                      customInput: r.a.createElement(Wn.a, null),
                      id: "isExperimentalModeEnabledValue",
                    })
                  )
                )
              )
            )
          )
        );
      },
      Rc = () => {
        const { t: e } = Object(Va.a)();
        return r.a.createElement(
          "div",
          { className: "Security" },
          r.a.createElement(Ln, { title: "Security" }),
          r.a.createElement(
            Nc,
            null,
            r.a.createElement(
              Sc,
              { href: Ka.a.displayBackupPhrase },
              e("Show recovery phrase")
            )
          )
        );
      },
      Pc = ({ children: e, url: t }) =>
        r.a.createElement(
          "div",
          { className: "About__link" },
          r.a.createElement(Sa.Icon.Link2, null),
          r.a.createElement(
            "a",
            { target: "_blank", rel: "noreferrer", href: "https://" + t },
            e || t
          )
        ),
      Mc = () => {
        const { t: e } = Object(Va.a)();
        return r.a.createElement(
          "div",
          { className: "About" },
          r.a.createElement(Ln, { title: "About" }),
          r.a.createElement(
            "div",
            null,
            r.a.createElement("img", { alt: "Freighter logo", src: fr.a })
          ),
          r.a.createElement(
            "div",
            { className: "About__body" },
            r.a.createElement(
              "div",
              { className: "About__info" },
              e(
                "Freighter is a non-custodial wallet extension that enables you to sign Stellar transactions via your browser. It’s a safer alternative to copying and pasting private keys for use with web apps."
              )
            ),
            r.a.createElement(
              "div",
              { className: "About__links-header" },
              e("LINKS")
            ),
            r.a.createElement(Pc, { url: "freighter.app" }),
            r.a.createElement(Pc, { url: "stellar.org" }),
            r.a.createElement(
              Pc,
              { url: "stellar.org/privacy-policy" },
              e("Privacy Policy")
            ),
            r.a.createElement(
              Pc,
              { url: "stellar.org/terms-of-service" },
              e("Terms of Service")
            )
          ),
          r.a.createElement(
            "div",
            { className: "About__copyright" },
            "© 2022 Stellar Development Foundation"
          )
        );
      },
      Lc = new Dt.a(1),
      xc = () => {
        const { t: e } = Object(Va.a)();
        return r.a.createElement(
          "div",
          { className: "SendTo__info-block" },
          r.a.createElement(
            Un,
            { className: "SendTo__info-block" },
            r.a.createElement(
              "div",
              null,
              e(
                "The destination account doesn’t exist. Send at least 1 XLM to create account."
              ),
              " ",
              r.a.createElement(
                Sa.TextLink,
                {
                  variant: Sa.TextLink.variant.secondary,
                  href:
                    "https://developers.stellar.org/docs/tutorials/create-account/#create-account",
                  rel: "noreferrer",
                  target: "_blank",
                },
                e("Learn more about account creation")
              )
            )
          )
        );
      },
      Kc = () => {
        const { t: e } = Object(Va.a)();
        return r.a.createElement(
          "div",
          { className: "SendTo__info-block" },
          r.a.createElement(
            Un,
            { variant: Un.variant.warning },
            r.a.createElement(
              "div",
              null,
              r.a.createElement("strong", null, e("INVALID STELLAR ADDRESS")),
              r.a.createElement(
                "p",
                null,
                e("Addresses are uppercase and begin with letters “G“ or “M“.")
              )
            )
          )
        );
      },
      Bc = ({ previous: e }) => {
        const { t: t } = Object(Va.a)(),
          a = Object(l.b)(),
          { destination: s, federationAddress: c } = Object(l.c)(Oa),
          u = Object(l.c)(G.l),
          { destinationBalances: d } = Object(l.c)(ya),
          [m, E] = Object(n.useState)([]),
          [p, b] = Object(n.useState)(""),
          [_, h] = Object(n.useState)(""),
          [w, f] = Object(n.useState)(!1),
          g = (e, t) => {
            a(la(e)), a(oa(t || "")), La(Ka.a.sendPaymentAmount);
          },
          v = Object(Wn.d)({
            initialValues: { destination: c || s },
            onSubmit: () => {
              g(p, _);
            },
            validateOnChange: !1,
            validate: (e) =>
              y(e.destination) ? {} : { destination: t("invalid public key") },
          }),
          y = (e) =>
            !!$.StrKey.isValidMed25519PublicKey(e) ||
            !!Object(i.i)(e) ||
            !!$.StrKey.isValidEd25519PublicKey(e),
          O = Object(n.useCallback)(
            jc()(async (e) => {
              const a = await v.validateForm();
              if (0 === Object.keys(a).length) {
                if (Object(i.l)(e)) b(e);
                else if (Object(i.i)(e))
                  try {
                    const t = await $.FederationServer.resolve(e);
                    b(t.account_id), h(e);
                  } catch (e) {
                    v.setErrors({
                      destination: t("invalid federation address"),
                    });
                  }
                else b(e);
                f(!1);
              } else f(!1);
            }, 2e3),
            []
          );
        return (
          Object(n.useEffect)(() => {
            (async () => {
              const e = await a($t());
              $t.fulfilled.match(e) && E(e.payload.recentAddresses);
            })();
          }, [a]),
          Object(n.useEffect)(() => {
            "" !== v.values.destination && f(!0),
              b(""),
              h(""),
              O(v.values.destination);
          }, [O, v.values.destination]),
          Object(n.useEffect)(() => {
            if (!p) return;
            let e = p;
            if (Object(i.l)(p)) {
              e = $.MuxedAccount.fromAddress(p, "0").baseAccount().accountId();
            }
            a(qt({ publicKey: e, networkDetails: u }));
          }, [a, p, u]),
          r.a.createElement(
            Or,
            null,
            r.a.createElement(Ln, {
              title: "Send To",
              customBackAction: () => La(e),
            }),
            r.a.createElement(
              ur,
              null,
              r.a.createElement(Sa.Input, {
                autoComplete: "off",
                id: "destination-input",
                name: "destination",
                placeholder: t("Recipient Stellar address"),
                onChange: v.handleChange,
                value: v.values.destination,
                "data-testid": "send-to-input",
              })
            ),
            r.a.createElement(
              "div",
              {
                className: "SendTo__address-wrapper",
                "data-testid": "send-to-view",
              },
              w
                ? r.a.createElement(
                    "div",
                    { className: "SendTo__loader" },
                    r.a.createElement(Sa.Loader, null)
                  )
                : r.a.createElement(
                    "div",
                    null,
                    "" === v.values.destination
                      ? r.a.createElement(
                          r.a.Fragment,
                          null,
                          m.length > 0 &&
                            r.a.createElement(
                              "div",
                              { className: "SendTo__subheading" },
                              t("RECENT")
                            ),
                          r.a.createElement(
                            Ha.a,
                            { className: "SendTo__simplebar" },
                            r.a.createElement(
                              "ul",
                              { className: "SendTo__recent-accts-ul" },
                              m.map((e) =>
                                r.a.createElement(
                                  "li",
                                  { key: e },
                                  r.a.createElement(
                                    "button",
                                    {
                                      onClick: async () => {
                                        if (
                                          (Object(o.a)(De),
                                          f(!0),
                                          Object(i.i)(e))
                                        ) {
                                          const t = (
                                            await $.FederationServer.resolve(e)
                                          ).account_id;
                                          b(t), g(t, e);
                                        } else b(e), g(e);
                                      },
                                      className: "SendTo__subheading-identicon",
                                    },
                                    r.a.createElement(un.a, { publicKey: e }),
                                    r.a.createElement(
                                      "span",
                                      null,
                                      Object(i.i)(e) ? e : Object(i.s)(e)
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      : r.a.createElement(
                          "div",
                          null,
                          v.isValid
                            ? r.a.createElement(
                                r.a.Fragment,
                                null,
                                !d.isFunded && r.a.createElement(xc, null),
                                Object(i.i)(v.values.destination) &&
                                  r.a.createElement(
                                    r.a.Fragment,
                                    null,
                                    r.a.createElement(
                                      "div",
                                      { className: "SendTo__subheading" },
                                      t("FEDERATION ADDRESS")
                                    ),
                                    r.a.createElement(
                                      "div",
                                      { className: "SendTo__subsection-copy" },
                                      v.values.destination
                                    )
                                  ),
                                r.a.createElement(
                                  "div",
                                  { className: "SendTo__subheading" },
                                  "Address"
                                ),
                                r.a.createElement(
                                  "div",
                                  { className: "SendTo__subheading-identicon" },
                                  r.a.createElement(un.a, { publicKey: p }),
                                  r.a.createElement(
                                    "span",
                                    null,
                                    Object(i.s)(p)
                                  )
                                ),
                                r.a.createElement(
                                  "div",
                                  { className: "SendPayment__btn-continue" },
                                  r.a.createElement(
                                    Wa,
                                    {
                                      fullWidth: !0,
                                      variant: Wa.variant.tertiary,
                                      onClick: () => v.submitForm(),
                                      "data-testid": "send-to-btn-continue",
                                    },
                                    t("Continue")
                                  )
                                )
                              )
                            : r.a.createElement(Kc, null)
                        )
                  )
            )
          )
        );
      };
    function Vc({ assetCode: e, issuerKey: t }) {
      const a = Object(l.b)(),
        { assetIcons: n } = Object(l.c)(ya),
        s = Bn(e, t);
      return r.a.createElement(
        "div",
        {
          className: "AssetSelect__wrapper",
          onClick: () => {
            a(fa(ta.REGULAR)), a(ga(!0)), La(Ka.a.manageAssets);
          },
          "data-testid": "send-amount-asset-select",
        },
        r.a.createElement(
          "div",
          { className: "AssetSelect__content" },
          r.a.createElement(
            "div",
            { className: "AssetSelect__content__left" },
            r.a.createElement(cn, { assetIcons: n, code: e, issuerKey: t }),
            r.a.createElement(
              "span",
              { className: "AssetSelect__medium-copy" },
              e
            ),
            r.a.createElement(Qa, { isScamAsset: s })
          ),
          r.a.createElement(
            "div",
            { className: "AssetSelect__content__right" },
            r.a.createElement(Sa.Icon.ChevronDown, null)
          )
        )
      );
    }
    function Fc({ source: e, assetCode: t, issuerKey: a, balance: n }) {
      const s = Object(l.b)(),
        { assetIcons: c } = Object(l.c)(ya),
        o = zr(),
        i = Bn(t, a),
        u = (e) => (e.length >= 5 ? e.slice(0, 5) + "..." : e);
      return r.a.createElement(
        "div",
        {
          onClick: () => {
            s(fa(o ? ta.SWAP : ta.PATH_PAY)), s(ga(e)), La(Ka.a.manageAssets);
          },
          className: "AssetSelect__wrapper AssetSelect__wrapper--path-pay",
        },
        r.a.createElement(
          "div",
          { className: "AssetSelect__content" },
          r.a.createElement(
            "div",
            { className: "AssetSelect__content__left" },
            r.a.createElement(
              "span",
              {
                className:
                  "AssetSelect__light-copy AssetSelect__light-copy__label",
              },
              e ? "From" : "To"
            ),
            r.a.createElement(cn, { assetIcons: c, code: t, issuerKey: a }),
            r.a.createElement(
              "span",
              { className: "AssetSelect__medium-copy" },
              u(t)
            ),
            " ",
            r.a.createElement(Qa, { isScamAsset: i }),
            r.a.createElement(Sa.Icon.ChevronDown, null)
          ),
          r.a.createElement(
            "div",
            { className: "AssetSelect__content__right" },
            r.a.createElement(
              "span",
              { className: "AssetSelect__light-copy" },
              n && "0" !== n ? n : "",
              " ",
              u(t)
            )
          )
        )
      );
    }
    var Uc;
    !(function (e) {
      (e.TOO_HIGH = "amount too high"),
        (e.DEC_MAX = "too many decimal digits"),
        (e.SEND_MAX = "amount higher than send max");
    })(Uc || (Uc = {}));
    const Hc = ({
        source: e,
        sourceAmount: t,
        dest: a,
        destAmount: n,
        loading: s,
      }) => {
        const { t: c } = Object(Va.a)();
        return r.a.createElement(
          "div",
          { className: "SendAmount__row__rate" },
          s
            ? r.a.createElement(Sa.Loader, null)
            : r.a.createElement(
                r.a.Fragment,
                null,
                n
                  ? r.a.createElement(
                      "span",
                      null,
                      "1 ",
                      e,
                      " ≈",
                      " ",
                      new It.BigNumber(n).div(new It.BigNumber(t)).toFixed(7),
                      " ",
                      a
                    )
                  : r.a.createElement("span", null, c("no path found"))
              )
        );
      },
      Wc = ({ previous: e, next: t }) => {
        const { t: a } = Object(Va.a)(),
          s = Object(l.b)(),
          c = Object(l.c)(G.l),
          u = (function () {
            const e = r.a.useRef(null);
            return (
              r.a.useLayoutEffect(() => {
                e.current && (e.current(), (e.current = null));
              }),
              (t) => ((e.current = t), null)
            );
          })(),
          {
            accountBalances: d,
            destinationBalances: m,
            transactionData: E,
            assetDomains: p,
            blockedDomains: b,
            assetIcons: _,
          } = Object(l.c)(ya),
          { tokenBalances: h } = Object(l.c)(Bt),
          {
            amount: w,
            asset: f,
            destinationAmount: g,
            destinationAsset: v,
            isToken: y,
          } = E,
          O = zr(),
          { recommendedFee: A } = Xr(),
          [S, N] = Object(n.useState)(!1),
          [C, T] = Object(n.useState)(!1),
          [k, j] = Object(n.useState)({
            domain: "",
            code: "",
            issuer: "",
            image: "",
          }),
          I = Object(n.useCallback)(
            (e) => {
              let t = new It.BigNumber("0");
              if (y) {
                const t = e.split(":")[1];
                return Object(qa.h)(h, t);
              }
              if (d.balances) {
                const a = new It.BigNumber(0.5 * (2 + d.subentryCount));
                if ("native" === e) {
                  if (
                    ((t = new It.BigNumber(d.balances[e].total.toFixed())
                      .minus(a)
                      .minus(new It.BigNumber(Number(A)))),
                    t.lt(a))
                  )
                    return "0";
                } else t = new It.BigNumber(d.balances[e].total);
              }
              return t.toFixed().toString();
            },
            [d.balances, d.subentryCount, A, y, h]
          ),
          [D, R] = Object(n.useState)(I(f)),
          P = Object(Wn.d)({
            initialValues: { amount: w, asset: f, destinationAsset: v },
            onSubmit: (e) => {
              s(ia(tn(e.amount))),
                s(ua(e.asset)),
                e.destinationAsset && s(Ea(e.destinationAsset)),
                b.domains[p[e.asset]]
                  ? (T(!0),
                    j({
                      code: Object(i.c)(e.asset).code,
                      issuer: Object(i.c)(e.asset).issuer,
                      domain: p[e.asset],
                      image: _[e.asset],
                    }))
                  : b.domains[p[e.destinationAsset]]
                  ? (T(!0),
                    j({
                      code: Object(i.c)(e.destinationAsset).code,
                      issuer: Object(i.c)(e.destinationAsset).issuer,
                      domain: p[e.destinationAsset],
                      image: _[e.destinationAsset],
                    }))
                  : La(t);
            },
            validate: (e) => {
              const t = tn(e.amount);
              return new It.BigNumber(t).gt(new It.BigNumber(D))
                ? { amount: Uc.TOO_HIGH }
                : -1 !== t.indexOf(".") && t.split(".")[1].length > 7
                ? { amount: Uc.DEC_MAX }
                : new It.BigNumber(t).gt(
                    new It.BigNumber("922337203685.4775807")
                  )
                ? { amount: Uc.SEND_MAX }
                : {};
            },
            enableReinitialize: !0,
          }),
          M = !!P.values.destinationAsset,
          L = Object(i.c)(P.values.asset),
          x = Object(i.c)(P.values.destinationAsset || "native"),
          K = Object(n.useCallback)(
            jc()(async (e, t, a) => {
              await s(
                Yt({
                  amount: e,
                  sourceAsset: t,
                  destAsset: a,
                  networkDetails: c,
                })
              ),
                N(!1);
            }, 2e3),
            []
          );
        Object(n.useEffect)(() => {
          R(I(P.values.asset));
        }, [I, P.values.asset]),
          Object(n.useEffect)(() => {
            P.values.destinationAsset &&
              0 !== Number(P.values.amount) &&
              (N(!0),
              s(ca()),
              K(
                P.values.amount || "1",
                P.values.asset,
                P.values.destinationAsset
              ));
          }, [
            K,
            c,
            P.values.asset,
            P.values.destinationAsset,
            P.values.amount,
            s,
          ]),
          Object(n.useEffect)(() => {
            if (O && !v) {
              let e;
              if (P.values.asset !== X.a.Asset.native().toString())
                e = X.a.Asset.native().toString();
              else {
                const t = Object.keys(d.balances || {}).filter(
                  (e) =>
                    e !== X.a.Asset.native().toString() &&
                    -1 === e.indexOf(Ga.a)
                );
                e = t[0] ? t[0] : X.a.Asset.native().toString();
              }
              s(Ea(e));
            }
          }, [O, s, v, d, P.values.asset]);
        return r.a.createElement(
          r.a.Fragment,
          null,
          C &&
            r.a.createElement(Es, {
              isSendWarning: !0,
              domain: k.domain,
              code: k.code,
              issuer: k.issuer,
              image: k.image,
              onClose: () => T(!1),
              onContinue: () => La(t),
            }),
          r.a.createElement(
            "div",
            {
              className: "SendAmount " + (O ? "SendAmount__full-height" : ""),
              "data-testid": "send-amount-view",
            },
            r.a.createElement(Ln, {
              title: `${O ? "Swap" : "Send"} ${L.code}`,
              hasBackButton: !O,
              customBackAction: () => La(e),
              rightButton: O
                ? null
                : r.a.createElement(
                    "button",
                    {
                      onClick: () => La(Ka.a.sendPaymentType),
                      className: "SendAmount__icon-slider",
                    },
                    r.a.createElement(Sa.Icon.Sliders, null)
                  ),
            }),
            r.a.createElement(
              "div",
              { className: "SendAmount__content" },
              r.a.createElement(
                "div",
                { className: "SendAmount__asset-copy" },
                r.a.createElement("span", null, rn(D)),
                " ",
                r.a.createElement("span", null, L.code),
                " ",
                a("available")
              ),
              r.a.createElement(
                "div",
                { className: "SendAmount__btn-set-max" },
                r.a.createElement(
                  Sn,
                  {
                    onClick: () => {
                      Object(o.a)(Re),
                        P.setFieldValue("amount", I(P.values.asset));
                    },
                  },
                  a("SET MAX")
                )
              ),
              r.a.createElement(
                "form",
                {
                  className: "SendAmount__form",
                  onSubmit: (e) => {
                    e.preventDefault(), P.submitForm();
                  },
                },
                r.a.createElement(
                  Ha.a,
                  {
                    className:
                      "" +
                      (O
                        ? "SendAmount__simplebar"
                        : "SendAmount__simplebar__full-height"),
                  },
                  r.a.createElement(
                    "div",
                    { className: "SendAmount__simplebar__content" },
                    r.a.createElement("input", {
                      className: `SendAmount__input-amount ${
                        O ? "SendAmount__input-amount__full-height" : ""
                      } SendAmount__${(() => {
                        const e = P.values.amount.length;
                        return e <= 9 ? "" : e <= 15 ? "med" : "small";
                      })()}`,
                      "data-testid": "send-amount-amount-input",
                      name: "amount",
                      type: "text",
                      placeholder: "0",
                      value: P.values.amount,
                      onChange: (e) => {
                        const t = e.target,
                          { amount: a, newCursor: n } = nn(
                            e.target.value,
                            P.values.amount,
                            Object(qa.d)(f, h, y),
                            e.target.selectionStart || 1
                          );
                        P.setFieldValue("amount", a),
                          u(() => {
                            (t.selectionStart = n), (t.selectionEnd = n);
                          });
                      },
                      autoFocus: !0,
                      autoComplete: "off",
                    }),
                    r.a.createElement(
                      "div",
                      { className: "SendAmount__input-amount__asset-copy" },
                      L.code
                    ),
                    M &&
                      "0" !== P.values.amount &&
                      r.a.createElement(Hc, {
                        loading: S,
                        source: L.code,
                        sourceAmount: P.values.amount || "1",
                        dest: x.code,
                        destAmount: g,
                      }),
                    r.a.createElement(
                      "div",
                      {
                        className:
                          "SendAmount__amount-warning" +
                          (v ? "__path-payment" : ""),
                      },
                      r.a.createElement(
                        () =>
                          !O &&
                          ((e, t, a) =>
                            !e &&
                            (new Dt.a(a).lt(Lc) ||
                              t !== $.Asset.native().toString()))(
                            m.isFunded || !1,
                            f,
                            P.values.amount || "0"
                          )
                            ? r.a.createElement(xc, null)
                            : P.errors.amount === Uc.TOO_HIGH
                            ? r.a.createElement(
                                Un,
                                { variant: Un.variant.error },
                                a("Entered amount is higher than your balance")
                              )
                            : P.errors.amount === Uc.DEC_MAX
                            ? r.a.createElement(
                                Un,
                                { variant: Un.variant.error },
                                "7 ",
                                a("digits after the decimal allowed")
                              )
                            : P.errors.amount === Uc.SEND_MAX
                            ? r.a.createElement(
                                Un,
                                { variant: Un.variant.error },
                                a(
                                  "Entered amount is higher than the maximum send amount"
                                ),
                                " (",
                                nn(
                                  "922337203685.4775807",
                                  P.values.amount,
                                  Object(qa.d)(f, h, y)
                                ),
                                ")"
                              )
                            : null,
                        null
                      )
                    ),
                    r.a.createElement(
                      "div",
                      { className: "SendAmount__asset-select-container" },
                      !M &&
                        r.a.createElement(Vc, {
                          assetCode: L.code,
                          issuerKey: L.issuer,
                        }),
                      M &&
                        r.a.createElement(
                          r.a.Fragment,
                          null,
                          r.a.createElement(Fc, {
                            source: !0,
                            assetCode: L.code,
                            issuerKey: L.issuer,
                            balance: P.values.amount,
                          }),
                          r.a.createElement(Fc, {
                            source: !1,
                            assetCode: x.code,
                            issuerKey: x.issuer,
                            balance: g ? new It.BigNumber(g).toFixed() : "0",
                          })
                        )
                    )
                  )
                ),
                r.a.createElement(
                  "div",
                  { className: "SendAmount__btn-continue" },
                  r.a.createElement(
                    Wa,
                    {
                      disabled:
                        S || "0" === P.values.amount || !P.isValid || (M && !g),
                      "data-testid": "send-amount-btn-continue",
                      fullWidth: !0,
                      variant: Wa.variant.tertiary,
                      type: "submit",
                    },
                    a("Continue")
                  )
                )
              )
            )
          ),
          O && r.a.createElement(tr, null),
          r.a.createElement(on, { onClick: () => {}, isActive: C })
        );
      };
    var Gc;
    !(function (e) {
      (e.REGULAR = "REGULAR"), (e.PATH_PAYMENT = "PATH_PAYMENT");
    })(Gc || (Gc = {}));
    const $c = ({
        name: e,
        title: t,
        subtext: a,
        tooltipDetails: n,
        value: s,
        selected: c,
      }) =>
        r.a.createElement(
          "div",
          { className: "SendType__form-row" },
          r.a.createElement(
            "label",
            { className: "SendType--label SendType--radio-label" },
            r.a.createElement(
              "div",
              { className: "SendType__content-wrapper" },
              r.a.createElement(
                "div",
                { className: "SendType__content-wrapper__title" },
                t,
                a &&
                  r.a.createElement(
                    "span",
                    { className: "SendType__content-wrapper__subtext" },
                    a
                  )
              ),
              r.a.createElement(Wn.a, {
                className: "SendType--radio-field",
                name: e,
                type: "radio",
                value: s,
              })
            )
          ),
          r.a.createElement(
            Sa.DetailsTooltip,
            {
              tooltipPosition: Sa.DetailsTooltip.tooltipPosition.BOTTOM_START,
              details: n,
            },
            r.a.createElement("span", null)
          ),
          r.a.createElement(
            "div",
            {
              className:
                "SendType--radio-check " +
                (c ? "SendType--radio-check--active" : ""),
            },
            r.a.createElement(Sa.Icon.Check, null)
          )
        ),
      Xc = () => {
        const { t: e } = Object(Va.a)(),
          t = Object(l.b)(),
          { destinationAsset: a } = Object(l.c)(Oa);
        return r.a.createElement(
          Or,
          null,
          r.a.createElement(Ln, {
            title: e("Send Type"),
            customBackAction: () => La(Ka.a.sendPaymentAmount),
            customBackIcon: r.a.createElement(Sa.Icon.X, null),
          }),
          r.a.createElement(
            Wn.c,
            {
              initialValues: {
                paymentType: "" === a ? Gc.REGULAR : Gc.PATH_PAYMENT,
              },
              onSubmit: () => {},
            },
            ({ values: a }) =>
              r.a.createElement(
                Wn.b,
                null,
                r.a.createElement($c, {
                  name: "paymentType",
                  title: e("Same source and destination asset"),
                  value: Gc.REGULAR,
                  subtext: "Most common",
                  tooltipDetails: r.a.createElement(
                    "span",
                    null,
                    e(
                      "The destination account receives the same asset and amount sent"
                    )
                  ),
                  selected: a.paymentType === Gc.REGULAR,
                }),
                r.a.createElement($c, {
                  name: "paymentType",
                  title: e("Different source and destination assets"),
                  value: Gc.PATH_PAYMENT,
                  subtext: e("Less common"),
                  tooltipDetails: r.a.createElement(
                    "span",
                    null,
                    e(
                      "The destination account can receive a different asset, the received amount is defined by the available conversion rates"
                    ),
                    " ",
                    r.a.createElement(
                      Sa.TextLink,
                      {
                        variant: Sa.TextLink.variant.secondary,
                        href: "https://www.ledger.com/stellar-wallet",
                        rel: "noreferrer",
                        target: "_blank",
                      },
                      e("Learn more")
                    )
                  ),
                  selected: a.paymentType === Gc.PATH_PAYMENT,
                }),
                r.a.createElement(
                  "div",
                  { className: "SendPayment__btn-continue" },
                  r.a.createElement(
                    Wa,
                    {
                      fullWidth: !0,
                      variant: Wa.variant.tertiary,
                      onClick: () =>
                        ((e) => {
                          t(
                            Ea(
                              e.paymentType === Gc.PATH_PAYMENT ? "native" : ""
                            )
                          ),
                            Object(o.a)(
                              e.paymentType === Gc.PATH_PAYMENT ? Me : Pe
                            ),
                            La(Ka.a.sendPaymentAmount);
                        })(a),
                    },
                    e("Done")
                  )
                )
              )
          )
        );
      },
      qc = ({ previous: e, next: t }) => {
        const { t: a } = Object(Va.a)(),
          s = Object(l.b)(),
          {
            destination: c,
            transactionFee: o,
            memo: u,
            allowedSlippage: d,
            isToken: m,
          } = Object(l.c)(Oa),
          E = Object(l.c)(Aa),
          p = zr(),
          { recommendedFee: b } = Xr();
        Object(n.useEffect)(() => {
          o || s(da(b));
        }, [s, b, o]);
        const _ = () =>
            La(p ? Ka.a.swapSettingsFee : Ka.a.sendPaymentSettingsFee),
          h = () =>
            La(
              p ? Ka.a.swapSettingsSlippage : Ka.a.sendPaymentSettingsSlippage
            ),
          w = !p && !Object(i.l)(c),
          f = E || p;
        return r.a.createElement(
          Or,
          null,
          r.a.createElement(
            "div",
            { className: "SendSettings", "data-testid": "send-settings-view" },
            r.a.createElement(Ln, {
              title: `${a(p ? "Swap" : "Send")} ${a("Settings")}`,
              customBackAction: () => La(e),
            }),
            r.a.createElement(
              Wn.c,
              {
                initialValues: { memo: u },
                onSubmit: (e) => {
                  s(ma(e.memo));
                },
              },
              ({ submitForm: e }) =>
                r.a.createElement(
                  Wn.b,
                  null,
                  r.a.createElement(
                    ur,
                    null,
                    m
                      ? null
                      : r.a.createElement(
                          "div",
                          { className: "SendSettings__row" },
                          r.a.createElement(
                            "div",
                            { className: "SendSettings__row__left" },
                            r.a.createElement(
                              "span",
                              {
                                className:
                                  "SendSettings__row__title SendSettings__clickable",
                                onClick: () => {
                                  e(), _();
                                },
                              },
                              a("Transaction fee")
                            ),
                            r.a.createElement(
                              Sa.DetailsTooltip,
                              {
                                tooltipPosition:
                                  Sa.DetailsTooltip.tooltipPosition.BOTTOM,
                                details: r.a.createElement(
                                  "span",
                                  null,
                                  a(
                                    "Maximum network transaction fee to be paid"
                                  ),
                                  " ",
                                  r.a.createElement(
                                    Sa.TextLink,
                                    {
                                      variant: Sa.TextLink.variant.secondary,
                                      href:
                                        "https://developers.stellar.org/docs/glossary/fees/#base-fee",
                                      rel: "noreferrer",
                                      target: "_blank",
                                    },
                                    a("Learn more")
                                  )
                                ),
                              },
                              r.a.createElement("span", null)
                            )
                          ),
                          r.a.createElement(
                            "div",
                            {
                              className:
                                "SendSettings__row__right SendSettings__clickable",
                              onClick: () => {
                                e(), _();
                              },
                            },
                            r.a.createElement("span", null, o, " XLM"),
                            r.a.createElement(
                              "div",
                              null,
                              r.a.createElement(Sa.Icon.ChevronRight, null)
                            )
                          )
                        ),
                    f &&
                      r.a.createElement(
                        "div",
                        { className: "SendSettings__row" },
                        r.a.createElement(
                          "div",
                          { className: "SendSettings__row__left" },
                          r.a.createElement(
                            "span",
                            {
                              className:
                                "SendSettings__row__title SendSettings__clickable",
                              onClick: () => {
                                e(), h();
                              },
                            },
                            a("Allowed slippage")
                          ),
                          r.a.createElement(
                            Sa.DetailsTooltip,
                            {
                              tooltipPosition:
                                Sa.DetailsTooltip.tooltipPosition.BOTTOM,
                              details: r.a.createElement(
                                "span",
                                null,
                                a(
                                  "Allowed downward variation in the destination amount"
                                ),
                                " ",
                                r.a.createElement(
                                  Sa.TextLink,
                                  {
                                    variant: Sa.TextLink.variant.secondary,
                                    href: "https://www.freighter.app/faq",
                                    rel: "noreferrer",
                                    target: "_blank",
                                  },
                                  a("Learn more")
                                )
                              ),
                            },
                            r.a.createElement("span", null)
                          )
                        ),
                        r.a.createElement(
                          "div",
                          {
                            className:
                              "SendSettings__row__right SendSettings__clickable",
                            onClick: () => {
                              e(), h();
                            },
                          },
                          r.a.createElement("span", null, d, "%"),
                          r.a.createElement(
                            "div",
                            null,
                            r.a.createElement(Sa.Icon.ChevronRight, null)
                          )
                        )
                      ),
                    w &&
                      r.a.createElement(
                        r.a.Fragment,
                        null,
                        r.a.createElement(
                          "div",
                          { className: "SendSettings__row" },
                          r.a.createElement(
                            "div",
                            { className: "SendSettings__row__left" },
                            r.a.createElement(
                              "span",
                              { className: "SendSettings__row__title" },
                              a("Memo")
                            ),
                            " ",
                            r.a.createElement(
                              Sa.DetailsTooltip,
                              {
                                tooltipPosition:
                                  Sa.DetailsTooltip.tooltipPosition.BOTTOM,
                                details: r.a.createElement(
                                  "span",
                                  null,
                                  a(
                                    "Include a custom memo to this transaction"
                                  ),
                                  " ",
                                  r.a.createElement(
                                    Sa.TextLink,
                                    {
                                      variant: Sa.TextLink.variant.secondary,
                                      href:
                                        "https://developers.stellar.org/docs/glossary/transactions/#memo",
                                      rel: "noreferrer",
                                      target: "_blank",
                                    },
                                    a("Learn more")
                                  )
                                ),
                              },
                              r.a.createElement("span", null)
                            )
                          ),
                          r.a.createElement(
                            "div",
                            { className: "SendSettings__row__right" },
                            r.a.createElement("span", null)
                          )
                        ),
                        r.a.createElement(
                          Wn.a,
                          { name: "memo" },
                          ({ field: e }) =>
                            r.a.createElement(
                              Sa.Textarea,
                              Object.assign(
                                {
                                  id: "mnemonic-input",
                                  placeholder: a("Memo (optional)"),
                                },
                                e
                              )
                            )
                        )
                      ),
                    r.a.createElement(
                      "div",
                      { className: "SendPayment__btn-continue" },
                      r.a.createElement(
                        Wa,
                        {
                          fullWidth: !0,
                          type: "submit",
                          variant: Wa.variant.tertiary,
                          onClick: () => La(t),
                          "data-testid": "send-settings-btn-continue",
                        },
                        a("Review"),
                        " ",
                        a(p ? "Swap" : "Send")
                      )
                    )
                  )
                )
            )
          )
        );
      },
      zc = ({ previous: e }) => {
        const { t: t } = Object(Va.a)(),
          a = Object(l.b)(),
          { transactionFee: n } = Object(l.c)(Oa),
          { networkCongestion: s, recommendedFee: c } = Xr();
        return r.a.createElement(
          Or,
          null,
          r.a.createElement(Ln, {
            title: "Transaction Fee",
            customBackAction: () => La(e),
            customBackIcon: r.a.createElement(Sa.Icon.X, null),
            rightButton: r.a.createElement(
              Sa.DetailsTooltip,
              {
                tooltipPosition: Sa.DetailsTooltip.tooltipPosition.BOTTOM,
                details: r.a.createElement(
                  "span",
                  null,
                  t("Maximum network transaction fee to be paid"),
                  " ",
                  r.a.createElement(
                    Sa.TextLink,
                    {
                      variant: Sa.TextLink.variant.secondary,
                      href:
                        "https://developers.stellar.org/docs/glossary/fees/#base-fee",
                      rel: "noreferrer",
                      target: "_blank",
                    },
                    t("Learn more")
                  )
                ),
              },
              r.a.createElement("span", null)
            ),
          }),
          r.a.createElement(
            "div",
            { className: "TransactionFee" },
            r.a.createElement(
              Wn.c,
              {
                initialValues: { transactionFee: n },
                onSubmit: (t) => {
                  a(da(String(t.transactionFee))), La(e);
                },
                validationSchema: Object(cr.c)().shape({
                  transactionFee: Object(cr.b)().min(
                    1e-5,
                    t("must be greater than") + " 0.00001"
                  ),
                }),
              },
              ({ setFieldValue: e, values: a, isValid: n, errors: l }) =>
                r.a.createElement(
                  Wn.b,
                  null,
                  r.a.createElement(
                    ur,
                    null,
                    r.a.createElement(
                      Wn.a,
                      { name: "transactionFee" },
                      ({ field: a }) =>
                        r.a.createElement(
                          r.a.Fragment,
                          null,
                          r.a.createElement(
                            Sa.Input,
                            Object.assign(
                              {
                                id: "transaction-fee-input",
                                className: "SendTo__input",
                                type: "number",
                              },
                              a,
                              { error: l.transactionFee }
                            )
                          ),
                          r.a.createElement(
                            "div",
                            { className: "TransactionFee__row" },
                            r.a.createElement(
                              Sa.TextLink,
                              {
                                underline: !0,
                                disabled: a.value === c,
                                variant: Sa.TextLink.variant.secondary,
                                onClick: () => e("transactionFee", c),
                              },
                              t("Set recommended")
                            ),
                            r.a.createElement(
                              "span",
                              null,
                              s,
                              " ",
                              t("congestion")
                            )
                          )
                        )
                    )
                  ),
                  r.a.createElement(
                    "div",
                    { className: "SendPayment__btn-continue" },
                    r.a.createElement(
                      Wa,
                      {
                        fullWidth: !0,
                        variant: Wa.variant.tertiary,
                        disabled: !a.transactionFee || !n,
                        type: "submit",
                      },
                      t("Done")
                    )
                  )
                )
            )
          )
        );
      },
      Zc = ({ previous: e }) => {
        const { t: t } = Object(Va.a)(),
          a = Object(l.b)(),
          { allowedSlippage: n } = Object(l.c)(Oa);
        let s = "",
          c = "";
        return (
          ["1", "2", "3"].includes(n) ? (s = n) : (c = n),
          r.a.createElement(
            Or,
            null,
            r.a.createElement(Ln, {
              title: "Allowed Slippage",
              customBackAction: () => La(e),
              customBackIcon: r.a.createElement(Sa.Icon.X, null),
              rightButton: r.a.createElement(
                Sa.DetailsTooltip,
                {
                  details: r.a.createElement(
                    "span",
                    null,
                    t("Allowed downward variation in the destination amount")
                  ),
                  tooltipPosition: Sa.DetailsTooltip.tooltipPosition.BOTTOM,
                },
                r.a.createElement("span", null)
              ),
            }),
            r.a.createElement(
              "div",
              { className: "Slippage" },
              r.a.createElement(
                Wn.c,
                {
                  initialValues: { presetSlippage: s, customSlippage: c },
                  onSubmit: (t) => {
                    a(pa(t.customSlippage || t.presetSlippage)), La(e);
                  },
                  validationSchema: Object(cr.c)().shape({
                    customSlippage: Object(cr.b)().max(
                      10,
                      t("must be below") + " 10%"
                    ),
                  }),
                },
                ({ setFieldValue: e, values: a, errors: n }) =>
                  r.a.createElement(
                    Wn.b,
                    null,
                    r.a.createElement(
                      "div",
                      { className: "Slippage__cards" },
                      r.a.createElement(
                        "label",
                        { className: "Slippage--radio-label" },
                        r.a.createElement(Wn.a, {
                          className: "Slippage--radio-field",
                          name: "presetSlippage",
                          type: "radio",
                          value: "1",
                          onChange: (t) => {
                            e("presetSlippage", t.target.value),
                              e("customSlippage", "");
                          },
                        }),
                        r.a.createElement(Sa.Card, null, "1%")
                      ),
                      r.a.createElement(
                        "label",
                        { className: "Slippage--radio-label" },
                        r.a.createElement(Wn.a, {
                          className: "Slippage--radio-field",
                          name: "presetSlippage",
                          type: "radio",
                          value: "2",
                          onChange: (t) => {
                            e("presetSlippage", t.target.value),
                              e("customSlippage", "");
                          },
                        }),
                        r.a.createElement(Sa.Card, null, "2%")
                      ),
                      r.a.createElement(
                        "label",
                        { className: "Slippage--radio-label" },
                        r.a.createElement(Wn.a, {
                          className: "Slippage--radio-field",
                          name: "presetSlippage",
                          type: "radio",
                          value: "3",
                          onChange: (t) => {
                            e("presetSlippage", t.target.value),
                              e("customSlippage", "");
                          },
                        }),
                        r.a.createElement(Sa.Card, null, "3%")
                      )
                    ),
                    r.a.createElement(
                      "div",
                      { className: "Slippage__custom-input" },
                      r.a.createElement(
                        Wn.a,
                        { name: "customSlippage" },
                        ({ field: a }) =>
                          r.a.createElement(
                            Sa.Input,
                            Object.assign(
                              {
                                id: "custom-input",
                                placeholder: t("Custom") + " %",
                                type: "number",
                              },
                              a,
                              {
                                onChange: (t) => {
                                  e("customSlippage", t.target.value),
                                    e("presetSlippage", "");
                                },
                                error: n.customSlippage,
                              }
                            )
                          )
                      )
                    ),
                    r.a.createElement(
                      Sa.TextLink,
                      {
                        underline: !0,
                        variant: Sa.TextLink.variant.secondary,
                        onClick: () => {
                          e("presetSlippage", "1"), e("customSlippage", "");
                        },
                      },
                      t("Set default")
                    ),
                    r.a.createElement(
                      "div",
                      { className: "SendPayment__btn-continue" },
                      r.a.createElement(
                        Wa,
                        {
                          fullWidth: !0,
                          disabled: !a.presetSlippage && !a.customSlippage,
                          variant: Wa.variant.tertiary,
                          type: "submit",
                        },
                        t("Done")
                      )
                    )
                  )
              )
            )
          )
        );
      },
      Yc = ({ fedAddress: e, gAddress: t }) =>
        e
          ? r.a.createElement("span", null, e)
          : r.a.createElement(
              r.a.Fragment,
              null,
              r.a.createElement(un.a, { publicKey: t }),
              r.a.createElement("span", null, Object(i.s)(t))
            );
    var Qc = a(1250),
      Jc = a.n(Qc);
    const el = ({ sourceCanon: e, destCanon: t, assetIcons: a }) => {
        const n = Object(i.c)(e),
          s = Object(i.c)(t);
        return r.a.createElement(
          "div",
          { className: "SwapAssetsIcon" },
          r.a.createElement(cn, {
            assetIcons: a,
            code: n.code,
            issuerKey: n.issuer,
          }),
          n.code,
          r.a.createElement(Sa.Icon.ArrowRight, null),
          r.a.createElement(cn, {
            assetIcons: a,
            code: s.code,
            issuerKey: s.issuer,
          }),
          s.code
        );
      },
      tl = ({ viewDetails: e }) => {
        const {
            accountBalances: t,
            transactionData: {
              destination: a,
              federationAddress: n,
              amount: s,
              asset: c,
              destinationAsset: u,
            },
            assetIcons: d,
          } = Object(l.c)(ya),
          { t: m } = Object(Va.a)(),
          E = zr(),
          p = Object(l.b)(),
          b = Object(i.c)(c),
          { recommendedFee: _ } = Xr(),
          h = Object(l.c)(B),
          w = Object(l.c)(G.l),
          f = Object(On.a)(w.networkUrl),
          g = !!Object(l.c)(U),
          v = async (e, t) => {
            const a = await p(
              Vt({ transactionXDR: e, network: w.networkPassphrase })
            );
            if (Vt.fulfilled.match(a)) {
              const e = await p(
                Ut({
                  publicKey: h,
                  signedXDR: a.payload.signedTransaction,
                  networkDetails: w,
                })
              );
              Ut.fulfilled.match(e) && (t(), La(Ka.a.account)),
                Ut.rejected.match(e) && La(Ka.a.trustlineError);
            }
          },
          y = t.balances && t.balances[c] && t.balances[c].available.isZero();
        return r.a.createElement(
          "div",
          { className: "SubmitResult", "data-testid": "submit-success-view" },
          r.a.createElement(
            "div",
            { className: "SubmitResult__header" },
            m("Successfully"),
            " ",
            m(E ? "swapped" : "sent")
          ),
          r.a.createElement(
            "div",
            { className: "SubmitResult__amount" },
            rn(s),
            " ",
            b.code
          ),
          r.a.createElement(
            "div",
            { className: "SubmitResult__icon SubmitResult__success" },
            r.a.createElement(Sa.Icon.ArrowDownCircle, null)
          ),
          r.a.createElement(
            "div",
            { className: "SubmitResult__identicon" },
            E
              ? r.a.createElement(el, {
                  sourceCanon: c,
                  destCanon: u,
                  assetIcons: d,
                })
              : r.a.createElement(Yc, { fedAddress: n, gAddress: a })
          ),
          r.a.createElement(
            "div",
            { className: "SubmitResult__suggest-remove-tl" },
            y &&
              r.a.createElement(
                Un,
                null,
                r.a.createElement(
                  "span",
                  { className: "remove-tl-contents" },
                  r.a.createElement(
                    "p",
                    null,
                    "Your ",
                    b.code,
                    " balance is now empty. Would you like to remove the ",
                    b.code,
                    " trustline?"
                  ),
                  r.a.createElement(
                    "button",
                    {
                      onClick: () =>
                        (async (e, t) => {
                          const a = await f.loadAccount(h),
                            n = new X.a.TransactionBuilder(a, {
                              fee: Object(i.t)(_).toFixed(),
                              networkPassphrase: w.networkPassphrase,
                            })
                              .addOperation(
                                X.a.Operation.changeTrust({
                                  asset: new X.a.Asset(e, t),
                                  limit: "0",
                                })
                              )
                              .setTimeout(180)
                              .build()
                              .toXDR(),
                            r = () => {
                              Object(o.a)(nt, { assetCode: e, assetIssuer: t });
                            };
                          g
                            ? (await p(
                                ha({ transactionXDR: n, shouldSubmit: !0 })
                              ),
                              r())
                            : await v(n, r);
                        })(b.code, b.issuer),
                    },
                    "Remove Trustline"
                  )
                )
              )
          ),
          r.a.createElement(
            "div",
            { className: "SubmitResult__button-rows__success" },
            r.a.createElement(
              Wa,
              { variant: Wa.variant.tertiary, onClick: () => e() },
              m("Details")
            ),
            r.a.createElement(
              Wa,
              {
                onClick: () => {
                  La(Ka.a.account);
                },
              },
              m("Done")
            )
          )
        );
      },
      al = () => {
        const { error: e } = Object(l.c)(ya),
          t = zr(),
          { t: a } = Object(Va.a)();
        Object(n.useEffect)(() => {
          Object(o.a)(Ke, { error: e });
        }, [e]);
        const s = ((e) => {
          const n = {
              title: "",
              errorBlock: r.a.createElement("div", null),
              opError: Xs.tx_failed,
              status: "",
            },
            s = $s()(e, "response.status", ""),
            { operations: c, transaction: l } = qs(e);
          switch ((c[0] ? (n.opError = c[0]) : (n.opError = l), n.opError)) {
            case Xs.tx_insufficient_fee:
              (n.title = a("Insufficient Fee")),
                (n.errorBlock = r.a.createElement(
                  Un,
                  { variant: Un.variant.error },
                  r.a.createElement(
                    "div",
                    null,
                    a(
                      "Fees can vary depending on the network congestion. Please try using the suggested fee and try again."
                    ),
                    r.a.createElement(
                      Sa.TextLink,
                      {
                        underline: !0,
                        variant: Sa.TextLink.variant.secondary,
                        href:
                          "https://developers.stellar.org/docs/glossary/fees/",
                        rel: "noreferrer",
                        target: "_blank",
                      },
                      a("Learn more about fees")
                    )
                  )
                ));
              break;
            case Xs.op_underfunded:
              (n.title = a("Insufficient Balance")),
                (n.errorBlock = r.a.createElement(
                  Un,
                  { variant: Un.variant.error },
                  r.a.createElement(
                    "div",
                    null,
                    a(
                      "Your account balance is not sufficient for this transaction. Please review the transaction and try again."
                    )
                  )
                ));
              break;
            case Xs.op_no_destination:
              (n.title = a("Destination account doesn’t exist")),
                (n.errorBlock = r.a.createElement(
                  Un,
                  { variant: Un.variant.error },
                  r.a.createElement(
                    "div",
                    null,
                    a(
                      "The destination account doesn’t exist. Make sure it is a funded Stellar account and try again."
                    ),
                    r.a.createElement(
                      Sa.TextLink,
                      {
                        underline: !0,
                        variant: Sa.TextLink.variant.secondary,
                        href:
                          "https://developers.stellar.org/docs/tutorials/create-account/#create-account",
                        rel: "noreferrer",
                        target: "_blank",
                      },
                      a("Learn more about account funding")
                    )
                  )
                ));
              break;
            case Xs.op_no_trust:
              (n.title = a("Destination account does not accept this asset")),
                (n.errorBlock = r.a.createElement(
                  Un,
                  { variant: Un.variant.error },
                  r.a.createElement(
                    "div",
                    null,
                    a(
                      "The destination account does not accept the asset you’re sending. The destination account must opt to accept this asset before receiving it."
                    ),
                    r.a.createElement(
                      Sa.TextLink,
                      {
                        underline: !0,
                        variant: Sa.TextLink.variant.secondary,
                        href:
                          "https://developers.stellar.org/docs/issuing-assets/anatomy-of-an-asset/#trustlines",
                        rel: "noreferrer",
                        target: "_blank",
                      },
                      a("Learn more about trustlines")
                    )
                  )
                ));
              break;
            case Xs.op_under_dest_min:
              (n.title = a("Conversion rate changed")),
                (n.errorBlock = r.a.createElement(
                  Un,
                  { variant: Un.variant.error },
                  r.a.createElement(
                    "div",
                    null,
                    a("Please check the new rate and try again."),
                    r.a.createElement(
                      Sa.TextLink,
                      {
                        underline: !0,
                        variant: Sa.TextLink.variant.secondary,
                        href:
                          "https://developers.stellar.org/docs/start/list-of-operations/#path-payment-strict-send",
                        rel: "noreferrer",
                        target: "_blank",
                      },
                      a("Learn more about conversion rates")
                    )
                  )
                ));
              break;
            case Xs.op_low_reserve:
              (n.title = a("Account minimum balance is too low")),
                (n.errorBlock = r.a.createElement(
                  Un,
                  { variant: Un.variant.error },
                  r.a.createElement(
                    "div",
                    null,
                    a(
                      "To create a new account you need to send at least 1 XLM to it."
                    ),
                    r.a.createElement(
                      Sa.TextLink,
                      {
                        underline: !0,
                        variant: Sa.TextLink.variant.secondary,
                        href:
                          "https://developers.stellar.org/docs/start/list-of-operations/#path-payment-strict-send",
                        rel: "noreferrer",
                        target: "_blank",
                      },
                      a("Learn more about conversion rates")
                    )
                  )
                ));
              break;
            default:
              (n.status = s),
                (n.title = "" + a(t ? "Swap failed" : "Transaction failed")),
                (n.errorBlock = r.a.createElement(
                  Un,
                  { variant: Un.variant.error },
                  r.a.createElement(
                    "div",
                    null,
                    a("One or more operations in this transaction failed.")
                  )
                ));
          }
          return n;
        })(e);
        return r.a.createElement(
          "div",
          { className: "SubmitResult" },
          r.a.createElement(
            "div",
            { className: "SubmitResult__content" },
            r.a.createElement(
              "div",
              { className: "SubmitResult__header" },
              a("Error")
            ),
            r.a.createElement(
              "div",
              { className: "SubmitResult__amount" },
              s.title
            ),
            r.a.createElement(
              "div",
              { className: "SubmitResult__icon SubmitResult__fail" },
              r.a.createElement("img", { src: Jc.a, alt: "Icon Fail" })
            ),
            r.a.createElement(
              "div",
              { className: "SubmitResult__error-code" },
              s.status ? s.status + ":" : "",
              " ",
              s.opError
            )
          ),
          r.a.createElement(
            "div",
            { className: "SubmitResult__error-block" },
            s.errorBlock
          ),
          r.a.createElement(
            "div",
            { className: "SubmitResult__button-rows__fail" },
            r.a.createElement(
              Wa,
              {
                fullWidth: !0,
                variant: Wa.variant.tertiary,
                onClick: () => {
                  La(Ka.a.account);
                },
              },
              a("Got it")
            )
          )
        );
      },
      nl = ({
        sourceAssetIcons: e,
        sourceCanon: t,
        sourceAmount: a,
        destAssetIcons: n,
        destCanon: s,
        destAmount: c,
      }) => {
        const l = Object(i.c)(t),
          o = Object(i.c)(s),
          u = Bn(l.code, l.issuer),
          d = Bn(o.code, o.issuer);
        return r.a.createElement(
          "div",
          { className: "TwoAssetCard" },
          r.a.createElement(
            "div",
            { className: "TwoAssetCard__row" },
            r.a.createElement(
              "div",
              { className: "TwoAssetCard__row__left" },
              r.a.createElement(cn, {
                assetIcons: e,
                code: l.code,
                issuerKey: l.issuer,
              }),
              l.code,
              r.a.createElement(Qa, { isScamAsset: u })
            ),
            r.a.createElement(
              "div",
              { className: "TwoAssetCard__row__right" },
              rn(a),
              " ",
              l.code
            )
          ),
          r.a.createElement(
            "div",
            { className: "TwoAssetCard__arrow-icon" },
            r.a.createElement(Sa.Icon.ArrowDown, null)
          ),
          r.a.createElement(
            "div",
            { className: "TwoAssetCard__row" },
            r.a.createElement(
              "div",
              { className: "TwoAssetCard__row__left" },
              r.a.createElement(cn, {
                assetIcons: n,
                code: o.code,
                issuerKey: o.issuer,
              }),
              o.code,
              r.a.createElement(Qa, { isScamAsset: d })
            ),
            r.a.createElement(
              "div",
              { className: "TwoAssetCard__row__right" },
              rn(new Dt.a(c).toFixed()),
              " ",
              o.code
            )
          )
        );
      },
      rl = (e, t) => {
        const a = 1 - parseFloat(e) / 100;
        return new Dt.a(t).times(new Dt.a(a));
      },
      sl = ({ goBack: e }) => {
        var t;
        const a = Object(n.useContext)(ar.a),
          s = Object(l.b)(),
          c = Object(l.c)(ya),
          {
            destinationBalances: u,
            transactionData: {
              destination: d,
              federationAddress: m,
              amount: E,
              asset: b,
              memo: _,
              transactionFee: h,
              allowedSlippage: w,
              destinationAsset: f,
              destinationAmount: g,
              path: v,
              isToken: y,
            },
            assetIcons: O,
            hardwareWalletData: { status: A },
            blockedAccounts: S,
          } = c,
          N = null === (t = c.response) || void 0 === t ? void 0 : t.hash,
          C = Object(l.c)(Aa),
          { tokenBalances: T } = Object(l.c)(Bt),
          { isMemoValidationEnabled: k, isSafetyValidationEnabled: j } = Object(
            l.c
          )(G.n),
          I = zr(),
          { t: D } = Object(Va.a)(),
          { server: R } = Object(n.useContext)(ar.a),
          P = Object(l.c)(B),
          M = Object(l.c)(G.l),
          L = !!Object(l.c)(U),
          [x, K] = Object(n.useState)({}),
          V = Object(i.c)(b),
          F = Object(i.c)(f || "native"),
          H = Object(i.k)(M),
          W = k && H,
          $ = j && H,
          q = S.filter(({ address: e }) => e === d).flatMap(({ tags: e }) => e),
          z = W && q.some((e) => e === Tn.c.memoRequired && !_),
          Z = $ && q.some((e) => e === Tn.c.malicious),
          Y = $ && q.some((e) => e === Tn.c.unsafe),
          Q = z || Z || Y;
        Object(n.useEffect)(() => {
          (async () => {
            const e = await Object(Dn.a)({
              key: F.issuer,
              code: F.code,
              networkDetails: M,
            });
            K({ [Object(i.d)(F.code, F.issuer)]: e });
          })();
        }, [F.code, F.issuer, M]),
          Object(n.useEffect)(() => {
            s(Jt());
          }, [s]);
        const J = async () => {
            try {
              const e = Object(On.a)(M.networkUrl),
                t = await e.loadAccount(P),
                a = ((e, t, a, n, r, s, c, l, o, u, d) => {
                  if (l || o) {
                    const l = rl(s, n);
                    return X.a.Operation.pathPaymentStrictSend({
                      sendAsset: e,
                      sendAmount: a,
                      destination: o ? d : r,
                      destAsset: t,
                      destMin: l.toFixed(7),
                      path: c.map((e) => Object(i.c)(e)),
                    });
                  }
                  return u || e.code !== X.a.Asset.native().code
                    ? X.a.Operation.payment({
                        destination: r,
                        asset: e,
                        amount: a,
                      })
                    : X.a.Operation.createAccount({
                        destination: r,
                        startingBalance: a,
                      });
                })(V, F, E, g, d, w, v, C, I, u.isFunded, P),
                n = await new X.a.TransactionBuilder(t, {
                  fee: Object(i.t)(h).toFixed(),
                  networkPassphrase: M.networkPassphrase,
                })
                  .addOperation(a)
                  .setTimeout(180);
              if ((_ && n.addMemo(X.a.Memo.text(_)), L))
                return void s(
                  ha({ transactionXDR: n.build().toXDR(), shouldSubmit: !0 })
                );
              const r = await s(
                Vt({
                  transactionXDR: n.build().toXDR(),
                  network: M.networkPassphrase,
                })
              );
              if (Vt.fulfilled.match(r) && r.payload.signedTransaction) {
                const e = await s(
                  Ut({
                    publicKey: P,
                    signedXDR: r.payload.signedTransaction,
                    networkDetails: M,
                    refreshBalances: !0,
                  })
                );
                Ut.fulfilled.match(e) &&
                  (I || (await s(Gt({ publicKey: m || d }))),
                  C
                    ? Object(o.a)(xe, {
                        sourceAsset: V,
                        destAsset: F,
                        allowedSlippage: w,
                      })
                    : Object(o.a)(Le, { sourceAsset: V }));
              }
            } catch (e) {
              console.error(e);
            }
          },
          ee = !I && !Object(i.l)(d);
        return r.a.createElement(
          r.a.Fragment,
          null,
          A === ea.IN_PROGRESS && r.a.createElement(Zr, null),
          r.a.createElement(
            "div",
            { className: "TransactionDetails" },
            c.submitStatus === p.b.PENDING &&
              r.a.createElement(
                "div",
                { className: "TransactionDetails__processing" },
                r.a.createElement(
                  "div",
                  { className: "TransactionDetails__processing__header" },
                  r.a.createElement(Sa.Loader, null),
                  " ",
                  r.a.createElement(
                    "span",
                    null,
                    D("Processing"),
                    " ",
                    D(I ? "swap" : "transaction")
                  )
                ),
                r.a.createElement(
                  "div",
                  { className: "TransactionDetails__processing__copy" },
                  D("Please don’t close this window")
                )
              ),
            r.a.createElement(Ln, {
              title:
                c.submitStatus === p.b.SUCCESS
                  ? `${D(I ? "Swapped" : "Sent")} ${V.code}`
                  : "" + D(I ? "Confirm Swap" : "Confirm Send"),
              customBackAction: e,
              customBackIcon:
                c.submitStatus === p.b.SUCCESS
                  ? r.a.createElement(Sa.Icon.X, null)
                  : null,
            }),
            !(C || I) &&
              r.a.createElement(
                "div",
                { className: "TransactionDetails__cards" },
                r.a.createElement(
                  Sa.Card,
                  null,
                  r.a.createElement(ln, {
                    assetIcons: O,
                    sortedBalances: [
                      {
                        token: { issuer: { key: V.issuer }, code: V.code },
                        total: E || "0",
                      },
                    ],
                  })
                )
              ),
            (C || I) &&
              r.a.createElement(nl, {
                sourceAssetIcons: O,
                sourceCanon: b,
                sourceAmount: E,
                destAssetIcons: x,
                destCanon: f || "native",
                destAmount: g,
              }),
            !I &&
              r.a.createElement(
                "div",
                { className: "TransactionDetails__row" },
                r.a.createElement("div", null, D("Sending to"), " "),
                r.a.createElement(
                  "div",
                  { className: "TransactionDetails__row__right" },
                  r.a.createElement(
                    "div",
                    { className: "TransactionDetails__identicon" },
                    r.a.createElement(Yc, {
                      fedAddress: Object(i.q)(m),
                      gAddress: d,
                    })
                  )
                )
              ),
            ee &&
              r.a.createElement(
                "div",
                { className: "TransactionDetails__row" },
                r.a.createElement("div", null, D("Memo")),
                r.a.createElement(
                  "div",
                  { className: "TransactionDetails__row__right" },
                  _ || D("None")
                )
              ),
            (C || I) &&
              r.a.createElement(
                "div",
                { className: "TransactionDetails__row" },
                r.a.createElement("div", null, D("Conversion rate"), " "),
                r.a.createElement(
                  "div",
                  { className: "TransactionDetails__row__right" },
                  "1 ",
                  V.code,
                  " /",
                  " ",
                  Object(i.e)(E, g).toFixed(2),
                  " ",
                  F.code
                )
              ),
            r.a.createElement(
              "div",
              { className: "TransactionDetails__row" },
              r.a.createElement("div", null, D("Transaction fee"), " "),
              r.a.createElement(
                "div",
                { className: "TransactionDetails__row__right" },
                h,
                " XLM"
              )
            ),
            I &&
              r.a.createElement(
                "div",
                { className: "TransactionDetails__row" },
                r.a.createElement("div", null, D("Minimum Received"), " "),
                r.a.createElement(
                  "div",
                  { className: "TransactionDetails__row__right" },
                  rl(w, g).toFixed(),
                  " ",
                  F.code
                )
              ),
            c.submitStatus === p.b.IDLE &&
              r.a.createElement(us, {
                isUnsafe: Y,
                isMalicious: Z,
                isMemoRequired: z,
              }),
            r.a.createElement(
              "div",
              { className: "TransactionDetails__bottom-wrapper" },
              r.a.createElement(
                "div",
                { className: "TransactionDetails__bottom-wrapper__copy" },
                (C || I) &&
                  c.submitStatus !== p.b.SUCCESS &&
                  D("The final amount is approximate and may change")
              ),
              c.submitStatus === p.b.SUCCESS
                ? r.a.createElement(
                    () =>
                      Object(i.h)(M) || y
                        ? null
                        : r.a.createElement(
                            Wa,
                            {
                              fullWidth: !0,
                              variant: Wa.variant.tertiary,
                              onClick: () => xa(`${Object(Ga.j)(M)}/tx/${N}`),
                            },
                            D("View on"),
                            " Stellar.expert"
                          ),
                    null
                  )
                : r.a.createElement(
                    "div",
                    {
                      className: "TransactionDetails__bottom-wrapper__buttons",
                    },
                    r.a.createElement(
                      Wa,
                      {
                        variant: Wa.variant.tertiary,
                        onClick: () => {
                          La(Ka.a.account);
                        },
                      },
                      D("Cancel")
                    ),
                    r.a.createElement(
                      Wa,
                      {
                        disabled: Q,
                        onClick: async () => {
                          y
                            ? await (async () => {
                                try {
                                  const e = b.split(":")[1],
                                    t = T.find((t) => t.contractId === e);
                                  if (!t)
                                    throw new Error(
                                      "Asset Balance not available"
                                    );
                                  const n = Object(qa.i)(E, Number(t.decimals)),
                                    r = await R.getAccount(P),
                                    c = new Fs.Contract(e).call(
                                      "transfer",
                                      Object(Rt.a)(P),
                                      Object(Rt.a)(d),
                                      Object(Rt.e)(n.toNumber())
                                    ),
                                    l = await new Fs.TransactionBuilder(r, {
                                      fee: Object(i.t)(h).toFixed(),
                                      networkPassphrase: M.networkPassphrase,
                                    })
                                      .addOperation(c)
                                      .setTimeout(180);
                                  _ && l.addMemo(Fs.Memo.text(_));
                                  const u = await R.prepareTransaction(
                                      l.build(),
                                      M.networkPassphrase
                                    ),
                                    m = await s(
                                      Ft({
                                        transactionXDR: u.toXDR(),
                                        network: M.networkPassphrase,
                                      })
                                    );
                                  if (
                                    Ft.fulfilled.match(m) &&
                                    m.payload.signedTransaction
                                  ) {
                                    const e = await s(
                                      Ht({
                                        signedXDR: m.payload.signedTransaction,
                                        networkDetails: M,
                                        sorobanClient: a,
                                        refreshBalances: !0,
                                      })
                                    );
                                    Ut.fulfilled.match(e) &&
                                      Object(o.a)(Le, { sourceAsset: V.code });
                                  }
                                } catch (e) {
                                  console.error(e);
                                }
                              })()
                            : await J();
                        },
                        isLoading: A === ea.IN_PROGRESS,
                        "data-testid": "transaction-details-btn-send",
                      },
                      D(I ? "Swap" : "Send")
                    )
                  )
            )
          )
        );
      },
      cl = ({ previous: e }) => {
        const t = Object(l.b)(),
          a = Object(l.c)(ya),
          [s, c] = Object(n.useState)(!1);
        return r.a.createElement(
          Or,
          null,
          (() => {
            if (s)
              return r.a.createElement(sl, {
                goBack: () => {
                  t(ra()), La(Ka.a.accountHistory);
                },
              });
            switch (a.submitStatus) {
              case p.b.IDLE:
              case p.b.PENDING:
                return r.a.createElement(sl, { goBack: () => La(e) });
              case p.b.SUCCESS:
                return r.a.createElement(tl, { viewDetails: () => c(!0) });
              case p.b.ERROR:
                return r.a.createElement(al, null);
              default:
                return r.a.createElement(sl, { goBack: () => La(e) });
            }
          })()
        );
      },
      ll = () =>
        r.a.createElement(
          Ta.d,
          null,
          r.a.createElement(
            Dl,
            { exact: !0, path: Ka.a.sendPayment },
            r.a.createElement(Ta.a, { to: Ka.a.sendPaymentTo })
          ),
          r.a.createElement(
            Dl,
            { exact: !0, path: Ka.a.sendPaymentTo },
            r.a.createElement(Bc, { previous: Ka.a.account })
          ),
          r.a.createElement(
            Dl,
            { exact: !0, path: Ka.a.sendPaymentAmount },
            r.a.createElement(Wc, {
              previous: Ka.a.sendPaymentTo,
              next: Ka.a.sendPaymentSettings,
            })
          ),
          r.a.createElement(
            Dl,
            { exact: !0, path: Ka.a.sendPaymentType },
            r.a.createElement(Xc, null)
          ),
          r.a.createElement(
            Dl,
            { exact: !0, path: Ka.a.sendPaymentSettings },
            r.a.createElement(qc, {
              previous: Ka.a.sendPaymentAmount,
              next: Ka.a.sendPaymentConfirm,
            })
          ),
          r.a.createElement(
            Dl,
            { exact: !0, path: Ka.a.sendPaymentSettingsFee },
            r.a.createElement(zc, { previous: Ka.a.sendPaymentSettings })
          ),
          r.a.createElement(
            Dl,
            { exact: !0, path: Ka.a.sendPaymentSettingsSlippage },
            r.a.createElement(Zc, { previous: Ka.a.sendPaymentSettings })
          ),
          r.a.createElement(
            Ml,
            { exact: !0, path: Ka.a.sendPaymentConfirm },
            r.a.createElement(cl, { previous: Ka.a.sendPaymentSettings })
          )
        ),
      ol = { assetDomain: "" },
      il = () => {
        const { t: e } = Object(Va.a)(),
          [t, a] = Object(n.useState)([]),
          [s, c] = Object(n.useState)(!1),
          o = Object(n.useRef)(null),
          i = Object(l.c)(G.l);
        return r.a.createElement(
          Wn.c,
          {
            initialValues: ol,
            onSubmit: async (e) => {
              c(!1), a([]);
              const { assetDomain: t } = e,
                n = t.startsWith("http") ? t : "https://" + t,
                r = new URL(n.replace(/\/$/, ""));
              let s = {};
              try {
                s = await X.a.StellarTomlResolver.resolve(r.host);
              } catch (e) {
                console.error(e);
              }
              if (s.CURRENCIES) {
                const { networkPassphrase: e } = i;
                (s.NETWORK_PASSPHRASE || X.a.Networks.PUBLIC) === e
                  ? a(s.CURRENCIES.map((e) => ({ ...e, domain: r.host })))
                  : c(!0);
              } else c(!0);
            },
          },
          ({
            dirty: a,
            errors: n,
            isSubmitting: c,
            isValid: l,
            touched: i,
          }) => {
            var u;
            return r.a.createElement(
              Wn.b,
              null,
              r.a.createElement(
                "div",
                { className: "AddAsset" },
                r.a.createElement(Ln, { title: e("Add Another Asset") }),
                r.a.createElement(
                  ur,
                  null,
                  r.a.createElement(
                    "div",
                    null,
                    r.a.createElement(
                      Wn.a,
                      { name: "assetDomain" },
                      ({ field: t }) =>
                        r.a.createElement(
                          Sa.Input,
                          Object.assign(
                            {
                              autoComplete: "off",
                              id: "assetDomain",
                              placeholder:
                                e("Asset domain") + ", e.g. “centre.io”",
                              error:
                                n.assetDomain && i.assetDomain
                                  ? n.assetDomain
                                  : "",
                            },
                            t
                          )
                        )
                    )
                  ),
                  r.a.createElement(
                    "div",
                    { className: "AddAsset__results" },
                    s
                      ? r.a.createElement(Un, null, e("Asset not found"))
                      : null,
                    t.length
                      ? r.a.createElement(
                          r.a.Fragment,
                          null,
                          r.a.createElement(
                            "div",
                            { className: "AddAsset__title" },
                            e("Assets found in this domain")
                          ),
                          r.a.createElement(
                            "div",
                            { className: "AddAsset__results__rows", ref: o },
                            r.a.createElement(Yr, {
                              assetRows: t,
                              maxHeight:
                                (null ===
                                  (u = null == o ? void 0 : o.current) ||
                                void 0 === u
                                  ? void 0
                                  : u.clientHeight) || 600,
                            })
                          )
                        )
                      : null
                  ),
                  r.a.createElement(
                    "div",
                    null,
                    r.a.createElement(
                      Wa,
                      {
                        fullWidth: !0,
                        type: "submit",
                        isLoading: c,
                        disabled: !(a && l),
                      },
                      e("Search")
                    )
                  )
                )
              )
            );
          }
        );
      },
      ul = ({ assetRows: e, maxHeight: t }) => {
        const {
            accountBalances: { balances: a = {} },
            assetSelect: n,
            blockedDomains: s,
          } = Object(l.c)(ya),
          { tokenBalances: c } = Object(l.c)(Bt),
          o = Object(l.b)(),
          u = Object(Ta.g)(),
          d = n.type === ta.PATH_PAY && !1 === n.isSource;
        return r.a.createElement(
          Ha.a,
          {
            className: "SelectAssetRows__scrollbar",
            style: { maxHeight: t + "px" },
          },
          r.a.createElement(
            "div",
            { className: "SelectAssetRows__content" },
            e.map(
              ({
                code: e,
                domain: t,
                image: l,
                issuer: m,
                contractId: E,
                name: p,
              }) => {
                const b = !!s.domains[t],
                  _ = E || m,
                  h = Object(i.d)(e, _);
                return r.a.createElement(
                  "div",
                  {
                    className: "SelectAssetRows__row selectable",
                    key: h,
                    onClick: () => {
                      n.isSource
                        ? (o(ua(h)), o(ba(!!E)), u.goBack())
                        : (o(Ea(h)), u.goBack());
                    },
                  },
                  r.a.createElement(cn, {
                    assetIcons: "XLM" !== e ? { [h]: l } : {},
                    code: e,
                    issuerKey: _,
                  }),
                  r.a.createElement(
                    "div",
                    { className: "SelectAssetRows__row__info" },
                    r.a.createElement(
                      "div",
                      { className: "SelectAssetRows__row__info__header" },
                      E ? p : e,
                      r.a.createElement(Qa, { isScamAsset: b })
                    ),
                    r.a.createElement(
                      "div",
                      { className: "SelectAssetRows__domain" },
                      Object(i.b)(t)
                    )
                  ),
                  !d &&
                    r.a.createElement(
                      "div",
                      null,
                      E
                        ? ((e) => Object(qa.h)(c, e))(E)
                        : rn(
                            ((e) => {
                              if (!a) return "";
                              const t = a[e];
                              return t ? t.total.toString() : "";
                            })(h)
                          ),
                      " ",
                      e
                    )
                );
              }
            )
          )
        );
      },
      dl = ({ balances: e }) => {
        var t, a;
        const { t: s } = Object(Va.a)(),
          { assetIcons: c, assetSelect: o } = Object(l.c)(ya),
          { isExperimentalModeEnabled: u } = Object(l.c)(G.n),
          { networkUrl: d } = Object(l.c)(G.l),
          { tokenBalances: m } = Object(l.c)(Bt),
          [E, p] = Object(n.useState)([]),
          b = Object(n.useRef)(null),
          [_, h] = Object(n.useState)(!1),
          w = o.type === ta.MANAGE;
        return (
          Object(n.useEffect)(() => {
            (async () => {
              h(!0);
              const t = [],
                a = Object(Ga.m)(e);
              for (let e = 0; e < a.length; e += 1) {
                if (a[e].liquidityPoolId) continue;
                const {
                  token: { code: n, issuer: r },
                } = a[e];
                if ("XLM" !== n) {
                  const e = Object(On.a)(d);
                  let a = "";
                  if (null == r ? void 0 : r.key)
                    try {
                      ({ home_domain: a } = await e.loadAccount(r.key));
                    } catch (e) {
                      console.error(e);
                    }
                  t.push({
                    code: n,
                    issuer: (null == r ? void 0 : r.key) || "",
                    image: c[Object(i.d)(n, null == r ? void 0 : r.key)],
                    domain: a,
                  });
                } else
                  w ||
                    (t.push({ code: n, issuer: "", image: "", domain: "" }),
                    u &&
                      m.length &&
                      m.forEach(({ symbol: e, contractId: a, name: n }) => {
                        t.push({
                          code: "" + e,
                          issuer: "",
                          image: "",
                          domain: "",
                          contractId: a,
                          name: n,
                        });
                      }));
              }
              p(t), h(!1);
            })();
          }, [c, e, d, w, u, m]),
          r.a.createElement(
            "div",
            { className: "ChooseAsset", "data-testid": "choose-asset" },
            _ &&
              r.a.createElement(
                "div",
                { className: "ChooseAsset__loader" },
                r.a.createElement(Sa.Loader, { size: "2rem" })
              ),
            r.a.createElement(Ln, {
              title: "Choose Asset",
              customBackIcon: w ? void 0 : r.a.createElement(Sa.Icon.X, null),
            }),
            r.a.createElement(
              "div",
              { className: "ChooseAsset__wrapper" },
              r.a.createElement(
                "div",
                {
                  className: "ChooseAsset__assets" + (w && u ? "--short" : ""),
                  ref: b,
                },
                w
                  ? r.a.createElement(Yr, {
                      assetRows: E,
                      maxHeight:
                        (null === (t = null == b ? void 0 : b.current) ||
                        void 0 === t
                          ? void 0
                          : t.clientHeight) || 600,
                    })
                  : r.a.createElement(ul, {
                      assetRows: E,
                      maxHeight:
                        (null === (a = null == b ? void 0 : b.current) ||
                        void 0 === a
                          ? void 0
                          : a.clientHeight) || 600,
                    })
              ),
              w &&
                r.a.createElement(
                  "div",
                  { className: "ChooseAsset__button-container" },
                  u
                    ? r.a.createElement(
                        "div",
                        { className: "ChooseAsset__button" },
                        r.a.createElement(
                          ka.b,
                          { to: Ka.a.addToken },
                          r.a.createElement(
                            Wa,
                            { fullWidth: !0, variant: Wa.variant.tertiary },
                            s("Add Soroban token")
                          )
                        )
                      )
                    : null,
                  r.a.createElement(
                    "div",
                    { className: "ChooseAsset__button" },
                    r.a.createElement(
                      ka.b,
                      { to: Ka.a.searchAsset },
                      r.a.createElement(
                        Wa,
                        { fullWidth: !0, variant: Wa.variant.tertiary },
                        s("Add another asset")
                      )
                    )
                  )
                )
            )
          )
        );
      },
      ml = { asset: "" },
      El = () => {
        const { t: e } = Object(Va.a)();
        return r.a.createElement(
          "div",
          { className: "SearchAsset__copy" },
          e("Can’t find the asset you’re looking for?"),
          r.a.createElement(
            "div",
            null,
            r.a.createElement(ka.b, { to: Ka.a.addAsset }, e("Add it manually"))
          )
        );
      },
      pl = () => {
        const { t: e } = Object(Va.a)();
        return r.a.createElement(
          "div",
          { className: "SearchAsset__InfoBlock" },
          r.a.createElement(
            Un,
            null,
            r.a.createElement(
              "div",
              null,
              e(
                "Multiple assets have a similar code, please check the domain before adding."
              ),
              r.a.createElement(
                "div",
                null,
                r.a.createElement(
                  "a",
                  {
                    href:
                      "https://developers.stellar.org/docs/issuing-assets/publishing-asset-info/",
                    target: "_blank",
                    rel: "noreferrer",
                  },
                  e("Learn more about assets domains")
                )
              )
            )
          )
        );
      },
      bl = () => {
        const { t: e } = Object(Va.a)(),
          t = Object(l.c)(G.l),
          [a, s] = Object(n.useState)([]),
          [c, o] = Object(n.useState)(0),
          [u, d] = Object(n.useState)(!1),
          [m, E] = Object(n.useState)(!1),
          p = Object(n.useRef)(null),
          b = Object(n.useCallback)(
            jc()(async ({ target: { value: a } }) => {
              let n;
              if (!a) return void s([]);
              d(!0);
              try {
                n = await fetch(`${Object(Ga.c)(t)}/asset?search=${a}`);
              } catch (t) {
                throw (
                  (console.error(t),
                  d(!1),
                  new Error(e("Unable to search for assets")))
                );
              }
              const r = await n.json();
              d(!1),
                s(
                  r._embedded.records
                    .filter((e) => e.domain && /\S/.test(e.domain))
                    .map((e) => {
                      var t;
                      const a = e.asset.split("-");
                      return {
                        code: a[0],
                        issuer: a[1],
                        image:
                          null === (t = null == e ? void 0 : e.tomlInfo) ||
                          void 0 === t
                            ? void 0
                            : t.image,
                        domain: e.domain,
                      };
                    })
                );
            }, 500),
            []
          );
        return (
          Object(n.useEffect)(() => {
            var e;
            o(
              (null === (e = null == p ? void 0 : p.current) || void 0 === e
                ? void 0
                : e.clientHeight) || 600
            ),
              E(!a.length);
          }, [a]),
          Object(i.h)(t)
            ? r.a.createElement(Ta.a, { to: Ka.a.addAsset })
            : r.a.createElement(
                Wn.c,
                { initialValues: ml, onSubmit: () => {} },
                ({ dirty: t }) =>
                  r.a.createElement(
                    Wn.b,
                    {
                      onChange: (e) => {
                        b(e), E(!1);
                      },
                    },
                    r.a.createElement(
                      "div",
                      { className: "SearchAsset" },
                      r.a.createElement(Ln, { title: e("Choose Asset") }),
                      r.a.createElement(
                        ur,
                        null,
                        r.a.createElement(
                          "div",
                          null,
                          r.a.createElement(
                            Wn.a,
                            { name: "asset" },
                            ({ field: t }) =>
                              r.a.createElement(
                                Sa.Input,
                                Object.assign(
                                  {
                                    autoFocus: !0,
                                    autoComplete: "off",
                                    id: "asset",
                                    placeholder: e("Search for an asset"),
                                  },
                                  t
                                )
                              )
                          ),
                          r.a.createElement(
                            "div",
                            { className: "SearchAsset__search-copy" },
                            e("powered by"),
                            " ",
                            r.a.createElement(
                              "a",
                              {
                                className: "SearchAsset__search-copy",
                                href: "https://stellar.expert",
                                target: "_blank",
                                rel: "noreferrer",
                              },
                              "stellar.expert"
                            )
                          )
                        ),
                        r.a.createElement(
                          "div",
                          {
                            className:
                              "SearchAsset__results " +
                              (t ? "SearchAsset__results--active" : ""),
                            ref: p,
                          },
                          u
                            ? r.a.createElement(
                                "div",
                                { className: "SearchAsset__loader" },
                                r.a.createElement(Sa.Loader, null)
                              )
                            : null,
                          a.length
                            ? r.a.createElement(
                                Yr,
                                {
                                  header:
                                    a.length > 1
                                      ? r.a.createElement(pl, null)
                                      : null,
                                  assetRows: a,
                                  maxHeight: c,
                                },
                                r.a.createElement(El, null)
                              )
                            : null,
                          m && t && !u ? r.a.createElement(El, null) : null
                        ),
                        !t && m
                          ? r.a.createElement(
                              "div",
                              null,
                              r.a.createElement(
                                ka.b,
                                { to: Ka.a.addAsset },
                                r.a.createElement(
                                  Wa,
                                  {
                                    fullWidth: !0,
                                    variant: Wa.variant.tertiary,
                                  },
                                  e("Add asset manually")
                                )
                              )
                            )
                          : null
                      )
                    )
                  )
              )
        );
      };
    var _l;
    !(function (e) {
      (e.UNKNOWN_ERROR = "UNKNOWN_ERROR"),
        (e.NOT_ENOUGH_LUMENS = "NOT_ENOUGH_LUMENS"),
        (e.ASSET_HAS_BALANCE = "ASSET_HAS_BALANCE");
    })(_l || (_l = {}));
    const hl = ({ errorState: e, assetBalance: t, resultCodes: a }) => {
        const { t: n } = Object(Va.a)();
        switch (e) {
          case _l.NOT_ENOUGH_LUMENS:
            return r.a.createElement(
              Un,
              { variant: Un.variant.error },
              r.a.createElement(
                "div",
                null,
                r.a.createElement(
                  "p",
                  { className: "TrustlineError__title" },
                  n("Not enough lumens")
                ),
                r.a.createElement(
                  "p",
                  null,
                  "0.500001 XLM ",
                  n("are required to add a new asset.")
                ),
                r.a.createElement(
                  "p",
                  { className: "TrustlineError__links" },
                  r.a.createElement(
                    ka.b,
                    {
                      to:
                        "https://developers.stellar.org/docs/glossary/minimum-balance/#changes-to-transaction-fees-and-minimum-balances",
                    },
                    n("Learn more about transaction fees")
                  ),
                  r.a.createElement("br", null),
                  r.a.createElement(
                    ka.b,
                    {
                      to:
                        "https://developers.stellar.org/docs/glossary/accounts/#liabilities",
                    },
                    n("Learn more about account reserves")
                  )
                )
              )
            );
          case _l.ASSET_HAS_BALANCE:
            return r.a.createElement(
              r.a.Fragment,
              null,
              r.a.createElement(
                Un,
                { variant: Un.variant.warning },
                r.a.createElement(
                  "p",
                  { className: "TrustlineError__title" },
                  n("This asset has a balance")
                )
              ),
              r.a.createElement(
                "p",
                { className: "TrustlineError__subtitle" },
                n("This asset has a balance of"),
                " ",
                r.a.createElement("strong", null, t),
                ".",
                " ",
                n("You must have a balance of"),
                " ",
                r.a.createElement("strong", null, "0"),
                " ",
                n("in order to remove an asset.")
              )
            );
          case _l.UNKNOWN_ERROR:
          default:
            return r.a.createElement(
              r.a.Fragment,
              null,
              r.a.createElement(
                Un,
                { variant: Un.variant.error },
                r.a.createElement(
                  "div",
                  null,
                  r.a.createElement(
                    "p",
                    { className: "TrustlineError__title" },
                    n("This transaction could not be completed.")
                  ),
                  a
                    ? r.a.createElement(
                        "p",
                        { className: "TrustlineError__subtitle" },
                        n("Error code"),
                        ": ",
                        a
                      )
                    : null
                )
              )
            );
        }
      },
      wl = ({ balances: e, errorAsset: t }) => {
        const { t: a } = Object(Va.a)(),
          s = Object(l.b)(),
          c = Object(Ta.g)(),
          { error: i } = Object(l.c)(ya),
          [u, d] = Object(n.useState)("");
        Object(n.useEffect)(() => {
          Object(o.a)(rt, { error: i });
        }, [i]),
          Object(n.useEffect)(() => {
            if (!e) return;
            const a = e[t];
            a && d(`${new Dt.a(a.available).toString()} ${a.token.code}`);
          }, [e, t]);
        const m = i
          ? (({ operations: e = [] }) =>
              e.includes(Xs.op_invalid_limit)
                ? _l.ASSET_HAS_BALANCE
                : e.includes(Xs.op_low_reserve)
                ? _l.NOT_ENOUGH_LUMENS
                : _l.UNKNOWN_ERROR)(qs(i))
          : _l.UNKNOWN_ERROR;
        return r.a.createElement(
          "div",
          { className: "TrustlineError" },
          r.a.createElement(
            "div",
            { className: "TrustlineError__body" },
            r.a.createElement(hl, {
              errorState: m,
              assetBalance: u,
              resultCodes: JSON.stringify(qs(i)),
            })
          ),
          r.a.createElement(
            "div",
            { className: "TrustlineError__button" },
            r.a.createElement(
              Wa,
              {
                fullWidth: !0,
                onClick: () => {
                  s(ra()), c.goBack();
                },
              },
              a("Got it")
            )
          )
        );
      },
      fl = { tokenId: "" },
      gl = () => {
        const { t: e } = Object(Va.a)(),
          t = Object(l.b)(),
          a = Object(l.c)(K);
        return r.a.createElement(
          r.a.Fragment,
          null,
          r.a.createElement(
            Or,
            null,
            r.a.createElement(Ln, { title: e("Add a Soroban token by ID") }),
            r.a.createElement(
              Wn.c,
              {
                initialValues: fl,
                onSubmit: async (e) => {
                  const { tokenId: a } = e,
                    n = await t(j(a));
                  j.fulfilled.match(n) && (Object(o.a)(tt), La(Ka.a.account));
                },
              },
              ({
                dirty: t,
                isSubmitting: n,
                isValid: s,
                errors: c,
                touched: l,
              }) =>
                r.a.createElement(
                  Wn.b,
                  null,
                  r.a.createElement(
                    ur,
                    null,
                    r.a.createElement(
                      Wn.a,
                      { name: "tokenId" },
                      ({ field: t }) =>
                        r.a.createElement(
                          Sa.Input,
                          Object.assign(
                            {
                              autoComplete: "off",
                              id: "tokenId-input",
                              placeholder: e("Enter Token ID"),
                              error:
                                a || (c.tokenId && l.tokenId ? c.tokenId : ""),
                            },
                            t
                          )
                        )
                    ),
                    r.a.createElement(
                      dr,
                      null,
                      r.a.createElement(
                        Wa,
                        {
                          fullWidth: !0,
                          disabled: !(t && s),
                          isLoading: n,
                          type: "submit",
                        },
                        e("Add New Token")
                      )
                    )
                  )
                )
            )
          )
        );
      };
    var vl = a(26);
    const yl = () => {
        const {
            accountBalances: e,
            destinationBalances: t,
            assetSelect: a,
            error: s,
          } = Object(l.c)(ya),
          [c, o] = Object(n.useState)("");
        let i;
        return (
          r.a.useEffect(() => {
            (async () => {
              var e;
              const { networkPassphrase: t } = await Object(vl.l)(),
                a =
                  null === (e = null == s ? void 0 : s.response) || void 0 === e
                    ? void 0
                    : e.extras.envelope_xdr;
              if (a) {
                const e = X.a.TransactionBuilder.fromXDR(a, t),
                  { code: n, issuer: r } = e._operations[0].line;
                o(`${n}:${r}`);
              }
            })();
          }, [s]),
          (i =
            a.type === ta.PATH_PAY && !1 === a.isSource
              ? t.balances
              : e.balances),
          i
            ? r.a.createElement(
                r.a.Fragment,
                null,
                r.a.createElement(
                  Ta.d,
                  null,
                  r.a.createElement(
                    Rl,
                    { exact: !0, path: Ka.a.manageAssets },
                    r.a.createElement(dl, { balances: i })
                  ),
                  r.a.createElement(
                    Rl,
                    { exact: !0, path: Ka.a.searchAsset },
                    r.a.createElement(bl, null)
                  ),
                  r.a.createElement(
                    Rl,
                    { exact: !0, path: Ka.a.addAsset },
                    r.a.createElement(il, null)
                  ),
                  r.a.createElement(
                    Ta.b,
                    { exact: !0, path: Ka.a.trustlineError },
                    r.a.createElement(wl, { balances: i, errorAsset: c })
                  ),
                  r.a.createElement(
                    Ta.b,
                    { exact: !0, path: Ka.a.addToken },
                    r.a.createElement(gl, null)
                  )
                )
              )
            : r.a.createElement(Ta.a, { to: { pathname: Ka.a.account } })
        );
      },
      Ol = () => {
        const e = Object(l.b)(),
          { accountBalances: t } = Object(l.c)(ya),
          a = Object(l.c)(B),
          s = Object(l.c)(G.l);
        return (
          Object(n.useEffect)(() => {
            (async () => {
              if (!t.balances) {
                const t = await e(Xt({ publicKey: a, networkDetails: s }));
                Xt.fulfilled.match(t) &&
                  e(zt({ balances: t.payload.balances, networkDetails: s }));
              }
            })();
          }, [e, a, s, t]),
          r.a.createElement(
            Ta.d,
            null,
            r.a.createElement(
              Dl,
              { exact: !0, path: Ka.a.swap },
              r.a.createElement(Ta.a, { to: Ka.a.swapAmount })
            ),
            r.a.createElement(
              Dl,
              { exact: !0, path: Ka.a.swapAmount },
              r.a.createElement(Wc, {
                previous: Ka.a.account,
                next: Ka.a.swapSettings,
              })
            ),
            r.a.createElement(
              Dl,
              { exact: !0, path: Ka.a.swapSettings },
              r.a.createElement(qc, {
                previous: Ka.a.swapAmount,
                next: Ka.a.swapConfirm,
              })
            ),
            r.a.createElement(
              Dl,
              { exact: !0, path: Ka.a.swapSettingsFee },
              r.a.createElement(zc, { previous: Ka.a.swapSettings })
            ),
            r.a.createElement(
              Dl,
              { exact: !0, path: Ka.a.swapSettingsSlippage },
              r.a.createElement(Zc, { previous: Ka.a.swapSettings })
            ),
            r.a.createElement(
              Ml,
              { exact: !0, path: Ka.a.swapConfirm },
              r.a.createElement(cl, { previous: Ka.a.swapSettings })
            )
          )
        );
      },
      Al = ({ children: e, buttonComponent: t, isConfirmation: a }) =>
        r.a.createElement(
          "div",
          { className: "NetworkModal" },
          r.a.createElement(on, { isActive: !0 }),
          r.a.createElement(
            "div",
            { className: "NetworkModal__content" },
            r.a.createElement(
              Un,
              {
                variant: Un.variant.warning,
                className:
                  "NetworkModal__infoBlock " +
                  (a ? "NetworkModal__infoBlock--confirmation" : ""),
              },
              e
            ),
            r.a.createElement(
              "div",
              { className: "NetworkModal__button-row" },
              t
            )
          )
        ),
      Sl = ({ isEditing: e }) => {
        const { t: t } = Object(Va.a)(),
          a = Object(l.b)(),
          s = Object(l.c)(G.l),
          c = Object(l.c)(G.m),
          o = Object(l.c)(G.j),
          [u, d] = Object(n.useState)(!1),
          [m, E] = Object(n.useState)(!1),
          [p, b] = Object(n.useState)(!1),
          [_, h] = Object(n.useState)(""),
          w = Object(Ta.g)(),
          { search: f } = Object(Ta.h)(),
          g = Number(new URLSearchParams(f).get("networkIndex")),
          v = c[g],
          y = Object(i.g)(v, s),
          O = e && (0 === g || 1 === g),
          A = e
            ? {
                ...v,
                isSwitchSelected: !1,
                isAllowHttpSelected: !(null == v
                  ? void 0
                  : v.networkUrl.includes("https")),
              }
            : {
                networkName: "",
                networkPassphrase: "",
                networkUrl: "",
                friendbotUrl: "",
                isSwitchSelected: !1,
                isAllowHttpSelected: !1,
              },
          S = Object(cr.c)().shape({
            networkName: Object(cr.e)().required(),
            networkPassphrase: Object(cr.e)().required(),
            networkUrl: Object(cr.e)().required(),
          }),
          N = (e) => {
            b(!0), h(e);
          },
          C = (e) => {
            const {
              friendbotUrl: t,
              networkName: a,
              networkUrl: n,
              networkPassphrase: r,
            } = e;
            return {
              friendbotUrl: t,
              network: i.a,
              networkName: a,
              networkUrl: n,
              networkPassphrase: r,
            };
          },
          T = () =>
            r.a.createElement(
              Wa,
              {
                type: "button",
                fullWidth: !0,
                variant: Wa.variant.tertiary,
                onClick: () => {
                  d(!1), b(!1);
                },
              },
              t("Got it")
            ),
          k = ({ isValid: e, isSubmitting: a }) =>
            O
              ? null
              : r.a.createElement(
                  "div",
                  { className: "NetworkForm__editing-buttons" },
                  r.a.createElement(
                    Wa,
                    {
                      onClick: () => w.goBack(),
                      type: "button",
                      variant: Wa.variant.tertiary,
                      fullWidth: !0,
                    },
                    t("Cancel")
                  ),
                  r.a.createElement(
                    Wa,
                    {
                      disabled: !e,
                      isLoading: a,
                      fullWidth: !0,
                      type: "submit",
                    },
                    t("Save")
                  )
                );
        return r.a.createElement(
          "div",
          { className: "NetworkForm" },
          u
            ? r.a.createElement(
                Al,
                { buttonComponent: r.a.createElement(T, null) },
                r.a.createElement(
                  "div",
                  null,
                  r.a.createElement(
                    "div",
                    { className: "NetworkForm__modal__title" },
                    t("Network is in use")
                  ),
                  r.a.createElement(
                    "div",
                    { className: "NetworkForm__modal__body" },
                    t("Please select a different network before removing it.")
                  )
                )
              )
            : null,
          m
            ? r.a.createElement(
                Al,
                {
                  isConfirmation: !0,
                  buttonComponent: r.a.createElement(
                    () =>
                      r.a.createElement(
                        "div",
                        { className: "NetworkForm__removal-buttons" },
                        r.a.createElement(
                          Wa,
                          {
                            fullWidth: !0,
                            type: "button",
                            variant: Wa.variant.tertiary,
                            onClick: () => E(!1),
                          },
                          t("Cancel")
                        ),
                        r.a.createElement(
                          "div",
                          { className: "NetworkForm__remove-button" },
                          r.a.createElement(
                            Wa,
                            {
                              fullWidth: !0,
                              type: "button",
                              onClick: () => {
                                (async () => {
                                  const e = await a(
                                    Object(G.g)({ networkName: v.networkName })
                                  );
                                  G.g.fulfilled.match(e) && La(Ka.a.account);
                                })();
                              },
                            },
                            t("Remove")
                          )
                        )
                      ),
                    null
                  ),
                },
                r.a.createElement(
                  "div",
                  null,
                  r.a.createElement(
                    "div",
                    { className: "NetworkForm__modal__title" },
                    t("Confirm removing Network")
                  ),
                  r.a.createElement(
                    "div",
                    { className: "NetworkForm__modal__body" },
                    t(
                      "Are you sure you want to remove this network? You will have to re-add it if you want to use it again."
                    )
                  )
                )
              )
            : null,
          p
            ? r.a.createElement(
                Al,
                { buttonComponent: r.a.createElement(T, null) },
                r.a.createElement(
                  "div",
                  null,
                  r.a.createElement(
                    "div",
                    { className: "NetworkForm__modal__title" },
                    t("CONNECTION ERROR")
                  ),
                  r.a.createElement(
                    "div",
                    { className: "NetworkForm__modal__body" },
                    t("Unable to connect to"),
                    " ",
                    r.a.createElement("em", null, _)
                  ),
                  r.a.createElement(
                    "div",
                    { className: "NetworkForm__modal__body" },
                    t(
                      "Please check if the network information is correct and try again. Alternatively, this network may not be operational."
                    ),
                    " "
                  )
                )
              )
            : null,
          r.a.createElement(Ln, {
            title: t(e ? "Add Custom Network" : "Network Details"),
          }),
          r.a.createElement(
            Ha.a,
            { className: "NetworkForm__simplebar" },
            r.a.createElement(
              Wn.c,
              {
                onSubmit: async (t) => {
                  e
                    ? await (async (e) => {
                        if (!Object(Ga.k)(e.networkUrl, e.isAllowHttpSelected))
                          return void N(e.networkUrl);
                        const t = await a(
                          Object(G.d)({ networkDetails: C(e), networkIndex: g })
                        );
                        G.d.fulfilled.match(t) && La(Ka.a.account);
                      })(t)
                    : await (async (e) => {
                        if (!Object(Ga.k)(e.networkUrl, e.isAllowHttpSelected))
                          return void N(e.networkUrl);
                        const t = await a(
                            Object(G.a)({ networkDetails: C(e) })
                          ),
                          n = G.a.fulfilled.match(t);
                        let r = !0;
                        if (e.isSwitchSelected) {
                          r = !1;
                          const t = await a(
                            Object(G.b)({ networkName: e.networkName })
                          );
                          r = G.b.fulfilled.match(t);
                        }
                        n && r && (Object(G.c)(), w.goBack());
                      })(t);
                },
                initialValues: A,
                validationSchema: S,
              },
              ({
                dirty: a,
                errors: n,
                isSubmitting: s,
                isValid: c,
                touched: l,
              }) =>
                r.a.createElement(
                  Wn.b,
                  { className: "NetworkForm__form" },
                  r.a.createElement(Sa.Input, {
                    disabled: O,
                    id: "networkName",
                    autoComplete: "off",
                    error:
                      o ||
                      (n.networkName && l.networkName ? n.networkName : ""),
                    customInput: r.a.createElement(Wn.a, null),
                    label: t("Name"),
                    name: "networkName",
                    placeholder: t("Enter network name"),
                  }),
                  r.a.createElement(Sa.Input, {
                    disabled: O,
                    id: "networkUrl",
                    autoComplete: "off",
                    error: n.networkUrl && l.networkUrl ? n.networkUrl : "",
                    customInput: r.a.createElement(Wn.a, null),
                    label: t("URL"),
                    name: "networkUrl",
                    placeholder: t("Enter network URL"),
                  }),
                  r.a.createElement(Sa.Input, {
                    disabled: O,
                    id: "networkPassphrase",
                    autoComplete: "off",
                    error:
                      n.networkPassphrase && l.networkPassphrase
                        ? n.networkPassphrase
                        : "",
                    customInput: r.a.createElement(Wn.a, null),
                    label: t("Passphrase"),
                    name: "networkPassphrase",
                    placeholder: t("Enter passphrase"),
                  }),
                  r.a.createElement(Sa.Input, {
                    disabled: O,
                    id: "friendbotUrl",
                    autoComplete: "off",
                    error:
                      n.friendbotUrl && l.friendbotUrl ? n.friendbotUrl : "",
                    customInput: r.a.createElement(Wn.a, null),
                    label: t("Friendbot URL"),
                    name: "friendbotUrl",
                    placeholder: t("Enter Friendbot URL"),
                  }),
                  O
                    ? null
                    : r.a.createElement(
                        Wn.a,
                        { name: "isAllowHttpSelected" },
                        ({ field: e }) =>
                          r.a.createElement(
                            Sa.Checkbox,
                            Object.assign(
                              {
                                checked: e.value,
                                id: "isAllowHttpSelected-input",
                                error:
                                  n.isAllowHttpSelected && l.isAllowHttpSelected
                                    ? n.isAllowHttpSelected
                                    : null,
                                label: r.a.createElement(
                                  "span",
                                  null,
                                  t("Allow connecting to non-HTTPS networks")
                                ),
                              },
                              e
                            )
                          )
                      ),
                  e
                    ? r.a.createElement(
                        "div",
                        { className: "NetworkForm__remove-wrapper" },
                        !O &&
                          r.a.createElement(
                            Sn,
                            {
                              type: "button",
                              onClick: () => {
                                y ? d(!0) : E(!0);
                              },
                            },
                            t("Remove")
                          )
                      )
                    : r.a.createElement(
                        Wn.a,
                        { name: "isSwitchSelected" },
                        ({ field: e }) =>
                          r.a.createElement(
                            Sa.Checkbox,
                            Object.assign(
                              {
                                autoComplete: "off",
                                id: "isSwitchSelected-input",
                                error:
                                  n.isSwitchSelected && l.isSwitchSelected
                                    ? n.isSwitchSelected
                                    : null,
                                label: r.a.createElement(
                                  "span",
                                  null,
                                  t("Switch to this network")
                                ),
                              },
                              e
                            )
                          )
                      ),
                  e
                    ? r.a.createElement(k, { isValid: c, isSubmitting: s })
                    : r.a.createElement(
                        "div",
                        { className: "NetworkForm__add-button" },
                        r.a.createElement(
                          Wa,
                          {
                            disabled: !(c && a),
                            fullWidth: !0,
                            isLoading: s,
                            type: "submit",
                          },
                          t("Add network")
                        )
                      )
                )
            )
          )
        );
      },
      Nl = () => {
        const e = Object(l.c)(G.m),
          t = Object(l.c)(G.l),
          { t: a } = Object(Va.a)();
        return r.a.createElement(
          "div",
          { className: "NetworkSettings" },
          r.a.createElement(Ln, { title: a("Network Settings") }),
          r.a.createElement(
            "div",
            { className: "NetworkSettings__header" },
            a("Network")
          ),
          r.a.createElement(
            Ha.a,
            { className: "NetworkSettings__scrollbar" },
            r.a.createElement(
              Nc,
              null,
              e.map((e, a) => {
                const n = Object(i.g)(t, e);
                return r.a.createElement(
                  Sc,
                  {
                    key: e.networkName,
                    href: Ka.a.editNetwork,
                    searchParams: "?networkIndex=" + a,
                  },
                  r.a.createElement(
                    "div",
                    { key: e.networkName },
                    r.a.createElement(
                      "div",
                      {
                        className:
                          "NetworkSettings__name " +
                          (n ? "NetworkSettings__name--active" : ""),
                      },
                      n
                        ? r.a.createElement("div", {
                            className: "NetworkSettings__active-marker",
                          })
                        : null,
                      r.a.createElement(fn, { index: a }),
                      r.a.createElement("div", null, e.networkName)
                    ),
                    r.a.createElement(
                      "div",
                      { className: "NetworkSettings__url" },
                      e.networkUrl
                    )
                  )
                );
              })
            )
          ),
          r.a.createElement(
            "div",
            { className: "NetworkSettings__bottom" },
            r.a.createElement(
              Wa,
              {
                fullWidth: !0,
                variant: Wa.variant.tertiary,
                onClick: () => La(Ka.a.addNetwork),
              },
              a("Add custom network")
            )
          )
        );
      },
      Cl = () =>
        r.a.createElement(
          Ta.d,
          null,
          r.a.createElement(
            Dl,
            { exact: !0, path: Ka.a.addNetwork },
            r.a.createElement(Sl, { isEditing: !1 })
          ),
          r.a.createElement(
            Dl,
            { exact: !0, path: Ka.a.networkSettings },
            r.a.createElement(Nl, null)
          ),
          r.a.createElement(
            Dl,
            { exact: !0, path: Ka.a.editNetwork },
            r.a.createElement(Sl, { isEditing: !0 })
          )
        );
    var Tl = a.p + "9511dab87436207df9b19a89146dbcd4.png",
      kl = a.p + "57b07cc0168acb8609d1955675eb1e55.png";
    const jl = () => {
        const { t: e } = Object(Va.a)();
        return r.a.createElement(
          r.a.Fragment,
          null,
          r.a.createElement(gr, null),
          r.a.createElement(Er, null),
          r.a.createElement(
            "div",
            { className: "PinExtension" },
            r.a.createElement(
              "div",
              { className: "PinExtension__wrapper" },
              r.a.createElement(
                "div",
                { className: "PinExtension__title" },
                e("Pin the extension in your browser to access it easily.")
              ),
              r.a.createElement(
                "div",
                { className: "PinExtension__caption" },
                "1.",
                " ",
                e(
                  "Click on the extensions button at the top of your browser’s bar"
                )
              ),
              r.a.createElement(
                "div",
                { className: "PinExtension__img" },
                r.a.createElement("img", { src: Tl, alt: "Extensions Menu" })
              ),
              r.a.createElement(
                "div",
                { className: "PinExtension__caption" },
                "2. ",
                e("Click on Freighter’s pin button to have it always visible")
              ),
              r.a.createElement(
                "div",
                { className: "PinExtension__img" },
                r.a.createElement("img", { src: kl, alt: "Extensions Pin" })
              )
            )
          )
        );
      },
      Il = {
        [Ka.a.welcome]: Q,
        [Ka.a.account]: J,
        [Ka.a.accountHistory]: ee,
        [Ka.a.addAccount]: ae,
        [Ka.a.importAccount]: ne,
        [Ka.a.connectWallet]: re,
        [Ka.a.connectWalletPlugin]: se,
        [Ka.a.connectLedger]: ce,
        [Ka.a.signTransaction]: pe,
        [Ka.a.grantAccess]: le,
        [Ka.a.mnemonicPhrase]: oe,
        [Ka.a.mnemonicPhraseConfirm]: ie,
        [Ka.a.unlockAccount]: be,
        [Ka.a.verifyAccount]: _e,
        [Ka.a.mnemonicPhraseConfirmed]: ue,
        [Ka.a.pinExtension]: de,
        [Ka.a.accountCreator]: te,
        [Ka.a.recoverAccount]: me,
        [Ka.a.recoverAccountSuccess]: Ee,
        [Ka.a.displayBackupPhrase]: we,
        [Ka.a.settings]: ge,
        [Ka.a.preferences]: ve,
        [Ka.a.security]: ye,
        [Ka.a.about]: Oe,
        [Ka.a.viewPublicKey]: fe,
        [Ka.a.debug]: Z,
        [Ka.a.integrationTest]: Y,
        [Ka.a.sendPayment]: Ae,
        [Ka.a.sendPaymentTo]: Se,
        [Ka.a.sendPaymentAmount]: Ne,
        [Ka.a.sendPaymentType]: Ce,
        [Ka.a.sendPaymentSettings]: Te,
        [Ka.a.sendPaymentSettingsFee]: ke,
        [Ka.a.sendPaymentSettingsSlippage]: je,
        [Ka.a.sendPaymentConfirm]: Ie,
        [Ka.a.manageAssets]: Ge,
        [Ka.a.addAsset]: $e,
        [Ka.a.searchAsset]: Xe,
        [Ka.a.trustlineError]: qe,
        [Ka.a.addToken]: ze,
        [Ka.a.swap]: Be,
        [Ka.a.swapAmount]: Ve,
        [Ka.a.swapSettings]: Fe,
        [Ka.a.swapSettingsFee]: Ue,
        [Ka.a.swapSettingsSlippage]: He,
        [Ka.a.swapConfirm]: We,
        [Ka.a.manageNetwork]: Ze,
        [Ka.a.addNetwork]: Ye,
        [Ka.a.editNetwork]: Qe,
        [Ka.a.networkSettings]: Je,
      };
    Object(o.c)(Ba, (e, t) => {
      const a = t,
        { pathname: n, search: r } = a.payload.location,
        s = Il[n];
      if (!s)
        throw new Error(`Didn't find a metric event name for path '${n}'`);
      if (n === Ka.a.grantAccess) {
        const { url: e } = Object(Ia.g)(r),
          t = { domain: Object(Ia.d)(e), subdomain: Object(Ia.e)(e) };
        Object(o.a)(s, t);
      } else if (n === Ka.a.signTransaction) {
        const { url: e } = Object(Ia.g)(r),
          { operations: t, operationTypes: a } = Object(i.f)(r),
          n = {
            domain: Object(Ia.d)(e),
            subdomain: Object(Ia.e)(e),
            number_of_operations: t.length,
            operationTypes: a,
          };
        Object(o.a)(s, n);
      } else Object(o.a)(s);
    });
    const Dl = (e) => {
        const t = Object(Ta.h)(),
          a = Object(l.c)(x),
          n = Object(l.c)(B),
          s = Object(l.c)(K);
        return a === m.a.APPLICATION_ERROR
          ? r.a.createElement(Fa, null, s)
          : a === m.a.APPLICATION_LOADING
          ? null
          : a === m.a.APPLICATION_STARTED
          ? r.a.createElement(Ta.a, { to: { pathname: "/" } })
          : n
          ? r.a.createElement(
              ar.b,
              { pubKey: n },
              r.a.createElement(Ta.b, Object.assign({}, e))
            )
          : r.a.createElement(Ta.a, {
              to: {
                pathname: Ka.a.unlockAccount,
                search: t.search,
                state: { from: t },
              },
            });
      },
      Rl = (e) => {
        const t = Object(Ta.h)(),
          a = Object(l.c)(x),
          n = Object(l.c)(M),
          s = Object(l.c)(K);
        return a === m.a.APPLICATION_ERROR
          ? r.a.createElement(Fa, null, s)
          : a === m.a.APPLICATION_LOADING
          ? null
          : n
          ? r.a.createElement(Ta.b, Object.assign({}, e))
          : r.a.createElement(Ta.a, {
              to: {
                pathname: Ka.a.unlockAccount,
                search: t.search,
                state: { from: t },
              },
            });
      },
      Pl = (e) =>
        Object(l.c)(x) === m.a.APPLICATION_STARTED
          ? r.a.createElement(Ta.a, { to: { pathname: "/" } })
          : r.a.createElement(Ta.b, Object.assign({}, e)),
      Ml = (e) => {
        const t = Object(Ta.h)();
        return Object(l.c)(M)
          ? r.a.createElement(Ta.b, Object.assign({}, e))
          : r.a.createElement(Ta.a, {
              to: { pathname: Ka.a.verifyAccount, state: { from: t } },
            });
      },
      Ll = () => {
        const e = Object(l.c)(L),
          t = Object(l.c)(x),
          a = Object(l.c)(B),
          n = Object(l.c)(K);
        if (t === m.a.APPLICATION_ERROR) return r.a.createElement(Fa, null, n);
        if (t === m.a.APPLICATION_LOADING) return null;
        if (!a || !e.length)
          return t === m.a.MNEMONIC_PHRASE_CONFIRMED
            ? r.a.createElement(Ta.a, { to: Ka.a.unlockAccount })
            : (window.innerWidth === ja.b &&
                (xa(Object(Ia.f)(Ka.a.welcome)), window.close()),
              r.a.createElement(nc, null));
        switch (t) {
          case m.a.MNEMONIC_PHRASE_CONFIRMED:
            return r.a.createElement(Ta.a, { to: Ka.a.account });
          case m.a.PASSWORD_CREATED:
          case m.a.MNEMONIC_PHRASE_FAILED:
            return (
              xa(Object(Ia.f)(Ka.a.mnemonicPhrase)), r.a.createElement(Na, null)
            );
          default:
            return r.a.createElement(nc, null);
        }
      },
      xl = () => {
        const e = Object(l.b)(),
          t = Object(Ta.h)();
        return (
          Object(n.useEffect)(() => {
            e(Ba(t));
          }, [e, t]),
          null
        );
      },
      Kl = () => {
        const e = Object(l.b)(),
          t = Object(l.c)(x),
          a = Object(l.c)(G.l);
        return (
          Object(n.useEffect)(() => {
            e(T()), e(Object(G.e)());
          }, [e]),
          t !== m.a.APPLICATION_LOADING && a.network
            ? r.a.createElement(
                ka.a,
                null,
                r.a.createElement(xl, null),
                r.a.createElement(
                  Ta.d,
                  null,
                  r.a.createElement(
                    Dl,
                    { exact: !0, path: Ka.a.account },
                    r.a.createElement(nr, null)
                  ),
                  r.a.createElement(
                    Dl,
                    { path: Ka.a.accountHistory },
                    r.a.createElement(sr, null)
                  ),
                  r.a.createElement(
                    Dl,
                    { path: Ka.a.addAccount },
                    r.a.createElement(Sr, null)
                  ),
                  r.a.createElement(
                    Dl,
                    { path: Ka.a.importAccount },
                    r.a.createElement(Nr, null)
                  ),
                  r.a.createElement(
                    Dl,
                    { exact: !0, path: Ka.a.connectWallet },
                    r.a.createElement(Tr, null)
                  ),
                  r.a.createElement(
                    Dl,
                    { path: Ka.a.connectWalletPlugin },
                    r.a.createElement(kr, null)
                  ),
                  r.a.createElement(
                    Dl,
                    { path: Ka.a.connectLedger },
                    r.a.createElement(Mr, null)
                  ),
                  r.a.createElement(
                    Dl,
                    { path: Ka.a.viewPublicKey },
                    r.a.createElement(Ac, null)
                  ),
                  r.a.createElement(
                    Dl,
                    { path: Ka.a.signTransaction },
                    r.a.createElement(tc, null)
                  ),
                  r.a.createElement(
                    Dl,
                    { path: Ka.a.displayBackupPhrase },
                    r.a.createElement(rc, null)
                  ),
                  r.a.createElement(
                    Dl,
                    { path: Ka.a.grantAccess },
                    r.a.createElement(bs, null)
                  ),
                  r.a.createElement(
                    Dl,
                    { path: Ka.a.mnemonicPhrase },
                    r.a.createElement(Ts, null)
                  ),
                  r.a.createElement(
                    Dl,
                    { path: Ka.a.settings, exact: !0 },
                    r.a.createElement(Tc, null)
                  ),
                  r.a.createElement(
                    Dl,
                    { path: Ka.a.preferences },
                    r.a.createElement(Dc, null)
                  ),
                  r.a.createElement(
                    Dl,
                    { path: Ka.a.security },
                    r.a.createElement(Rc, null)
                  ),
                  r.a.createElement(
                    Dl,
                    { path: Ka.a.about },
                    r.a.createElement(Mc, null)
                  ),
                  r.a.createElement(
                    Pl,
                    { path: Ka.a.unlockAccount },
                    r.a.createElement(ac, null)
                  ),
                  r.a.createElement(
                    Dl,
                    { path: Ka.a.mnemonicPhraseConfirmed },
                    r.a.createElement(Ls, null)
                  ),
                  r.a.createElement(
                    Dl,
                    { path: Ka.a.pinExtension },
                    r.a.createElement(jl, null)
                  ),
                  r.a.createElement(
                    Ta.b,
                    { path: Ka.a.accountCreator },
                    r.a.createElement(yr, null)
                  ),
                  r.a.createElement(
                    Ta.b,
                    { path: Ka.a.recoverAccount },
                    r.a.createElement(Bs, null)
                  ),
                  r.a.createElement(
                    Ta.b,
                    { path: Ka.a.verifyAccount },
                    r.a.createElement(ec, null)
                  ),
                  r.a.createElement(
                    Dl,
                    { path: Ka.a.recoverAccountSuccess },
                    r.a.createElement(Ls, null)
                  ),
                  r.a.createElement(
                    Dl,
                    { path: Ka.a.sendPayment },
                    r.a.createElement(ll, null)
                  ),
                  r.a.createElement(
                    Dl,
                    { path: Ka.a.manageAssets },
                    r.a.createElement(yl, null)
                  ),
                  r.a.createElement(
                    Dl,
                    { path: Ka.a.swap },
                    r.a.createElement(Ol, null)
                  ),
                  r.a.createElement(
                    Dl,
                    { path: Ka.a.manageNetwork },
                    r.a.createElement(Cl, null)
                  ),
                  cc.a &&
                    r.a.createElement(
                      r.a.Fragment,
                      null,
                      r.a.createElement(
                        Ta.b,
                        { path: Ka.a.debug },
                        r.a.createElement(sc, null)
                      ),
                      r.a.createElement(
                        Ta.b,
                        { path: Ka.a.integrationTest },
                        r.a.createElement(pc, null)
                      )
                    ),
                  r.a.createElement(Ll, null)
                )
              )
            : r.a.createElement(Na, null)
        );
      };
    a.d(t, "b", function () {
      return Vl;
    }),
      a.d(t, "a", function () {
        return Fl;
      });
    const Bl = Object(c.b)({
        auth: R,
        settings: G.f,
        transactionSubmission: va,
        soroban: Kt,
      }),
      Vl = Object(s.a)({
        reducer: Bl,
        middleware: [
          ...Object(s.e)({ serializableCheck: { isSerializable: i.m } }),
        ].concat(Object(o.b)()),
      });
    function Fl() {
      return r.a.createElement(
        l.a,
        { store: Vl },
        r.a.createElement(Ca.a, null),
        r.a.createElement(
          n.Suspense,
          { fallback: r.a.createElement(Na, null) },
          r.a.createElement(Kl, null)
        )
      );
    }
  },
  624: function (e, t) {},
  625: function (e, t) {},
  71: function (e, t, a) {
    "use strict";
    a.d(t, "b", function () {
      return o;
    }),
      a.d(t, "c", function () {
        return i;
      }),
      a.d(t, "a", function () {
        return u;
      }),
      a.d(t, "d", function () {
        return d;
      }),
      a.d(t, "f", function () {
        return m;
      }),
      a.d(t, "e", function () {
        return E;
      });
    var n = a(42),
      r = a.n(n),
      s = a(10),
      c = a(18);
    const l = r.a.storage,
      o = null == l ? void 0 : l.local,
      i = null == l ? void 0 : l.session,
      u = !1,
      d = (e = o) => {
        const t = ((e = o) => ({
          getItem: async (t) => (await e.get(t))[t],
          setItem: async (t) => {
            await e.set(t);
          },
          clear: async () => {
            await e.clear();
          },
        }))(e);
        return {
          getItem: t.getItem,
          setItem: async (e, a) => {
            await t.setItem({ [e]: a });
          },
          clear: () => t.clear(),
        };
      },
      m = async () => {
        const e = d(o),
          t = Object.entries(localStorage);
        for (let a = 0; a < t.length; a++) {
          const [n, r] = t[a];
          try {
            if ("string" == typeof r) {
              const t = JSON.parse(r);
              await e.setItem(n, t);
            }
          } catch (e) {}
        }
      },
      E = async () => {
        const e = d(o),
          t = ((await e.getItem(s.q)) || c.a).map((e) =>
            e.network === c.d.TESTNET
              ? c.h
              : e.network === c.b.network
              ? c.b
              : e
          );
        await e.setItem(s.q, t);
      };
  },
  8: function (e, t, a) {
    "use strict";
    a.d(t, "m", function () {
      return E;
    }),
      a.d(t, "p", function () {
        return p;
      }),
      a.d(t, "s", function () {
        return b;
      }),
      a.d(t, "q", function () {
        return _;
      }),
      a.d(t, "r", function () {
        return h;
      }),
      a.d(t, "f", function () {
        return w;
      }),
      a.d(t, "c", function () {
        return f;
      }),
      a.d(t, "d", function () {
        return g;
      }),
      a.d(t, "o", function () {
        return v;
      }),
      a.d(t, "t", function () {
        return y;
      }),
      a.d(t, "e", function () {
        return O;
      }),
      a.d(t, "b", function () {
        return A;
      }),
      a.d(t, "l", function () {
        return S;
      }),
      a.d(t, "i", function () {
        return N;
      }),
      a.d(t, "k", function () {
        return C;
      }),
      a.d(t, "n", function () {
        return T;
      }),
      a.d(t, "j", function () {
        return k;
      }),
      a.d(t, "g", function () {
        return j;
      }),
      a.d(t, "a", function () {
        return I;
      }),
      a.d(t, "h", function () {
        return D;
      });
    var n = a(9),
      r = a.n(n),
      s = a(6),
      c = a.n(s),
      l = a(201),
      o = a.n(l),
      i = a(20),
      u = a(44),
      d = a(18),
      m = a(39);
    const E = (e) =>
        (null == e ? void 0 : e.isBigNumber) ||
        r.a.isBigNumber(e) ||
        Object(i.f)(e),
      p = (e) => (e ? `${e.slice(0, 4)}…${e.slice(-4)}` : ""),
      b = (e) => p(e),
      _ = (e) => {
        if (!e || -1 === e.indexOf("*")) return e;
        const t = e.split("*")[1];
        return `${e[0]}...*${t}`;
      },
      h = (e) => p(e),
      w = (e) => {
        const t = Object(m.g)(e),
          {
            accountToSign: a,
            url: n,
            transaction: r,
            transactionXdr: s,
            isDomainListedAllowed: c,
            flaggedKeys: l,
            tab: { title: o = "" },
          } = t,
          i = Object(m.e)(n),
          u = n.startsWith("https"),
          { _operations: d = [] } = r,
          E = d.map((e) => e.type);
        return {
          accountToSign: a,
          transaction: r,
          transactionXdr: s,
          domain: i,
          domainTitle: o,
          isHttpsDomain: u,
          operations: d,
          operationTypes: E,
          isDomainListedAllowed: c,
          flaggedKeys: l,
        };
      },
      f = (e) => {
        if ("native" === e) return c.a.Asset.native();
        if (e.includes(":")) {
          const [t, a] = e.split(":");
          return Object(u.l)(a) ? { code: t, issuer: a } : new c.a.Asset(t, a);
        }
        throw new Error("invalid asset canonical id: " + e);
      },
      g = (e, t) => ("XLM" !== e || t ? `${e}:${t}` : "native"),
      v = (e) =>
        e instanceof r.a ? e.dividedBy(1e7) : new r.a(Number(e) / 1e7),
      y = (e) =>
        e instanceof r.a ? e.times(1e7) : new r.a(Math.round(1e7 * Number(e))),
      O = (e, t) => new r.a(t).div(new r.a(e)),
      A = (e) =>
        e
          ? (e.replace("https://", "").replace("www.", ""), e)
          : "Stellar Network",
      S = (e) => e.startsWith("M"),
      N = (e) => e.includes("*"),
      C = (e) => {
        const { networkPassphrase: t, networkUrl: a } = e;
        return t === c.a.Networks.PUBLIC && a === d.f.PUBLIC;
      },
      T = (e) => {
        const { networkPassphrase: t, networkUrl: a } = e;
        return t === c.a.Networks.TESTNET && a === d.f.TESTNET;
      },
      k = (e) => {
        const { networkPassphrase: t, networkUrl: a } = e;
        return t === d.b.networkPassphrase && a === d.f.FUTURENET;
      },
      j = (e, t) => o()(e, t),
      I = "CUSTOM",
      D = (e) => {
        const { network: t } = e;
        return t === I;
      };
  },
  807: function (e, t) {},
  809: function (e, t) {},
  81: function (e, t, a) {
    "use strict";
    a.d(t, "a", function () {
      return c;
    });
    var n = a(0),
      r = a.n(n),
      s = a(1256);
    a(1360);
    const c = ({ children: e, className: t = "", ...a }) =>
      r.a.createElement(
        s.a,
        Object.assign({ className: "SimpleBarWrapper " + t }, a),
        e
      );
  },
  876: function (e, t) {},
  878: function (e, t) {},
  94: function (e, t, a) {
    "use strict";
    var n, r, s, c;
    a.d(t, "b", function () {
      return n;
    }),
      a.d(t, "c", function () {
        return r;
      }),
      a.d(t, "a", function () {
        return c;
      }),
      (function (e) {
        (e.accountMerge = "Account Merge"),
          (e.allowTrust = "Allow Trust"),
          (e.beginSponsoringFutureReserves =
            "Begin Sponsoring Future Reserves"),
          (e.bumpSequence = "Bump Sequence"),
          (e.changeTrust = "Change Trust"),
          (e.claimClaimableBalance = "Claim Claimable Balance"),
          (e.clawback = "Clawback"),
          (e.clawbackClaimableBalance = "Clawback Claimable Balance"),
          (e.createAccount = "Create Account"),
          (e.createClaimableBalance = "Create Claimable Balance"),
          (e.createPassiveSellOffer = "Create Passive Sell Offer"),
          (e.endSponsoringFutureReserves = "End Sponsoring Future Reserves"),
          (e.invokeHostFunction = "Invoke Host Function"),
          (e.liquidityPoolDeposit = "Liquidity Pool Deposit"),
          (e.liquidityPoolWithdraw = "Liquidity Pool Withdraw"),
          (e.manageBuyOffer = "Manage Buy Offer"),
          (e.manageData = "Manage Data"),
          (e.manageSellOffer = "Manage Sell Offer"),
          (e.pathPaymentStrictReceive = "Path Payment Strict Receive"),
          (e.pathPaymentStrictSend = "Path Payment Strict Send"),
          (e.payment = "Payment"),
          (e.revokeAccountSponsorship = "Revoke Account Sponsorship"),
          (e.revokeClaimableBalanceSponsorship =
            "Revoke Claimable Balance Sponsorship"),
          (e.revokeDataSponsorship = "Revoke Data Sponsorship"),
          (e.revokeOfferSponsorship = "Revoke Offer Sponsorship"),
          (e.revokeSignerSponsorship = "Revoke Signer Sponsorship"),
          (e.revokeTrustlineSponsorship = "Revoke Trustline Sponsorship"),
          (e.setOptions = "Set Options"),
          (e.setTrustLineFlags = "Set Trustline Flags");
      })(n || (n = {})),
      (function (e) {
        (e.malicious = "malicious"),
          (e.unsafe = "unsafe"),
          (e.memoRequired = "memo-required");
      })(r || (r = {})),
      (function (e) {
        (e.claimPredicateUnconditional = "Unconditional"),
          (e.claimPredicateConditional = "Conditional"),
          (e.claimPredicateAnd = "And"),
          (e.claimPredicateOr = "Or"),
          (e.claimPredicateNot = "Not"),
          (e.claimPredicateBeforeRelativeTime = "Before Relative Time"),
          (e.claimPredicateBeforeAbsoluteTime = "Before Absolute Time");
      })(s || (s = {})),
      (function (e) {
        (e.authorized = "Authorized"),
          (e.authorizedToMaintainLiabilities =
            "Authorized To Maintain Liabilities"),
          (e.clawbackEnabled = "Clawback Enabled");
      })(c || (c = {}));
  },
});
